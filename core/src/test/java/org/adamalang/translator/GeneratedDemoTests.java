/*
 * This file is subject to the terms and conditions outlined in the
 * file 'LICENSE' (it's dual licensed) located in the root directory
 * near the README.md which you should also read. For more information
 * about the project which owns this file, see https://www.adama-platform.com/ .
 *
 * (c) 2021 - 2023 by Adama Platform Initiative, LLC
 */
package org.adamalang.translator;

import org.junit.Test;

public class GeneratedDemoTests extends GeneratedBase {
  private String cached_BlogMaxSeq_1 = null;
  private String get_BlogMaxSeq_1() {
    if (cached_BlogMaxSeq_1 != null) {
      return cached_BlogMaxSeq_1;
    }
    cached_BlogMaxSeq_1 = generateTestOutput(true, "BlogMaxSeq_1", "./test_code/Demo_BlogMaxSeq_success.a");
    return cached_BlogMaxSeq_1;
  }

  @Test
  public void testBlogMaxSeqEmission() {
    assertEmissionGood(get_BlogMaxSeq_1());
  }

  @Test
  public void testBlogMaxSeqSuccess() {
    assertLivePass(get_BlogMaxSeq_1());
  }

  @Test
  public void testBlogMaxSeqGoodWillHappy() {
    assertGoodWillHappy(get_BlogMaxSeq_1());
  }

  @Test
  public void testBlogMaxSeqExceptionFree() {
    assertExceptionFree(get_BlogMaxSeq_1());
  }

  @Test
  public void testBlogMaxSeqTODOFree() {
    assertTODOFree(get_BlogMaxSeq_1());
  }

  @Test
  public void stable_BlogMaxSeq_1() {
    String live = get_BlogMaxSeq_1();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_BlogMaxSeq_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class BlogMaxSeq_1 extends LivingDocument {");
    gold.append("\n  private final RxInt32 max_db_seq;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += max_db_seq.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public BlogMaxSeq_1(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    max_db_seq = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"max_db_seq\":");
    gold.append("\n            max_db_seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"max_db_seq\":");
    gold.append("\n            max_db_seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"max_db_seq\");");
    gold.append("\n    max_db_seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    max_db_seq.__commit(\"max_db_seq\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    max_db_seq.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaBlogMaxSeq_1 implements DeltaNode {");
    gold.append("\n    private DInt32 __dmax_db_seq;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaBlogMaxSeq_1() {");
    gold.append("\n      __dmax_db_seq = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dmax_db_seq.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(BlogMaxSeq_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dmax_db_seq.show(__item.max_db_seq.get(), __obj.planField(\"max_db_seq\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dmax_db_seq.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    BlogMaxSeq_1 __self = this;");
    gold.append("\n    DeltaBlogMaxSeq_1 __state = new DeltaBlogMaxSeq_1();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxNotifyWrite extends NtMessageBase {");
    gold.append("\n    private final RTxNotifyWrite __this;");
    gold.append("\n    private int db_seq = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"db_seq\");");
    gold.append("\n      __hash.hashInteger(this.db_seq);");
    gold.append("\n      __hash.hashString(\"NotifyWrite\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_NotifyWrite = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_NotifyWrite;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxNotifyWrite(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"db_seq\":");
    gold.append("\n            this.db_seq = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"db_seq\");");
    gold.append("\n      __writer.writeInteger(db_seq);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxNotifyWrite() { __this = this; }");
    gold.append("\n    private RTxNotifyWrite(int db_seq) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.db_seq = db_seq;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxNotifyWrite implements DeltaNode {");
    gold.append("\n    private DInt32 __ddb_seq;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxNotifyWrite() {");
    gold.append("\n      __ddb_seq = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __ddb_seq.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxNotifyWrite __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __ddb_seq.show(__item.db_seq, __obj.planField(\"db_seq\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __ddb_seq.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_notify(CoreRequestContext __context, NtPrincipal __who, RTxNotifyWrite message) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    if (message.db_seq > max_db_seq.get()) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(1);");
    gold.append("\n      max_db_seq.set(message.db_seq);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"notify\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"notify\":");
    gold.append("\n        handleChannelMessage_notify(__context, __context.who, (RTxNotifyWrite) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"notify\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_notify(__task.context(__getKey()), __task.who, (RTxNotifyWrite)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"notify\":");
    gold.append("\n        return new RTxNotifyWrite(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(2);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"max_db_seq\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"NotifyWrite\":{\"nature\":\"native_message\",\"name\":\"NotifyWrite\",\"anonymous\":false,\"fields\":{\"db_seq\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}}},\"channels\":{\"notify\":\"NotifyWrite\"},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:432");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"max_db_seq\":0},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"max_db_seq\":0},\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:630");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"max_db_seq\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"max_db_seq\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"max_db_seq\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_BlogPubSub_2 = null;
  private String get_BlogPubSub_2() {
    if (cached_BlogPubSub_2 != null) {
      return cached_BlogPubSub_2;
    }
    cached_BlogPubSub_2 = generateTestOutput(true, "BlogPubSub_2", "./test_code/Demo_BlogPubSub_success.a");
    return cached_BlogPubSub_2;
  }

  @Test
  public void testBlogPubSubEmission() {
    assertEmissionGood(get_BlogPubSub_2());
  }

  @Test
  public void testBlogPubSubSuccess() {
    assertLivePass(get_BlogPubSub_2());
  }

  @Test
  public void testBlogPubSubGoodWillHappy() {
    assertGoodWillHappy(get_BlogPubSub_2());
  }

  @Test
  public void testBlogPubSubExceptionFree() {
    assertExceptionFree(get_BlogPubSub_2());
  }

  @Test
  public void testBlogPubSubTODOFree() {
    assertTODOFree(get_BlogPubSub_2());
  }

  @Test
  public void stable_BlogPubSub_2() {
    String live = get_BlogPubSub_2();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_BlogPubSub_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class BlogPubSub_2 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxPublish> _publishes;");
    gold.append("\n  private final RxLazy<NtList<RTxPublish>> publishes;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += _publishes.__memory();");
    gold.append("\n    __sum += publishes.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public BlogPubSub_2(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    _publishes = new RxTable<>(__self, this, \"_publishes\", (RxParent __parent) -> new RTxPublish(__parent).__link(), 0);");
    gold.append("\n    publishes = new RxLazy<NtList<RTxPublish>>(this, () -> (_publishes.iterate(false).orderBy(true, __ORDER_Publish_when_a)));");
    gold.append("\n    _publishes.__subscribe(publishes);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_publishes\":");
    gold.append("\n            _publishes.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_publishes\":");
    gold.append("\n            _publishes.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_publishes\");");
    gold.append("\n    _publishes.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    _publishes.__commit(\"_publishes\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    _publishes.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaBlogPubSub_2 implements DeltaNode {");
    gold.append("\n    private int __gpublishes;");
    gold.append("\n    private DRecordList<DeltaRTxPublish> __dpublishes;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaBlogPubSub_2() {");
    gold.append("\n      __gpublishes = -1;");
    gold.append("\n      __dpublishes = new DRecordList<DeltaRTxPublish>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dpublishes.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(BlogPubSub_2 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gpublishes != __item.publishes.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list1 = __obj.planField(\"publishes\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxPublish> __deltaList2 = __dpublishes;");
    gold.append("\n          DRecordList<DeltaRTxPublish>.Walk __deltaListWalker3 = __deltaList2.begin();");
    gold.append("\n          for (RTxPublish __listElement4 : __item.publishes.get()) {");
    gold.append("\n            DeltaRTxPublish __deltaElement5 = __deltaList2.getPrior(__listElement4.__id(), () -> new DeltaRTxPublish());");
    gold.append("\n            __deltaElement5.show(__listElement4, __list1.planField(__listElement4.__id()));");
    gold.append("\n            __deltaListWalker3.next(__listElement4.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker3.end(__list1);");
    gold.append("\n          __list1.end();");
    gold.append("\n        }");
    gold.append("\n        __gpublishes = __item.publishes.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dpublishes.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    BlogPubSub_2 __self = this;");
    gold.append("\n    DeltaBlogPubSub_2 __state = new DeltaBlogPubSub_2();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Publish = new String[] {};");
    gold.append("\n  private class RTxPublish extends RxRecordBase<RTxPublish> {");
    gold.append("\n    private final RTxPublish __this;");
    gold.append("\n    private final RxPrincipal who;");
    gold.append("\n    private final RxInt64 when;");
    gold.append("\n    private final RxString payload;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxPublish(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      who = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      when = new RxInt64(this, 0L);");
    gold.append("\n      payload = new RxString(this, \"\");");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += who.__memory();");
    gold.append("\n      __sum += when.__memory();");
    gold.append("\n      __sum += payload.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Publish;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"who\":");
    gold.append("\n          return who;");
    gold.append("\n        case \"when\":");
    gold.append("\n          return when;");
    gold.append("\n        case \"payload\":");
    gold.append("\n          return payload;");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"payload\":");
    gold.append("\n              payload.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"payload\":");
    gold.append("\n              payload.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      who.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      when.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"payload\");");
    gold.append("\n      payload.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        who.__commit(\"who\", __forward, __reverse);");
    gold.append("\n        when.__commit(\"when\", __forward, __reverse);");
    gold.append("\n        payload.__commit(\"payload\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        who.__revert();");
    gold.append("\n        when.__revert();");
    gold.append("\n        payload.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxPublish __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Publish\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPublish implements DeltaNode {");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private DString __dpayload;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPublish() {");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __dpayload = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      __sum += __dpayload.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPublish __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwho.show(__item.who.get(), __obj.planField(\"who\"));");
    gold.append("\n      __dwhen.show(__item.when.get(), __obj.planField(\"when\"));");
    gold.append("\n      __dpayload.show(__item.payload.get(), __obj.planField(\"payload\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __dpayload.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxPublishMessage extends NtMessageBase {");
    gold.append("\n    private final RTxPublishMessage __this;");
    gold.append("\n    private String payload = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"payload\");");
    gold.append("\n      __hash.hashString(this.payload);");
    gold.append("\n      __hash.hashString(\"PublishMessage\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_PublishMessage = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_PublishMessage;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxPublishMessage(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"payload\":");
    gold.append("\n            this.payload = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"payload\");");
    gold.append("\n      __writer.writeString(payload);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxPublishMessage() { __this = this; }");
    gold.append("\n    private RTxPublishMessage(String payload) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.payload = payload;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPublishMessage implements DeltaNode {");
    gold.append("\n    private DString __dpayload;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPublishMessage() {");
    gold.append("\n      __dpayload = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dpayload.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPublishMessage __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dpayload.show(__item.payload, __obj.planField(\"payload\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dpayload.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_0 __this;");
    gold.append("\n    private String payload = \"\";");
    gold.append("\n    private long when = 0L;");
    gold.append("\n    private NtPrincipal who = NtPrincipal.NO_ONE;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"payload\");");
    gold.append("\n      __hash.hashString(this.payload);");
    gold.append("\n      __hash.hashString(\"when\");");
    gold.append("\n      __hash.hashLong(this.when);");
    gold.append("\n      __hash.hashString(\"who\");");
    gold.append("\n      __hash.hashNtPrincipal(this.who);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_0 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_0;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"payload\":");
    gold.append("\n            this.payload = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          case \"when\":");
    gold.append("\n            this.when = __reader.readLong();");
    gold.append("\n            break;");
    gold.append("\n          case \"who\":");
    gold.append("\n            this.who = __reader.readNtPrincipal();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"payload\");");
    gold.append("\n      __writer.writeString(payload);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      __writer.writeLong(when);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      __writer.writeNtPrincipal(who);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_0(String payload, long when, NtPrincipal who) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.payload = payload;");
    gold.append("\n      this.when = when;");
    gold.append("\n      this.who = who;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DString __dpayload;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dpayload = new DString();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dpayload.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dpayload.show(__item.payload, __obj.planField(\"payload\"));");
    gold.append("\n      __dwhen.show(__item.when, __obj.planField(\"when\"));");
    gold.append("\n      __dwho.show(__item.who, __obj.planField(\"who\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dpayload.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_publish(CoreRequestContext __context, NtPrincipal __who, RTxPublishMessage message) throws AbortMessageException {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxPublish> _AutoRef6 = _publishes;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr8 = new RTx_AnonObjConvert_0(message.payload, __timeNow(), __who);");
    gold.append("\n      RTxPublish _CreateRef7 = _AutoRef6.make();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      _CreateRef7.payload.set(_AutoExpr8.payload);");
    gold.append("\n      _CreateRef7.when.set(_AutoExpr8.when);");
    gold.append("\n      _CreateRef7.who.set(_AutoExpr8.who);");
    gold.append("\n    }");
    gold.append("\n    __track(1);");
    gold.append("\n    (_publishes.iterate(false).where(true, new __CLOSURE_WhereClause0())).map((__item) -> { __item.__delete(); });");
    gold.append("\n    __track(2);");
    gold.append("\n    (_publishes.iterate(false).orderBy(false, __ORDER_Publish_when_d).skip(true, 100)).map((__item) -> { __item.__delete(); });");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"publish\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"publish\":");
    gold.append("\n        handleChannelMessage_publish(__context, __context.who, (RTxPublishMessage) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"publish\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_publish(__task.context(__getKey()), __task.who, (RTxPublishMessage)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"publish\":");
    gold.append("\n        return new RTxPublishMessage(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(3);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxPublish> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPublish __obj) {");
    gold.append("\n      long when = __obj.when.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return when < __timeNow() - 60000;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxPublish> __ORDER_Publish_when_a = new Comparator<RTxPublish>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxPublish __a, RTxPublish __b) {");
    gold.append("\n      return __a.when.compareTo(__b.when);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxPublish> __ORDER_Publish_when_d = new Comparator<RTxPublish>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxPublish __a, RTxPublish __b) {");
    gold.append("\n      return -__a.when.compareTo(__b.when);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"_publishes\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Publish\"},\"privacy\":\"private\"},\"publishes\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Publish\"}},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"Publish\":{\"nature\":\"reactive_record\",\"name\":\"Publish\",\"fields\":{\"who\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"when\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"payload\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"PublishMessage\":{\"nature\":\"native_message\",\"name\":\"PublishMessage\",\"anonymous\":false,\"fields\":{\"payload\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"payload\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"private\"},\"when\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"private\"},\"who\":{\"type\":{\"nature\":\"native_value\",\"type\":\"secure<principal>\"},\"privacy\":\"private\"}}}},\"channels\":{\"publish\":\"PublishMessage\"},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:548");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:666");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"_publishes\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"_publishes\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"_publishes\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_Bomb_3 = null;
  private String get_Bomb_3() {
    if (cached_Bomb_3 != null) {
      return cached_Bomb_3;
    }
    cached_Bomb_3 = generateTestOutput(true, "Bomb_3", "./test_code/Demo_Bomb_success.a");
    return cached_Bomb_3;
  }

  @Test
  public void testBombEmission() {
    assertEmissionGood(get_Bomb_3());
  }

  @Test
  public void testBombSuccess() {
    assertLivePass(get_Bomb_3());
  }

  @Test
  public void testBombGoodWillHappy() {
    assertGoodWillHappy(get_Bomb_3());
  }

  @Test
  public void testBombExceptionFree() {
    assertExceptionFree(get_Bomb_3());
  }

  @Test
  public void testBombTODOFree() {
    assertTODOFree(get_Bomb_3());
  }

  @Test
  public void stable_Bomb_3() {
    String live = get_Bomb_3();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_Bomb_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class Bomb_3 extends LivingDocument {");
    gold.append("\n  private final RxString x;");
    gold.append("\n  private final RxInt32 k;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += x.__memory();");
    gold.append("\n    __sum += k.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Bomb_3(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    x = new RxString(this, \"\");");
    gold.append("\n    k = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"k\":");
    gold.append("\n            k.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"k\":");
    gold.append("\n            k.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"k\");");
    gold.append("\n    k.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n    k.__commit(\"k\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    k.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaBomb_3 implements DeltaNode {");
    gold.append("\n    private DString __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaBomb_3() {");
    gold.append("\n      __dx = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(Bomb_3 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dx.show(__item.x.get(), __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    Bomb_3 __self = this;");
    gold.append("\n    DeltaBomb_3 __state = new DeltaBomb_3();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private void __step_game_setup() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(0);");
    gold.append("\n    x.set(\"Initializing Device\");");
    gold.append("\n    __track(1);");
    gold.append("\n    k.set(0);");
    gold.append("\n    __track(2);");
    gold.append("\n    __transitionStateMachine(\"tick\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_tick() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(3);");
    gold.append("\n    x.set(\"Tick\");");
    gold.append("\n    __track(4);");
    gold.append("\n    __transitionStateMachine(\"tock\", 0.5);");
    gold.append("\n  }");
    gold.append("\n  private void __step_tock() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(5);");
    gold.append("\n    x.set(\"Tock\");");
    gold.append("\n    __track(6);");
    gold.append("\n    k.bumpUpPost();");
    gold.append("\n    __track(7);");
    gold.append("\n    __transitionStateMachine((k.get() < 10 ? \"tick\" : \"end\"), 0.5);");
    gold.append("\n  }");
    gold.append("\n  private void __step_end() {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(8);");
    gold.append("\n    x.set(\"Boom!!!!\");");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"game_setup\":");
    gold.append("\n        __step_game_setup();");
    gold.append("\n        return;");
    gold.append("\n      case \"tick\":");
    gold.append("\n        __step_tick();");
    gold.append("\n        return;");
    gold.append("\n      case \"tock\":");
    gold.append("\n        __step_tock();");
    gold.append("\n        return;");
    gold.append("\n      case \"end\":");
    gold.append("\n        __step_end();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(9);");
    gold.append("\n    return (__who).equals(NtPrincipal.NO_ONE);");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(10);");
    gold.append("\n    __transitionStateMachine(\"game_setup\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"k\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[\"game_setup\",\"tick\",\"tock\",\"end\"]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__state\":\"tick\",\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1,\"x\":\"Initializing Device\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__state\":\"tock\",\"__next_time\":\"525\",\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\nCPU:9");
    gold.append("\nMEMORY:504");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"275\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"275\"} need:true in:250");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"400\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__connection_id\":1,\"__time\":\"400\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null,\"__entropy\":\"7848011421992302230\"} need:true in:125");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"462\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"-8929183248358367000\",\"__time\":\"462\"} need:true in:63");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"seq\":6}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"493\"}-->{\"__messages\":null,\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__time\":\"493\"} need:true in:32");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":7}");
    gold.append("\n+ RANDO DELTA:{\"seq\":7}");
    gold.append("\nMEMORY:718");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"x\":\"Tick\",\"k\":0,\"__state\":\"tock\",\"__constructed\":true,\"__next_time\":\"525\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"493\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"x\":\"Tick\",\"k\":0,\"__state\":\"tock\",\"__constructed\":true,\"__next_time\":\"525\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"493\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"x\":\"Tick\",\"k\":0,\"__state\":\"tock\",\"__constructed\":true,\"__next_time\":\"525\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"493\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_ChatOrder_4 = null;
  private String get_ChatOrder_4() {
    if (cached_ChatOrder_4 != null) {
      return cached_ChatOrder_4;
    }
    cached_ChatOrder_4 = generateTestOutput(true, "ChatOrder_4", "./test_code/Demo_ChatOrder_success.a");
    return cached_ChatOrder_4;
  }

  @Test
  public void testChatOrderEmission() {
    assertEmissionGood(get_ChatOrder_4());
  }

  @Test
  public void testChatOrderSuccess() {
    assertLivePass(get_ChatOrder_4());
  }

  @Test
  public void testChatOrderGoodWillHappy() {
    assertGoodWillHappy(get_ChatOrder_4());
  }

  @Test
  public void testChatOrderExceptionFree() {
    assertExceptionFree(get_ChatOrder_4());
  }

  @Test
  public void testChatOrderTODOFree() {
    assertTODOFree(get_ChatOrder_4());
  }

  @Test
  public void stable_ChatOrder_4() {
    String live = get_ChatOrder_4();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_ChatOrder_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class ChatOrder_4 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxLine> _chat;");
    gold.append("\n  private final RxGuard ___chat;");
    gold.append("\n  public NtList<RTxLine> __COMPUTE_chat(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return (__viewer.ordering ? (_chat.iterate(false).orderBy(true, __ORDER_Line_id_d)) : (_chat.iterate(false).orderBy(true, __ORDER_Line_id_a)));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += _chat.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public ChatOrder_4(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    _chat = new RxTable<>(__self, this, \"_chat\", (RxParent __parent) -> new RTxLine(__parent).__link(), 0);");
    gold.append("\n    ___chat =  new RxGuard();");
    gold.append("\n    _chat.__subscribe(___chat);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_chat\":");
    gold.append("\n            _chat.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_chat\":");
    gold.append("\n            _chat.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_chat\");");
    gold.append("\n    _chat.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    _chat.__commit(\"_chat\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    _chat.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaChatOrder_4 implements DeltaNode {");
    gold.append("\n    private long __gchat;");
    gold.append("\n    private DRecordList<DeltaRTxLine> __dchat;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaChatOrder_4() {");
    gold.append("\n      __gchat = -1;");
    gold.append("\n      __dchat = new DRecordList<DeltaRTxLine>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dchat.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(ChatOrder_4 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      RTx__ViewerType __VIEWER = (RTx__ViewerType) __writer.viewerState;");
    gold.append("\n      long __CHECK = 0;");
    gold.append("\n      __CHECK = __item.___chat.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__gchat != __CHECK)  {");
    gold.append("\n        NtList<RTxLine> __local_chat = __item.__COMPUTE_chat(__writer.who, __VIEWER);");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list1 = __obj.planField(\"chat\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxLine> __deltaList2 = __dchat;");
    gold.append("\n          DRecordList<DeltaRTxLine>.Walk __deltaListWalker3 = __deltaList2.begin();");
    gold.append("\n          for (RTxLine __listElement4 : __local_chat) {");
    gold.append("\n            DeltaRTxLine __deltaElement5 = __deltaList2.getPrior(__listElement4.__id(), () -> new DeltaRTxLine());");
    gold.append("\n            __deltaElement5.show(__listElement4, __list1.planField(__listElement4.__id()));");
    gold.append("\n            __deltaListWalker3.next(__listElement4.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker3.end(__list1);");
    gold.append("\n          __list1.end();");
    gold.append("\n        }");
    gold.append("\n        __gchat = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dchat.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    ChatOrder_4 __self = this;");
    gold.append("\n    DeltaChatOrder_4 __state = new DeltaChatOrder_4();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    private boolean ordering = false;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"ordering\");");
    gold.append("\n      __hash.hashBoolean(this.ordering);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      this.__DATA_GENERATION += 2;");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"ordering\":");
    gold.append("\n            this.ordering = __reader.readBoolean();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"ordering\");");
    gold.append("\n      __writer.writeBoolean(ordering);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n    private RTx__ViewerType(boolean ordering) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.ordering = ordering;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private DBoolean __dordering;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __dordering = new DBoolean();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dordering.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dordering.show(__item.ordering, __obj.planField(\"ordering\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dordering.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Line = new String[] {};");
    gold.append("\n  private class RTxLine extends RxRecordBase<RTxLine> {");
    gold.append("\n    private final RTxLine __this;");
    gold.append("\n    private final RxPrincipal who;");
    gold.append("\n    private final RxString what;");
    gold.append("\n    private final RxInt64 when;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxLine(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      who = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      what = new RxString(this, \"\");");
    gold.append("\n      when = new RxInt64(this, 0L);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += who.__memory();");
    gold.append("\n      __sum += what.__memory();");
    gold.append("\n      __sum += when.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Line;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"who\":");
    gold.append("\n          return who;");
    gold.append("\n        case \"what\":");
    gold.append("\n          return what;");
    gold.append("\n        case \"when\":");
    gold.append("\n          return when;");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"what\":");
    gold.append("\n              what.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"what\":");
    gold.append("\n              what.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      who.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      what.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      when.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        who.__commit(\"who\", __forward, __reverse);");
    gold.append("\n        what.__commit(\"what\", __forward, __reverse);");
    gold.append("\n        when.__commit(\"when\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        who.__revert();");
    gold.append("\n        what.__revert();");
    gold.append("\n        when.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxLine __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Line\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxLine implements DeltaNode {");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxLine() {");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxLine __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwho.show(__item.who.get(), __obj.planField(\"who\"));");
    gold.append("\n      __dwhat.show(__item.what.get(), __obj.planField(\"what\"));");
    gold.append("\n      __dwhen.show(__item.when.get(), __obj.planField(\"when\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxSay extends NtMessageBase {");
    gold.append("\n    private final RTxSay __this;");
    gold.append("\n    private String what = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"what\");");
    gold.append("\n      __hash.hashString(this.what);");
    gold.append("\n      __hash.hashString(\"Say\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_Say = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Say;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxSay(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"what\":");
    gold.append("\n            this.what = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      __writer.writeString(what);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxSay() { __this = this; }");
    gold.append("\n    private RTxSay(String what) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.what = what;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxSay implements DeltaNode {");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxSay() {");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxSay __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwhat.show(__item.what, __obj.planField(\"what\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxFlux extends NtMessageBase {");
    gold.append("\n    private final RTxFlux __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"Flux\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_Flux = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Flux;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxFlux(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxFlux() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxFlux implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxFlux() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxFlux __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_0 __this;");
    gold.append("\n    private String what = \"\";");
    gold.append("\n    private long when = 0L;");
    gold.append("\n    private NtPrincipal who = NtPrincipal.NO_ONE;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"what\");");
    gold.append("\n      __hash.hashString(this.what);");
    gold.append("\n      __hash.hashString(\"when\");");
    gold.append("\n      __hash.hashLong(this.when);");
    gold.append("\n      __hash.hashString(\"who\");");
    gold.append("\n      __hash.hashNtPrincipal(this.who);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_0 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_0;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"what\":");
    gold.append("\n            this.what = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          case \"when\":");
    gold.append("\n            this.when = __reader.readLong();");
    gold.append("\n            break;");
    gold.append("\n          case \"who\":");
    gold.append("\n            this.who = __reader.readNtPrincipal();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      __writer.writeString(what);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      __writer.writeLong(when);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      __writer.writeNtPrincipal(who);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_0(String what, long when, NtPrincipal who) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.what = what;");
    gold.append("\n      this.when = when;");
    gold.append("\n      this.who = who;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwhat.show(__item.what, __obj.planField(\"what\"));");
    gold.append("\n      __dwhen.show(__item.when, __obj.planField(\"when\"));");
    gold.append("\n      __dwho.show(__item.who, __obj.planField(\"who\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[\\\"ordering\\\"]\";");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_say(CoreRequestContext __context, NtPrincipal __who, RTxSay what) throws AbortMessageException {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxLine> _AutoRef6 = _chat;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr8 = new RTx_AnonObjConvert_0(what.what, __timeNow(), __who);");
    gold.append("\n      RTxLine _CreateRef7 = _AutoRef6.make();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      _CreateRef7.what.set(_AutoExpr8.what);");
    gold.append("\n      _CreateRef7.when.set(_AutoExpr8.when);");
    gold.append("\n      _CreateRef7.who.set(_AutoExpr8.who);");
    gold.append("\n    }");
    gold.append("\n    __track(1);");
    gold.append("\n    (_chat.iterate(false).orderBy(false, __ORDER_Line_when_d).skip(true, 5)).map((__item) -> { __item.__delete(); });");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_flux(CoreRequestContext __context, NtPrincipal __who, RTxFlux f) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(2);");
    gold.append("\n    LibArithmetic.ListMath.addToSO((_chat.iterate(false).where(true, new __CLOSURE_WhereClause0(__who))).transform((item) -> item.what), \"x\");");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"flux\":");
    gold.append("\n      case \"say\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"flux\":");
    gold.append("\n        handleChannelMessage_flux(__context, __context.who, (RTxFlux) __message);");
    gold.append("\n        return;");
    gold.append("\n      case \"say\":");
    gold.append("\n        handleChannelMessage_say(__context, __context.who, (RTxSay) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_say(__task.context(__getKey()), __task.who, (RTxSay)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"flux\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_flux(__task.context(__getKey()), __task.who, (RTxFlux)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        return new RTxSay(__reader);");
    gold.append("\n      case \"flux\":");
    gold.append("\n        return new RTxFlux(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(3);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanInvent__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    __map.put(\"maximum_history\", 100);");
    gold.append("\n    __map.put(\"delete_on_close\", false);");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxLine> {");
    gold.append("\n    private NtPrincipal __who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause0(NtPrincipal __who) {");
    gold.append("\n      this.__who = __who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxLine __obj) {");
    gold.append("\n      NtPrincipal who = __obj.who.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (who).equals(__who);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxLine> __ORDER_Line_id_a = new Comparator<RTxLine>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxLine __a, RTxLine __b) {");
    gold.append("\n      return __a.id.compareTo(__b.id);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxLine> __ORDER_Line_id_d = new Comparator<RTxLine>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxLine __a, RTxLine __b) {");
    gold.append("\n      return -__a.id.compareTo(__b.id);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxLine> __ORDER_Line_when_d = new Comparator<RTxLine>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxLine __a, RTxLine __b) {");
    gold.append("\n      return -__a.when.compareTo(__b.when);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"_chat\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Line\"},\"privacy\":\"private\"},\"chat\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Line\"}},\"privacy\":\"bubble\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{\"ordering\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"private\"}}},\"Line\":{\"nature\":\"reactive_record\",\"name\":\"Line\",\"fields\":{\"who\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"what\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"when\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"Say\":{\"nature\":\"native_message\",\"name\":\"Say\",\"anonymous\":false,\"fields\":{\"what\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"Flux\":{\"nature\":\"native_message\",\"name\":\"Flux\",\"anonymous\":false,\"fields\":{}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"what\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"private\"},\"when\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"private\"},\"who\":{\"type\":{\"nature\":\"native_value\",\"type\":\"secure<principal>\"},\"privacy\":\"private\"}}}},\"channels\":{\"flux\":\"Flux\",\"say\":\"Say\"},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:498");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:616");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_DeepTour_5 = null;
  private String get_DeepTour_5() {
    if (cached_DeepTour_5 != null) {
      return cached_DeepTour_5;
    }
    cached_DeepTour_5 = generateTestOutput(true, "DeepTour_5", "./test_code/Demo_DeepTour_success.a");
    return cached_DeepTour_5;
  }

  @Test
  public void testDeepTourEmission() {
    assertEmissionGood(get_DeepTour_5());
  }

  @Test
  public void testDeepTourSuccess() {
    assertLivePass(get_DeepTour_5());
  }

  @Test
  public void testDeepTourGoodWillHappy() {
    assertGoodWillHappy(get_DeepTour_5());
  }

  @Test
  public void testDeepTourExceptionFree() {
    assertExceptionFree(get_DeepTour_5());
  }

  @Test
  public void testDeepTourTODOFree() {
    assertTODOFree(get_DeepTour_5());
  }

  @Test
  public void stable_DeepTour_5() {
    String live = get_DeepTour_5();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_DeepTour_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class DeepTour_5 extends LivingDocument {");
    gold.append("\n  private final RxString name;");
    gold.append("\n  private final RxInt32 x;");
    gold.append("\n  private final RxInt32 y;");
    gold.append("\n  private final RxInt32 bank_balance;");
    gold.append("\n  private final RTxPv pvalue1;");
    gold.append("\n  private final RTxPv pvalue2;");
    gold.append("\n  private final RxTable<RTxCard> deck;");
    gold.append("\n  private final RxInt32 value;");
    gold.append("\n  private final RxTable<RTxR> recs;");
    gold.append("\n  private final RxLazy<NtList<RTxR>> all;");
    gold.append("\n  private final RxInt32 countdown;");
    gold.append("\n  private final RxPrincipal current_player;");
    gold.append("\n  private final RxPrincipal owner;");
    gold.append("\n  private final RxInt32 active;");
    gold.append("\n  private final RxBoolean finished;");
    gold.append("\n  private final RxAsset latest_profile_picture;");
    gold.append("\n  private final RxTable<RTxResource> _resources;");
    gold.append("\n  private final RxLazy<Integer> cards_left;");
    gold.append("\n  private final RxLazy<Boolean> cards_available;");
    gold.append("\n  private final RxGuard ___hand;");
    gold.append("\n  private final RxGuard ___yours;");
    gold.append("\n  public NtList<RTxCard> __COMPUTE_hand(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return deck.iterate(false).where(true, new __CLOSURE_WhereClause4(__who));");
    gold.append("\n  }");
    gold.append("\n  public NtList<RTxR> __COMPUTE_yours(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return recs.iterate(false).where(true, new __CLOSURE_WhereClause3(__who));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += name.__memory();");
    gold.append("\n    __sum += x.__memory();");
    gold.append("\n    __sum += y.__memory();");
    gold.append("\n    __sum += bank_balance.__memory();");
    gold.append("\n    __sum += pvalue1.__memory();");
    gold.append("\n    __sum += pvalue2.__memory();");
    gold.append("\n    __sum += deck.__memory();");
    gold.append("\n    __sum += value.__memory();");
    gold.append("\n    __sum += recs.__memory();");
    gold.append("\n    __sum += all.__memory();");
    gold.append("\n    __sum += countdown.__memory();");
    gold.append("\n    __sum += current_player.__memory();");
    gold.append("\n    __sum += owner.__memory();");
    gold.append("\n    __sum += active.__memory();");
    gold.append("\n    __sum += finished.__memory();");
    gold.append("\n    __sum += latest_profile_picture.__memory();");
    gold.append("\n    __sum += _resources.__memory();");
    gold.append("\n    __sum += cards_left.__memory();");
    gold.append("\n    __sum += cards_available.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public DeepTour_5(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    name = new RxString(this, \"\");");
    gold.append("\n    x = new RxInt32(this, 0);");
    gold.append("\n    y = new RxInt32(this, 0);");
    gold.append("\n    bank_balance = new RxInt32(this, 0);");
    gold.append("\n    pvalue1 = new RTxPv(this);");
    gold.append("\n    pvalue2 = new RTxPv(this);");
    gold.append("\n    deck = new RxTable<>(__self, this, \"deck\", (RxParent __parent) -> new RTxCard(__parent).__link(), 0);");
    gold.append("\n    value = new RxInt32(this, 0);");
    gold.append("\n    recs = new RxTable<>(__self, this, \"recs\", (RxParent __parent) -> new RTxR(__parent).__link(), 0);");
    gold.append("\n    all = new RxLazy<NtList<RTxR>>(this, () -> (recs.iterate(true)));");
    gold.append("\n    countdown = new RxInt32(this, 0);");
    gold.append("\n    current_player = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    owner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    active = new RxInt32(this, 0);");
    gold.append("\n    finished = new RxBoolean(this, false);");
    gold.append("\n    latest_profile_picture = new RxAsset(this, NtAsset.NOTHING);");
    gold.append("\n    _resources = new RxTable<>(__self, this, \"_resources\", (RxParent __parent) -> new RTxResource(__parent).__link(), 0);");
    gold.append("\n    cards_left = new RxLazy<Integer>(this, () -> ((deck.iterate(false).where(true, new __CLOSURE_WhereClause2())).size()));");
    gold.append("\n    cards_available = new RxLazy<Boolean>(this, () -> (cards_left.get() > 0));");
    gold.append("\n    ___hand =  new RxGuard();");
    gold.append("\n    deck.__subscribe(___hand);");
    gold.append("\n    ___yours =  new RxGuard();");
    gold.append("\n    recs.__subscribe(___yours);");
    gold.append("\n    pvalue1.__link();");
    gold.append("\n    pvalue2.__link();");
    gold.append("\n    recs.__subscribe(all);");
    gold.append("\n    deck.__subscribe(cards_left);");
    gold.append("\n    cards_left.__subscribe(cards_available);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"name\":");
    gold.append("\n            name.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y\":");
    gold.append("\n            y.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"bank_balance\":");
    gold.append("\n            bank_balance.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"pvalue1\":");
    gold.append("\n            pvalue1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"pvalue2\":");
    gold.append("\n            pvalue2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"deck\":");
    gold.append("\n            deck.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"value\":");
    gold.append("\n            value.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"recs\":");
    gold.append("\n            recs.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"countdown\":");
    gold.append("\n            countdown.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"current_player\":");
    gold.append("\n            current_player.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"owner\":");
    gold.append("\n            owner.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"active\":");
    gold.append("\n            active.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"finished\":");
    gold.append("\n            finished.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"latest_profile_picture\":");
    gold.append("\n            latest_profile_picture.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_resources\":");
    gold.append("\n            _resources.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"name\":");
    gold.append("\n            name.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y\":");
    gold.append("\n            y.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"bank_balance\":");
    gold.append("\n            bank_balance.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"pvalue1\":");
    gold.append("\n            pvalue1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"pvalue2\":");
    gold.append("\n            pvalue2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"deck\":");
    gold.append("\n            deck.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"value\":");
    gold.append("\n            value.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"recs\":");
    gold.append("\n            recs.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"countdown\":");
    gold.append("\n            countdown.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"current_player\":");
    gold.append("\n            current_player.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"owner\":");
    gold.append("\n            owner.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"active\":");
    gold.append("\n            active.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"finished\":");
    gold.append("\n            finished.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"latest_profile_picture\":");
    gold.append("\n            latest_profile_picture.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_resources\":");
    gold.append("\n            _resources.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n    name.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n    y.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"bank_balance\");");
    gold.append("\n    bank_balance.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"pvalue1\");");
    gold.append("\n    pvalue1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"pvalue2\");");
    gold.append("\n    pvalue2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"deck\");");
    gold.append("\n    deck.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"value\");");
    gold.append("\n    value.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"recs\");");
    gold.append("\n    recs.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"countdown\");");
    gold.append("\n    countdown.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"current_player\");");
    gold.append("\n    current_player.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n    owner.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"active\");");
    gold.append("\n    active.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"finished\");");
    gold.append("\n    finished.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"latest_profile_picture\");");
    gold.append("\n    latest_profile_picture.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_resources\");");
    gold.append("\n    _resources.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    name.__commit(\"name\", __forward, __reverse);");
    gold.append("\n    x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n    y.__commit(\"y\", __forward, __reverse);");
    gold.append("\n    bank_balance.__commit(\"bank_balance\", __forward, __reverse);");
    gold.append("\n    pvalue1.__commit(\"pvalue1\", __forward, __reverse);");
    gold.append("\n    pvalue2.__commit(\"pvalue2\", __forward, __reverse);");
    gold.append("\n    deck.__commit(\"deck\", __forward, __reverse);");
    gold.append("\n    value.__commit(\"value\", __forward, __reverse);");
    gold.append("\n    recs.__commit(\"recs\", __forward, __reverse);");
    gold.append("\n    countdown.__commit(\"countdown\", __forward, __reverse);");
    gold.append("\n    current_player.__commit(\"current_player\", __forward, __reverse);");
    gold.append("\n    owner.__commit(\"owner\", __forward, __reverse);");
    gold.append("\n    active.__commit(\"active\", __forward, __reverse);");
    gold.append("\n    finished.__commit(\"finished\", __forward, __reverse);");
    gold.append("\n    latest_profile_picture.__commit(\"latest_profile_picture\", __forward, __reverse);");
    gold.append("\n    _resources.__commit(\"_resources\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    name.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    y.__revert();");
    gold.append("\n    bank_balance.__revert();");
    gold.append("\n    pvalue1.__revert();");
    gold.append("\n    pvalue2.__revert();");
    gold.append("\n    deck.__revert();");
    gold.append("\n    value.__revert();");
    gold.append("\n    recs.__revert();");
    gold.append("\n    countdown.__revert();");
    gold.append("\n    current_player.__revert();");
    gold.append("\n    owner.__revert();");
    gold.append("\n    active.__revert();");
    gold.append("\n    finished.__revert();");
    gold.append("\n    latest_profile_picture.__revert();");
    gold.append("\n    _resources.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaDeepTour_5 implements DeltaNode {");
    gold.append("\n    private DString __dname;");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private DInt32 __dy;");
    gold.append("\n    private DeltaRTxPv __dpvalue1;");
    gold.append("\n    private DeltaRTxPv __dpvalue2;");
    gold.append("\n    private DInt32 __dvalue;");
    gold.append("\n    private int __gall;");
    gold.append("\n    private DRecordList<DeltaRTxR> __dall;");
    gold.append("\n    private DPrincipal __dcurrent_player;");
    gold.append("\n    private DInt32 __dactive;");
    gold.append("\n    private DBoolean __dfinished;");
    gold.append("\n    private int __gcards_left;");
    gold.append("\n    private DInt32 __dcards_left;");
    gold.append("\n    private int __gcards_available;");
    gold.append("\n    private DBoolean __dcards_available;");
    gold.append("\n    private long __ghand;");
    gold.append("\n    private DRecordList<DeltaRTxCard> __dhand;");
    gold.append("\n    private long __gyours;");
    gold.append("\n    private DRecordList<DeltaRTxR> __dyours;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaDeepTour_5() {");
    gold.append("\n      __dname = new DString();");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __dy = new DInt32();");
    gold.append("\n      __dpvalue1 = new DeltaRTxPv();");
    gold.append("\n      __dpvalue2 = new DeltaRTxPv();");
    gold.append("\n      __dvalue = new DInt32();");
    gold.append("\n      __gall = -1;");
    gold.append("\n      __dall = new DRecordList<DeltaRTxR>();");
    gold.append("\n      __dcurrent_player = new DPrincipal();");
    gold.append("\n      __dactive = new DInt32();");
    gold.append("\n      __dfinished = new DBoolean();");
    gold.append("\n      __gcards_left = -1;");
    gold.append("\n      __dcards_left = new DInt32();");
    gold.append("\n      __gcards_available = -1;");
    gold.append("\n      __dcards_available = new DBoolean();");
    gold.append("\n      __ghand = -1;");
    gold.append("\n      __dhand = new DRecordList<DeltaRTxCard>();");
    gold.append("\n      __gyours = -1;");
    gold.append("\n      __dyours = new DRecordList<DeltaRTxR>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dname.__memory();");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      __sum += __dy.__memory();");
    gold.append("\n      __sum += __dpvalue1.__memory();");
    gold.append("\n      __sum += __dpvalue2.__memory();");
    gold.append("\n      __sum += __dvalue.__memory();");
    gold.append("\n      __sum += __dall.__memory();");
    gold.append("\n      __sum += __dcurrent_player.__memory();");
    gold.append("\n      __sum += __dactive.__memory();");
    gold.append("\n      __sum += __dfinished.__memory();");
    gold.append("\n      __sum += __dcards_left.__memory();");
    gold.append("\n      __sum += __dcards_available.__memory();");
    gold.append("\n      __sum += __dhand.__memory();");
    gold.append("\n      __sum += __dyours.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(DeepTour_5 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 14;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dname.show(__item.name.get(), __obj.planField(\"name\"));");
    gold.append("\n      __dx.show(__item.x.get(), __obj.planField(\"x\"));");
    gold.append("\n      __dy.show(__item.y.get(), __obj.planField(\"y\"));");
    gold.append("\n      __dpvalue1.show(__item.pvalue1, __obj.planField(\"pvalue1\"));");
    gold.append("\n      __dpvalue2.show(__item.pvalue2, __obj.planField(\"pvalue2\"));");
    gold.append("\n      __dvalue.show(__item.value.get(), __obj.planField(\"value\"));");
    gold.append("\n      if (__gall != __item.all.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list12 = __obj.planField(\"all\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxR> __deltaList13 = __dall;");
    gold.append("\n          DRecordList<DeltaRTxR>.Walk __deltaListWalker14 = __deltaList13.begin();");
    gold.append("\n          for (RTxR __listElement15 : __item.all.get()) {");
    gold.append("\n            DeltaRTxR __deltaElement16 = __deltaList13.getPrior(__listElement15.__id(), () -> new DeltaRTxR());");
    gold.append("\n            __deltaElement16.show(__listElement15, __list12.planField(__listElement15.__id()));");
    gold.append("\n            __deltaListWalker14.next(__listElement15.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker14.end(__list12);");
    gold.append("\n          __list12.end();");
    gold.append("\n        }");
    gold.append("\n        __gall = __item.all.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      __dcurrent_player.show(__item.current_player.get(), __obj.planField(\"current_player\"));");
    gold.append("\n      __dactive.show(__item.active.get(), __obj.planField(\"active\"));");
    gold.append("\n      __dfinished.show(__item.finished.get(), __obj.planField(\"finished\"));");
    gold.append("\n      if (__gcards_left != __item.cards_left.getGeneration()) {");
    gold.append("\n        __dcards_left.show(__item.cards_left.get(), __obj.planField(\"cards_left\"));");
    gold.append("\n        __gcards_left = __item.cards_left.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gcards_available != __item.cards_available.getGeneration()) {");
    gold.append("\n        __dcards_available.show(__item.cards_available.get(), __obj.planField(\"cards_available\"));");
    gold.append("\n        __gcards_available = __item.cards_available.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      RTx__ViewerType __VIEWER = (RTx__ViewerType) __writer.viewerState;");
    gold.append("\n      long __CHECK = 0;");
    gold.append("\n      __CHECK = __item.___hand.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__ghand != __CHECK)  {");
    gold.append("\n        NtList<RTxCard> __local_hand = __item.__COMPUTE_hand(__writer.who, __VIEWER);");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list17 = __obj.planField(\"hand\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxCard> __deltaList18 = __dhand;");
    gold.append("\n          DRecordList<DeltaRTxCard>.Walk __deltaListWalker19 = __deltaList18.begin();");
    gold.append("\n          for (RTxCard __listElement20 : __local_hand) {");
    gold.append("\n            DeltaRTxCard __deltaElement21 = __deltaList18.getPrior(__listElement20.__id(), () -> new DeltaRTxCard());");
    gold.append("\n            __deltaElement21.show(__listElement20, __list17.planField(__listElement20.__id()));");
    gold.append("\n            __deltaListWalker19.next(__listElement20.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker19.end(__list17);");
    gold.append("\n          __list17.end();");
    gold.append("\n        }");
    gold.append("\n        __ghand = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      __CHECK = __item.___yours.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__gyours != __CHECK)  {");
    gold.append("\n        NtList<RTxR> __local_yours = __item.__COMPUTE_yours(__writer.who, __VIEWER);");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list22 = __obj.planField(\"yours\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxR> __deltaList23 = __dyours;");
    gold.append("\n          DRecordList<DeltaRTxR>.Walk __deltaListWalker24 = __deltaList23.begin();");
    gold.append("\n          for (RTxR __listElement25 : __local_yours) {");
    gold.append("\n            DeltaRTxR __deltaElement26 = __deltaList23.getPrior(__listElement25.__id(), () -> new DeltaRTxR());");
    gold.append("\n            __deltaElement26.show(__listElement25, __list22.planField(__listElement25.__id()));");
    gold.append("\n            __deltaListWalker24.next(__listElement25.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker24.end(__list22);");
    gold.append("\n          __list22.end();");
    gold.append("\n        }");
    gold.append("\n        __gyours = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dname.clear();");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __dy.clear();");
    gold.append("\n      __dpvalue1.clear();");
    gold.append("\n      __dpvalue2.clear();");
    gold.append("\n      __dvalue.clear();");
    gold.append("\n      __dall.clear();");
    gold.append("\n      __dcurrent_player.clear();");
    gold.append("\n      __dactive.clear();");
    gold.append("\n      __dfinished.clear();");
    gold.append("\n      __dcards_left.clear();");
    gold.append("\n      __dcards_available.clear();");
    gold.append("\n      __dhand.clear();");
    gold.append("\n      __dyours.clear();");
    gold.append("\n      __code_cost += 14;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    DeepTour_5 __self = this;");
    gold.append("\n    DeltaDeepTour_5 __state = new DeltaDeepTour_5();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Pv = new String[] {};");
    gold.append("\n  private class RTxPv extends RxRecordBase<RTxPv> {");
    gold.append("\n    private final RTxPv __this;");
    gold.append("\n    private final RxInt32 x;");
    gold.append("\n    private final RxInt32 y;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxPv(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      x = new RxInt32(this, 0);");
    gold.append("\n      y = new RxInt32(this, 0);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += x.__memory();");
    gold.append("\n      __sum += y.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Pv;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"x\":");
    gold.append("\n          return x;");
    gold.append("\n        case \"y\":");
    gold.append("\n          return y;");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      x.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      y.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n        y.__commit(\"y\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        x.__revert();");
    gold.append("\n        y.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxPv __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Pv\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPv implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPv() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPv __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Card = new String[] {};");
    gold.append("\n  private class RTxCard extends RxRecordBase<RTxCard> {");
    gold.append("\n    private final RTxCard __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxInt32 value;");
    gold.append("\n    private final RxPrincipal owner;");
    gold.append("\n    private final RxInt32 ordering;");
    gold.append("\n    private RTxCard(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      value = new RxInt32(this, 0);");
    gold.append("\n      owner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      ordering = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += value.__memory();");
    gold.append("\n      __sum += owner.__memory();");
    gold.append("\n      __sum += ordering.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Card;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"value\":");
    gold.append("\n          return value;");
    gold.append("\n        case \"owner\":");
    gold.append("\n          return owner;");
    gold.append("\n        case \"ordering\":");
    gold.append("\n          return ordering;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"value\":");
    gold.append("\n              value.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"owner\":");
    gold.append("\n              owner.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"ordering\":");
    gold.append("\n              ordering.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"value\":");
    gold.append("\n              value.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"owner\":");
    gold.append("\n              owner.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"ordering\":");
    gold.append("\n              ordering.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"value\");");
    gold.append("\n      value.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n      owner.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"ordering\");");
    gold.append("\n      ordering.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        value.__commit(\"value\", __forward, __reverse);");
    gold.append("\n        owner.__commit(\"owner\", __forward, __reverse);");
    gold.append("\n        ordering.__commit(\"ordering\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        value.__revert();");
    gold.append("\n        owner.__revert();");
    gold.append("\n        ordering.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxCard __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Card\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxCard implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DInt32 __dvalue;");
    gold.append("\n    private DPrincipal __downer;");
    gold.append("\n    private DInt32 __dordering;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxCard() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dvalue = new DInt32();");
    gold.append("\n      __downer = new DPrincipal();");
    gold.append("\n      __dordering = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      __sum += __dvalue.__memory();");
    gold.append("\n      __sum += __downer.__memory();");
    gold.append("\n      __sum += __dordering.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxCard __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      __dvalue.show(__item.value.get(), __obj.planField(\"value\"));");
    gold.append("\n      __downer.show(__item.owner.get(), __obj.planField(\"owner\"));");
    gold.append("\n      __dordering.show(__item.ordering.get(), __obj.planField(\"ordering\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __dvalue.clear();");
    gold.append("\n      __downer.clear();");
    gold.append("\n      __dordering.clear();");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxPayload extends NtMessageBase {");
    gold.append("\n    private final RTxPayload __this;");
    gold.append("\n    private int value = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"value\");");
    gold.append("\n      __hash.hashInteger(this.value);");
    gold.append("\n      __hash.hashString(\"Payload\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_Payload = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Payload;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxPayload(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"value\":");
    gold.append("\n            this.value = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"value\");");
    gold.append("\n      __writer.writeInteger(value);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxPayload() { __this = this; }");
    gold.append("\n    private RTxPayload(int value) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.value = value;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPayload implements DeltaNode {");
    gold.append("\n    private DInt32 __dvalue;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPayload() {");
    gold.append("\n      __dvalue = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dvalue.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPayload __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dvalue.show(__item.value, __obj.planField(\"value\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dvalue.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxDrawCard extends NtMessageBase {");
    gold.append("\n    private final RTxDrawCard __this;");
    gold.append("\n    private int count = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"count\");");
    gold.append("\n      __hash.hashInteger(this.count);");
    gold.append("\n      __hash.hashString(\"DrawCard\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_DrawCard = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_DrawCard;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxDrawCard(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"count\":");
    gold.append("\n            this.count = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"count\");");
    gold.append("\n      __writer.writeInteger(count);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxDrawCard() { __this = this; }");
    gold.append("\n    private RTxDrawCard(int count) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.count = count;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxDrawCard implements DeltaNode {");
    gold.append("\n    private DInt32 __dcount;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxDrawCard() {");
    gold.append("\n      __dcount = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dcount.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxDrawCard __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dcount.show(__item.count, __obj.planField(\"count\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dcount.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_R = new String[] {};");
    gold.append("\n  private class RTxR extends RxRecordBase<RTxR> {");
    gold.append("\n    private final RTxR __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxPrincipal owner;");
    gold.append("\n    private final RxInt32 super_secret_data;");
    gold.append("\n    private RTxR(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      owner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      super_secret_data = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public boolean __POLICY_see(NtPrincipal __who){");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(0);");
    gold.append("\n      return (__who).equals(owner.get());");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += owner.__memory();");
    gold.append("\n      __sum += super_secret_data.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_R;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"owner\":");
    gold.append("\n          return owner;");
    gold.append("\n        case \"super_secret_data\":");
    gold.append("\n          return super_secret_data;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"owner\":");
    gold.append("\n              owner.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"super_secret_data\":");
    gold.append("\n              super_secret_data.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"owner\":");
    gold.append("\n              owner.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"super_secret_data\":");
    gold.append("\n              super_secret_data.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n      owner.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"super_secret_data\");");
    gold.append("\n      super_secret_data.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        owner.__commit(\"owner\", __forward, __reverse);");
    gold.append("\n        super_secret_data.__commit(\"super_secret_data\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        owner.__revert();");
    gold.append("\n        super_secret_data.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxR __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"R\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxR implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DInt32 __dsuper_secret_data;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxR() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dsuper_secret_data = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      __sum += __dsuper_secret_data.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxR __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      if (!__item.__POLICY_see(__writer.who)) {");
    gold.append("\n        hide(__writer);");
    gold.append("\n        return;");
    gold.append("\n      }");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      if (__item.__POLICY_see(__writer.who)) {");
    gold.append("\n        __dsuper_secret_data.show(__item.super_secret_data.get(), __obj.planField(\"super_secret_data\"));");
    gold.append("\n        /* privacy check close up */");
    gold.append("\n      } else {");
    gold.append("\n        __dsuper_secret_data.hide(__obj.planField(\"super_secret_data\"));");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __dsuper_secret_data.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxMove extends NtMessageBase {");
    gold.append("\n    private final RTxMove __this;");
    gold.append("\n    private int piece = 0;");
    gold.append("\n    private int x = 0;");
    gold.append("\n    private int y = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"piece\");");
    gold.append("\n      __hash.hashInteger(this.piece);");
    gold.append("\n      __hash.hashString(\"x\");");
    gold.append("\n      __hash.hashInteger(this.x);");
    gold.append("\n      __hash.hashString(\"y\");");
    gold.append("\n      __hash.hashInteger(this.y);");
    gold.append("\n      __hash.hashString(\"Move\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_Move = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Move;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxMove(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"piece\":");
    gold.append("\n            this.piece = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          case \"x\":");
    gold.append("\n            this.x = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          case \"y\":");
    gold.append("\n            this.y = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"piece\");");
    gold.append("\n      __writer.writeInteger(piece);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      __writer.writeInteger(x);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      __writer.writeInteger(y);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxMove() { __this = this; }");
    gold.append("\n    private RTxMove(int piece, int x, int y) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.piece = piece;");
    gold.append("\n      this.x = x;");
    gold.append("\n      this.y = y;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxMove implements DeltaNode {");
    gold.append("\n    private DInt32 __dpiece;");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private DInt32 __dy;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxMove() {");
    gold.append("\n      __dpiece = new DInt32();");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __dy = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dpiece.__memory();");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      __sum += __dy.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxMove __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dpiece.show(__item.piece, __obj.planField(\"piece\"));");
    gold.append("\n      __dx.show(__item.x, __obj.planField(\"x\"));");
    gold.append("\n      __dy.show(__item.y, __obj.planField(\"y\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dpiece.clear();");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __dy.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxM extends NtMessageBase {");
    gold.append("\n    private final RTxM __this;");
    gold.append("\n    private String name = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"name\");");
    gold.append("\n      __hash.hashString(this.name);");
    gold.append("\n      __hash.hashString(\"M\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_M = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_M;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxM(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"name\":");
    gold.append("\n            this.name = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n      __writer.writeString(name);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxM() { __this = this; }");
    gold.append("\n    private RTxM(String name) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.name = name;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxM implements DeltaNode {");
    gold.append("\n    private DString __dname;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxM() {");
    gold.append("\n      __dname = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dname.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxM __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dname.show(__item.name, __obj.planField(\"name\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dname.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Resource = new String[] {};");
    gold.append("\n  private class RTxResource extends RxRecordBase<RTxResource> {");
    gold.append("\n    private final RTxResource __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxAsset resource;");
    gold.append("\n    private RTxResource(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      resource = new RxAsset(this, NtAsset.NOTHING);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += resource.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Resource;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"resource\":");
    gold.append("\n          return resource;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"resource\":");
    gold.append("\n              resource.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"resource\":");
    gold.append("\n              resource.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"resource\");");
    gold.append("\n      resource.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        resource.__commit(\"resource\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        resource.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxResource __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Resource\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxResource implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DAsset __dresource;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxResource() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dresource = new DAsset();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      __sum += __dresource.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxResource __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      __dresource.show(__item.resource.get(), __obj.planField(\"resource\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __dresource.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_6 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_6 __this;");
    gold.append("\n    private NtPrincipal owner = NtPrincipal.NO_ONE;");
    gold.append("\n    private int value = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"owner\");");
    gold.append("\n      __hash.hashNtPrincipal(this.owner);");
    gold.append("\n      __hash.hashString(\"value\");");
    gold.append("\n      __hash.hashInteger(this.value);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_6 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_6;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_6(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"owner\":");
    gold.append("\n            this.owner = __reader.readNtPrincipal();");
    gold.append("\n            break;");
    gold.append("\n          case \"value\":");
    gold.append("\n            this.value = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n      __writer.writeNtPrincipal(owner);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"value\");");
    gold.append("\n      __writer.writeInteger(value);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_6() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_6(NtPrincipal owner, int value) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.owner = owner;");
    gold.append("\n      this.value = value;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_6 implements DeltaNode {");
    gold.append("\n    private DPrincipal __downer;");
    gold.append("\n    private DInt32 __dvalue;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_6() {");
    gold.append("\n      __downer = new DPrincipal();");
    gold.append("\n      __dvalue = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __downer.__memory();");
    gold.append("\n      __sum += __dvalue.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_6 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __downer.show(__item.owner, __obj.planField(\"owner\"));");
    gold.append("\n      __dvalue.show(__item.value, __obj.planField(\"value\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __downer.clear();");
    gold.append("\n      __dvalue.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_7 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_7 __this;");
    gold.append("\n    private String html = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"html\");");
    gold.append("\n      __hash.hashString(this.html);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_7 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_7;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_7(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"html\":");
    gold.append("\n            this.html = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"html\");");
    gold.append("\n      __writer.writeString(html);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_7() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_7(String html) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.html = html;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_7 implements DeltaNode {");
    gold.append("\n    private DString __dhtml;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_7() {");
    gold.append("\n      __dhtml = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dhtml.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_7 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dhtml.show(__item.html, __obj.planField(\"html\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dhtml.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_9 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_9 __this;");
    gold.append("\n    private NtAsset asset = NtAsset.NOTHING;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"asset\");");
    gold.append("\n      __hash.hashNtAsset(this.asset);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_9 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_9;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_9(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"asset\":");
    gold.append("\n            this.asset = __reader.readNtAsset();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"asset\");");
    gold.append("\n      __writer.writeNtAsset(asset);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_9() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_9(NtAsset asset) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.asset = asset;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_9 implements DeltaNode {");
    gold.append("\n    private DAsset __dasset;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_9() {");
    gold.append("\n      __dasset = new DAsset();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dasset.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_9 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dasset.show(__item.asset, __obj.planField(\"asset\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dasset.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private int __FUNC_0_code() {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(1);");
    gold.append("\n    int x = 42;");
    gold.append("\n    __track(2);");
    gold.append("\n    {");
    gold.append("\n      int k = 0;");
    gold.append("\n      for (;__goodwill(3, 18, 3, 24) && (k < 10);k++) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(3);");
    gold.append("\n        x++;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(4);");
    gold.append("\n    while (__goodwill(4, 9, 4, 14) && (x > 0)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(5);");
    gold.append("\n      x--;");
    gold.append("\n    }");
    gold.append("\n    __track(6);");
    gold.append("\n    int y = (x + 1) * x;");
    gold.append("\n    __track(7);");
    gold.append("\n    if (((int) x) == ((int) y)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(8);");
    gold.append("\n      y++;");
    gold.append("\n    } else {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(9);");
    gold.append("\n      y--;");
    gold.append("\n    }");
    gold.append("\n    __track(10);");
    gold.append("\n    return y;");
    gold.append("\n  }");
    gold.append("\n  private double __FUNC_1_portion(int x, int y) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(11);");
    gold.append("\n    NtMaybe<Double> m_norm = new NtMaybe<Double>(LibArithmetic.Divide.II(x, (x + y)));");
    gold.append("\n    __track(12);");
    gold.append("\n    NtMaybe<Double> _AutoConditionnorm_27;");
    gold.append("\n    if ((_AutoConditionnorm_27 = m_norm).has()) {");
    gold.append("\n      double norm = _AutoConditionnorm_27.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(13);");
    gold.append("\n      return norm;");
    gold.append("\n    } else {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(14);");
    gold.append("\n      return 0.0;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private double __FUNC_2_len(double x, double y) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(0);");
    gold.append("\n    NtComplex sqr = LibMath.sqrt(x * x + y * y);");
    gold.append("\n    __track(1);");
    gold.append("\n    return sqr.real;");
    gold.append("\n  }");
    gold.append("\n  private void __FUNC_3_shuffle() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(15);");
    gold.append("\n    int new_order = 0;");
    gold.append("\n    __track(16);");
    gold.append("\n    NtList<RxInt32> _auto_28 = (deck.iterate(false).shuffle(true, __random)).transform((item) -> item.ordering);");
    gold.append("\n    for (RxInt32 _auto_29 : _auto_28) {");
    gold.append("\n      _auto_29.set(new_order++);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void __FUNC_4_deal(NtPrincipal player, int count) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(17);");
    gold.append("\n    NtList<RxPrincipal> _auto_30 = (deck.iterate(false).where(false, new __CLOSURE_WhereClause0()).orderBy(false, __ORDER_Card_ordering_a).limit(true, count)).transform((item) -> item.owner);");
    gold.append("\n    for (RxPrincipal _auto_31 : _auto_30) {");
    gold.append("\n      _auto_31.set(player);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void __FUNC_5_next_player() {}");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_set_value(CoreRequestContext __context, NtPrincipal __who, RTxPayload p) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(18);");
    gold.append("\n    value.set(p.value);");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_draw_card(CoreRequestContext __context, NtPrincipal __who, RTxDrawCard dc) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(19);");
    gold.append("\n    NtList<RxPrincipal> _auto_32 = (deck.iterate(false).where(false, new __CLOSURE_WhereClause1()).orderBy(false, __ORDER_Card_ordering_a).limit(true, dc.count)).transform((item) -> item.owner);");
    gold.append("\n    for (RxPrincipal _auto_33 : _auto_32) {");
    gold.append("\n      _auto_33.set(__who);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private final Sink<RTxMove> __queue_ask_move = new Sink<>(\"ask_move\");");
    gold.append("\n  private final NtChannel<RTxMove> ask_move = new NtChannel<>(__futures, __queue_ask_move);");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"set_value\":");
    gold.append("\n      case \"draw_card\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"set_value\":");
    gold.append("\n        handleChannelMessage_set_value(__context, __context.who, (RTxPayload) __message);");
    gold.append("\n        return;");
    gold.append("\n      case \"draw_card\":");
    gold.append("\n        handleChannelMessage_draw_card(__context, __context.who, (RTxDrawCard) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"set_value\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_set_value(__task.context(__getKey()), __task.who, (RTxPayload)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"draw_card\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_draw_card(__task.context(__getKey()), __task.who, (RTxDrawCard)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"ask_move\":");
    gold.append("\n        __queue_ask_move.enqueue(__task, (RTxMove) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"set_value\":");
    gold.append("\n        return new RTxPayload(__reader);");
    gold.append("\n      case \"draw_card\":");
    gold.append("\n        return new RTxDrawCard(__reader);");
    gold.append("\n      case \"ask_move\":");
    gold.append("\n        return new RTxMove(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n    __queue_ask_move.clear();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    WebFragment _0 = __path.at(0);");
    gold.append("\n    if (_0 != null) {");
    gold.append("\n      if (_0.fragment.equals(\"\")) {");
    gold.append("\n        WebFragment _1 = __path.at(1);");
    gold.append("\n        if (_1 != null) {");
    gold.append("\n          /** END:1*/");
    gold.append("\n        } else {");
    gold.append("\n          return __get_J(__request.context.who, __request);");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      if (_0.fragment.equals(\"assets\")) {");
    gold.append("\n        WebFragment _1 = __path.at(1);");
    gold.append("\n        if (_1 != null) {");
    gold.append("\n          if (_1.fragment != null) {");
    gold.append("\n            WebFragment _2 = __path.at(2);");
    gold.append("\n            if (_2 != null) {");
    gold.append("\n              /** END:2*/");
    gold.append("\n            }");
    gold.append("\n            return __get_N(__request.context.who, __request, _1.tail());");
    gold.append("\n");
    gold.append("\n          }");
    gold.append("\n          /** END:1*/");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      /** END:0*/");
    gold.append("\n    }");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private WebResponse __get_J(NtPrincipal __who, WebGet __request){");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(20);");
    gold.append("\n    {");
    gold.append("\n      RTx_AnonObjConvert_7 __capture34 = new RTx_AnonObjConvert_7(\"Hello \" + name.get());");
    gold.append("\n      return new WebResponse().html(__capture34.html);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private WebResponse __get_N(NtPrincipal __who, WebGet __request, String path){");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(21);");
    gold.append("\n    NtMaybe<RTxResource> _AutoConditionfound_35;");
    gold.append("\n    if ((_AutoConditionfound_35 = (_resources.iterate(false).where(true, new __CLOSURE_WhereClause5(path))).lookup(0)).has()) {");
    gold.append("\n      RTxResource found = _AutoConditionfound_35.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(22);");
    gold.append("\n      {");
    gold.append("\n        RTx_AnonObjConvert_9 __capture36 = new RTx_AnonObjConvert_9(found.resource.get());");
    gold.append("\n        return new WebResponse().asset(__capture36.asset);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(23);");
    gold.append("\n    {");
    gold.append("\n      RTx_AnonObjConvert_7 __capture37 = new RTx_AnonObjConvert_7(\"Not Found\");");
    gold.append("\n      return new WebResponse().html(__capture37.html);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    WebFragment _0 = __path.at(0);");
    gold.append("\n    if (_0 != null) {");
    gold.append("\n      if (_0.fragment.equals(\"\")) {");
    gold.append("\n        WebFragment _1 = __path.at(1);");
    gold.append("\n        if (_1 != null) {");
    gold.append("\n          /** END:1*/");
    gold.append("\n        } else {");
    gold.append("\n          return __put_K(__request.context.who, __request);");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      /** END:0*/");
    gold.append("\n    }");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private WebResponse __put_K(NtPrincipal __who, WebPut __request) {");
    gold.append("\n    RTxM m = new RTxM(__request.body());");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(24);");
    gold.append("\n    name.set(m.name);");
    gold.append("\n    __track(25);");
    gold.append("\n    {");
    gold.append("\n      RTx_AnonObjConvert_7 __capture38 = new RTx_AnonObjConvert_7(\"OK\");");
    gold.append("\n      return new WebResponse().html(__capture38.html);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private void __step_bump() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(26);");
    gold.append("\n    countdown.bumpDownPost();");
    gold.append("\n    __track(27);");
    gold.append("\n    if (countdown.get() > 0) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(28);");
    gold.append("\n      __transitionStateMachine(\"bump\", 60);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private void __step_play() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(29);");
    gold.append("\n    final RTxMove move = ask_move.fetchItem(current_player.get()).await();");
    gold.append("\n    __track(30);");
    gold.append("\n    __FUNC_5_next_player();");
    gold.append("\n    __track(31);");
    gold.append("\n    __transitionStateMachine(\"play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_done() {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(32);");
    gold.append("\n    __destroyDocument();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"bump\":");
    gold.append("\n        __step_bump();");
    gold.append("\n        return;");
    gold.append("\n      case \"play\":");
    gold.append("\n        __step_play();");
    gold.append("\n        return;");
    gold.append("\n      case \"done\":");
    gold.append("\n        __step_done();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public void __onLoad__0() {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(33);");
    gold.append("\n    if (((int) deck.size()) == ((int) 52)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(34);");
    gold.append("\n      {");
    gold.append("\n        int k = 0;");
    gold.append("\n        for (;__goodwill(64, 20, 64, 26) && (k < 52);k++) {");
    gold.append("\n          __code_cost += 2;");
    gold.append("\n          __track(35);");
    gold.append("\n          {");
    gold.append("\n            RxTable<RTxCard> _AutoRef39 = deck;");
    gold.append("\n            RTx_AnonObjConvert_6 _AutoExpr41 = new RTx_AnonObjConvert_6(NtPrincipal.NO_ONE, k);");
    gold.append("\n            RTxCard _CreateRef40 = _AutoRef39.make();");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            _CreateRef40.owner.set(_AutoExpr41.owner);");
    gold.append("\n            _CreateRef40.value.set(_AutoExpr41.value);");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(36);");
    gold.append("\n    if ((__who).equals(owner.get()) || LibPrincipal.isAnonymous(__who)) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      __track(37);");
    gold.append("\n      active.bumpUpPost();");
    gold.append("\n      __track(38);");
    gold.append("\n      return true;");
    gold.append("\n    }");
    gold.append("\n    __track(39);");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public void __onDisconnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(40);");
    gold.append("\n    active.bumpDownPost();");
    gold.append("\n  }");
    gold.append("\n  public boolean __delete__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(41);");
    gold.append("\n    return finished.get() && (__who).equals(owner.get());");
    gold.append("\n  }");
    gold.append("\n  public boolean __onCanAssetAttached__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(42);");
    gold.append("\n    return (__who).equals(owner.get());");
    gold.append("\n  }");
    gold.append("\n  public void __onAssetAttached__0(CoreRequestContext __context, NtPrincipal __who, NtAsset a) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(43);");
    gold.append("\n    latest_profile_picture.set(a);");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {");
    gold.append("\n    __onLoad__0();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onCanAssetAttached__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {");
    gold.append("\n    __onAssetAttached__0(__cvalue, __cvalue.who, __pvalue);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__delete__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {");
    gold.append("\n    __onDisconnected__0(__cvalue, __cvalue.who);");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(44);");
    gold.append("\n    {");
    gold.append("\n      int k = 0;");
    gold.append("\n      for (;__goodwill(55, 18, 55, 24) && (k < 52);k++) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(45);");
    gold.append("\n        {");
    gold.append("\n          RxTable<RTxCard> _AutoRef42 = deck;");
    gold.append("\n          RTx_AnonObjConvert_6 _AutoExpr44 = new RTx_AnonObjConvert_6(NtPrincipal.NO_ONE, k);");
    gold.append("\n          RTxCard _CreateRef43 = _AutoRef42.make();");
    gold.append("\n          __code_cost += 2;");
    gold.append("\n          _CreateRef43.owner.set(_AutoExpr44.owner);");
    gold.append("\n          _CreateRef43.value.set(_AutoExpr44.value);");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(46);");
    gold.append("\n    __FUNC_3_shuffle();");
    gold.append("\n  }");
    gold.append("\n  private void __construct_1(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(47);");
    gold.append("\n    countdown.set(10);");
    gold.append("\n    __track(48);");
    gold.append("\n    __transitionStateMachine(\"bump\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __construct_2(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(49);");
    gold.append("\n    owner.set(__who);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n    __construct_1(__context, __context.who, __object);");
    gold.append("\n    __construct_2(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(NtPrincipal.NO_ONE);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause1 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(NtPrincipal.NO_ONE);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause2 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(NtPrincipal.NO_ONE);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause3 implements WhereClause<RTxR> {");
    gold.append("\n    private NtPrincipal __who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause3(NtPrincipal __who) {");
    gold.append("\n      this.__who = __who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxR __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(__who);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause4 implements WhereClause<RTxCard> {");
    gold.append("\n    private NtPrincipal __who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause4(NtPrincipal __who) {");
    gold.append("\n      this.__who = __who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(__who);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause5 implements WhereClause<RTxResource> {");
    gold.append("\n    private String path;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause5(String path) {");
    gold.append("\n      this.path = path;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxResource __obj) {");
    gold.append("\n      NtAsset resource = __obj.resource.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (resource.name()).equals(path);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxCard> __ORDER_Card_ordering_a = new Comparator<RTxCard>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxCard __a, RTxCard __b) {");
    gold.append("\n      return __a.ordering.compareTo(__b.ordering);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"name\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"y\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"bank_balance\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"pvalue1\":{\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Pv\"},\"privacy\":\"public\"},\"pvalue2\":{\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Pv\"},\"privacy\":\"public\"},\"deck\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Card\"},\"privacy\":\"private\"},\"value\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"cards_left\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"cards_available\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"recs\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"R\"},\"privacy\":\"private\"},\"all\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"R\"}},\"privacy\":\"public\"},\"countdown\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"current_player\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"active\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"finished\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"latest_profile_picture\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"asset\"},\"privacy\":\"private\"},\"_resources\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Resource\"},\"privacy\":\"private\"},\"hand\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Card\"}},\"privacy\":\"bubble\"},\"yours\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"R\"}},\"privacy\":\"bubble\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"Pv\":{\"nature\":\"reactive_record\",\"name\":\"Pv\",\"fields\":{\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"y\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"Card\":{\"nature\":\"reactive_record\",\"name\":\"Card\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"value\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"ordering\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"Payload\":{\"nature\":\"native_message\",\"name\":\"Payload\",\"anonymous\":false,\"fields\":{\"value\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"DrawCard\":{\"nature\":\"native_message\",\"name\":\"DrawCard\",\"anonymous\":false,\"fields\":{\"count\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"R\":{\"nature\":\"reactive_record\",\"name\":\"R\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"super_secret_data\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"policy\"}}},\"Move\":{\"nature\":\"native_message\",\"name\":\"Move\",\"anonymous\":false,\"fields\":{\"piece\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"x\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"y\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"M\":{\"nature\":\"native_message\",\"name\":\"M\",\"anonymous\":false,\"fields\":{\"name\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"Resource\":{\"nature\":\"reactive_record\",\"name\":\"Resource\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"resource\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"asset\"},\"privacy\":\"public\"}}},\"_AnonObjConvert_6\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_6\",\"anonymous\":true,\"fields\":{\"owner\":{\"type\":{\"nature\":\"native_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"value\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"_AnonObjConvert_7\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_7\",\"anonymous\":true,\"fields\":{\"html\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"private\"}}},\"_AnonObjConvert_9\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_9\",\"anonymous\":true,\"fields\":{\"asset\":{\"type\":{\"nature\":\"native_value\",\"type\":\"asset\"},\"privacy\":\"private\"}}}},\"channels\":{\"set_value\":\"Payload\",\"ask_move\":\"Move\",\"draw_card\":\"DrawCard\"},\"constructors\":[],\"labels\":[\"bump\",\"play\",\"done\"]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__state\":\"bump\",\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__auto_table_row_id\":52,\"deck\":{\"1\":{\"id\":1,\"value\":0,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":13},\"2\":{\"id\":2,\"value\":1,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":31},\"3\":{\"id\":3,\"value\":2,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":38},\"4\":{\"id\":4,\"value\":3,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"5\":{\"id\":5,\"value\":4,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":4},\"6\":{\"id\":6,\"value\":5,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":46},\"7\":{\"id\":7,\"value\":6,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":16},\"8\":{\"id\":8,\"value\":7,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":14},\"9\":{\"id\":9,\"value\":8,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":11},\"10\":{\"id\":10,\"value\":9,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":5},\"11\":{\"id\":11,\"value\":10,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":17},\"12\":{\"id\":12,\"value\":11,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":44},\"13\":{\"id\":13,\"value\":12,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":27},\"14\":{\"id\":14,\"value\":13,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":18},\"15\":{\"id\":15,\"value\":14,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":45},\"16\":{\"id\":16,\"value\":15,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":49},\"17\":{\"id\":17,\"value\":16,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":8},\"18\":{\"id\":18,\"value\":17,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":35},\"19\":{\"id\":19,\"value\":18,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":23},\"20\":{\"id\":20,\"value\":19,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":34},\"21\":{\"id\":21,\"value\":20,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":21},\"22\":{\"id\":22,\"value\":21,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":19},\"23\":{\"id\":23,\"value\":22,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":43},\"24\":{\"id\":24,\"value\":23,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":36},\"25\":{\"id\":25,\"value\":24,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":26},\"26\":{\"id\":26,\"value\":25,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":39},\"27\":{\"id\":27,\"value\":26,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":3},\"28\":{\"id\":28,\"value\":27,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":1},\"29\":{\"id\":29,\"value\":28,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":30},\"30\":{\"id\":30,\"value\":29,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":41},\"31\":{\"id\":31,\"value\":30,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":47},\"32\":{\"id\":32,\"value\":31,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":15},\"33\":{\"id\":33,\"value\":32,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":7},\"34\":{\"id\":34,\"value\":33,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":12},\"35\":{\"id\":35,\"value\":34,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":25},\"36\":{\"id\":36,\"value\":35,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":6},\"37\":{\"id\":37,\"value\":36,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":37},\"38\":{\"id\":38,\"value\":37,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":22},\"39\":{\"id\":39,\"value\":38,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":42},\"40\":{\"id\":40,\"value\":39,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":28},\"41\":{\"id\":41,\"value\":40,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":20},\"42\":{\"id\":42,\"value\":41,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":10},\"43\":{\"id\":43,\"value\":42,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":2},\"44\":{\"id\":44,\"value\":43,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":9},\"45\":{\"id\":45,\"value\":44,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":51},\"46\":{\"id\":46,\"value\":45,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":50},\"47\":{\"id\":47,\"value\":46,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":32},\"48\":{\"id\":48,\"value\":47,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":29},\"49\":{\"id\":49,\"value\":48,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":33},\"50\":{\"id\":50,\"value\":49,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":40},\"51\":{\"id\":51,\"value\":50,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":48},\"52\":{\"id\":52,\"value\":51,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":24}},\"countdown\":9,\"__messages\":null,\"__next_time\":\"60000\",\"__seq\":1} need:true in:60000");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"30000\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"30000\"} need:true in:30000");
    gold.append("\nCPU:224");
    gold.append("\nMEMORY:15930");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"45000\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"45000\"} need:true in:15000");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"name\":\"\",\"x\":0,\"y\":0,\"value\":0,\"current_player\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"active\":0,\"finished\":false,\"cards_left\":52,\"cards_available\":true,\"hand\":{\"1\":{\"id\":1,\"value\":0,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":13},\"2\":{\"id\":2,\"value\":1,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":31},\"3\":{\"id\":3,\"value\":2,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":38},\"4\":{\"id\":4,\"value\":3,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"5\":{\"id\":5,\"value\":4,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":4},\"6\":{\"id\":6,\"value\":5,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":46},\"7\":{\"id\":7,\"value\":6,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":16},\"8\":{\"id\":8,\"value\":7,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":14},\"9\":{\"id\":9,\"value\":8,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":11},\"10\":{\"id\":10,\"value\":9,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":5},\"11\":{\"id\":11,\"value\":10,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":17},\"12\":{\"id\":12,\"value\":11,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":44},\"13\":{\"id\":13,\"value\":12,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":27},\"14\":{\"id\":14,\"value\":13,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":18},\"15\":{\"id\":15,\"value\":14,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":45},\"16\":{\"id\":16,\"value\":15,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":49},\"17\":{\"id\":17,\"value\":16,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":8},\"18\":{\"id\":18,\"value\":17,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":35},\"19\":{\"id\":19,\"value\":18,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":23},\"20\":{\"id\":20,\"value\":19,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":34},\"21\":{\"id\":21,\"value\":20,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":21},\"22\":{\"id\":22,\"value\":21,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":19},\"23\":{\"id\":23,\"value\":22,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":43},\"24\":{\"id\":24,\"value\":23,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":36},\"25\":{\"id\":25,\"value\":24,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":26},\"26\":{\"id\":26,\"value\":25,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":39},\"27\":{\"id\":27,\"value\":26,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":3},\"28\":{\"id\":28,\"value\":27,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":1},\"29\":{\"id\":29,\"value\":28,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":30},\"30\":{\"id\":30,\"value\":29,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":41},\"31\":{\"id\":31,\"value\":30,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":47},\"32\":{\"id\":32,\"value\":31,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":15},\"33\":{\"id\":33,\"value\":32,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":7},\"34\":{\"id\":34,\"value\":33,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":12},\"35\":{\"id\":35,\"value\":34,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":25},\"36\":{\"id\":36,\"value\":35,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":6},\"37\":{\"id\":37,\"value\":36,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":37},\"38\":{\"id\":38,\"value\":37,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":22},\"39\":{\"id\":39,\"value\":38,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":42},\"40\":{\"id\":40,\"value\":39,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":28},\"41\":{\"id\":41,\"value\":40,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":20},\"42\":{\"id\":42,\"value\":41,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":10},\"43\":{\"id\":43,\"value\":42,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":2},\"44\":{\"id\":44,\"value\":43,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":9},\"45\":{\"id\":45,\"value\":44,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":51},\"46\":{\"id\":46,\"value\":45,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":50},\"47\":{\"id\":47,\"value\":46,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":32},\"48\":{\"id\":48,\"value\":47,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":29},\"49\":{\"id\":49,\"value\":48,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":33},\"50\":{\"id\":50,\"value\":49,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":40},\"51\":{\"id\":51,\"value\":50,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":48},\"52\":{\"id\":52,\"value\":51,\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":24},\"@o\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52]}},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"52500\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__connection_id\":1,\"__time\":\"52500\",\"active\":1,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null,\"__entropy\":\"7848011421992302230\"} need:true in:7500");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"active\":1},\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"56250\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"-8929183248358367000\",\"__time\":\"56250\"} need:true in:3750");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"name\":\"\",\"x\":0,\"y\":0,\"value\":0,\"current_player\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"active\":1,\"finished\":false,\"cards_left\":52,\"cards_available\":true},\"seq\":6}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"58125\"}-->{\"__messages\":null,\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__time\":\"58125\"} need:true in:1875");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":7}");
    gold.append("\n+ RANDO DELTA:{\"seq\":7}");
    gold.append("\nMEMORY:30856");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"name\":\"\",\"x\":0,\"y\":0,\"bank_balance\":0,\"pvalue1\":{\"x\":0,\"y\":0,\"id\":0},\"pvalue2\":{\"x\":0,\"y\":0,\"id\":0},\"deck\":{\"1\":{\"id\":1,\"value\":0,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":13},\"2\":{\"id\":2,\"value\":1,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":31},\"3\":{\"id\":3,\"value\":2,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":38},\"4\":{\"id\":4,\"value\":3,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"5\":{\"id\":5,\"value\":4,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":4},\"6\":{\"id\":6,\"value\":5,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":46},\"7\":{\"id\":7,\"value\":6,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":16},\"8\":{\"id\":8,\"value\":7,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":14},\"9\":{\"id\":9,\"value\":8,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":11},\"10\":{\"id\":10,\"value\":9,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":5},\"11\":{\"id\":11,\"value\":10,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":17},\"12\":{\"id\":12,\"value\":11,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":44},\"13\":{\"id\":13,\"value\":12,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":27},\"14\":{\"id\":14,\"value\":13,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":18},\"15\":{\"id\":15,\"value\":14,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":45},\"16\":{\"id\":16,\"value\":15,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":49},\"17\":{\"id\":17,\"value\":16,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":8},\"18\":{\"id\":18,\"value\":17,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":35},\"19\":{\"id\":19,\"value\":18,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":23},\"20\":{\"id\":20,\"value\":19,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":34},\"21\":{\"id\":21,\"value\":20,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":21},\"22\":{\"id\":22,\"value\":21,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":19},\"23\":{\"id\":23,\"value\":22,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":43},\"24\":{\"id\":24,\"value\":23,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":36},\"25\":{\"id\":25,\"value\":24,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":26},\"26\":{\"id\":26,\"value\":25,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":39},\"27\":{\"id\":27,\"value\":26,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":3},\"28\":{\"id\":28,\"value\":27,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":1},\"29\":{\"id\":29,\"value\":28,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":30},\"30\":{\"id\":30,\"value\":29,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":41},\"31\":{\"id\":31,\"value\":30,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":47},\"32\":{\"id\":32,\"value\":31,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":15},\"33\":{\"id\":33,\"value\":32,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":7},\"34\":{\"id\":34,\"value\":33,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":12},\"35\":{\"id\":35,\"value\":34,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":25},\"36\":{\"id\":36,\"value\":35,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":6},\"37\":{\"id\":37,\"value\":36,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":37},\"38\":{\"id\":38,\"value\":37,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":22},\"39\":{\"id\":39,\"value\":38,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":42},\"40\":{\"id\":40,\"value\":39,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":28},\"41\":{\"id\":41,\"value\":40,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":20},\"42\":{\"id\":42,\"value\":41,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":10},\"43\":{\"id\":43,\"value\":42,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":2},\"44\":{\"id\":44,\"value\":43,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":9},\"45\":{\"id\":45,\"value\":44,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":51},\"46\":{\"id\":46,\"value\":45,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":50},\"47\":{\"id\":47,\"value\":46,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":32},\"48\":{\"id\":48,\"value\":47,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":29},\"49\":{\"id\":49,\"value\":48,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":33},\"50\":{\"id\":50,\"value\":49,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":40},\"51\":{\"id\":51,\"value\":50,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":48},\"52\":{\"id\":52,\"value\":51,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":24}},\"value\":0,\"recs\":{},\"countdown\":9,\"current_player\":{\"agent\":\"?\",\"authority\":\"?\"},\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"active\":1,\"finished\":false,\"latest_profile_picture\":{\"id\":\"\",\"size\":\"0\",\"name\":\"\",\"type\":\"\",\"md5\":\"\",\"sha384\":\"\",\"@gc\":\"@yes\"},\"_resources\":{},\"__state\":\"bump\",\"__constructed\":true,\"__next_time\":\"60000\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"58125\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":52,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"name\":\"\",\"x\":0,\"y\":0,\"bank_balance\":0,\"pvalue1\":{\"x\":0,\"y\":0,\"id\":0},\"pvalue2\":{\"x\":0,\"y\":0,\"id\":0},\"deck\":{\"1\":{\"id\":1,\"value\":0,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":13},\"2\":{\"id\":2,\"value\":1,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":31},\"3\":{\"id\":3,\"value\":2,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":38},\"4\":{\"id\":4,\"value\":3,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"5\":{\"id\":5,\"value\":4,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":4},\"6\":{\"id\":6,\"value\":5,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":46},\"7\":{\"id\":7,\"value\":6,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":16},\"8\":{\"id\":8,\"value\":7,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":14},\"9\":{\"id\":9,\"value\":8,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":11},\"10\":{\"id\":10,\"value\":9,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":5},\"11\":{\"id\":11,\"value\":10,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":17},\"12\":{\"id\":12,\"value\":11,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":44},\"13\":{\"id\":13,\"value\":12,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":27},\"14\":{\"id\":14,\"value\":13,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":18},\"15\":{\"id\":15,\"value\":14,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":45},\"16\":{\"id\":16,\"value\":15,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":49},\"17\":{\"id\":17,\"value\":16,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":8},\"18\":{\"id\":18,\"value\":17,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":35},\"19\":{\"id\":19,\"value\":18,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":23},\"20\":{\"id\":20,\"value\":19,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":34},\"21\":{\"id\":21,\"value\":20,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":21},\"22\":{\"id\":22,\"value\":21,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":19},\"23\":{\"id\":23,\"value\":22,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":43},\"24\":{\"id\":24,\"value\":23,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":36},\"25\":{\"id\":25,\"value\":24,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":26},\"26\":{\"id\":26,\"value\":25,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":39},\"27\":{\"id\":27,\"value\":26,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":3},\"28\":{\"id\":28,\"value\":27,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":1},\"29\":{\"id\":29,\"value\":28,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":30},\"30\":{\"id\":30,\"value\":29,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":41},\"31\":{\"id\":31,\"value\":30,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":47},\"32\":{\"id\":32,\"value\":31,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":15},\"33\":{\"id\":33,\"value\":32,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":7},\"34\":{\"id\":34,\"value\":33,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":12},\"35\":{\"id\":35,\"value\":34,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":25},\"36\":{\"id\":36,\"value\":35,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":6},\"37\":{\"id\":37,\"value\":36,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":37},\"38\":{\"id\":38,\"value\":37,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":22},\"39\":{\"id\":39,\"value\":38,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":42},\"40\":{\"id\":40,\"value\":39,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":28},\"41\":{\"id\":41,\"value\":40,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":20},\"42\":{\"id\":42,\"value\":41,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":10},\"43\":{\"id\":43,\"value\":42,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":2},\"44\":{\"id\":44,\"value\":43,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":9},\"45\":{\"id\":45,\"value\":44,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":51},\"46\":{\"id\":46,\"value\":45,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":50},\"47\":{\"id\":47,\"value\":46,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":32},\"48\":{\"id\":48,\"value\":47,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":29},\"49\":{\"id\":49,\"value\":48,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":33},\"50\":{\"id\":50,\"value\":49,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":40},\"51\":{\"id\":51,\"value\":50,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":48},\"52\":{\"id\":52,\"value\":51,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":24}},\"value\":0,\"recs\":{},\"countdown\":9,\"current_player\":{\"agent\":\"?\",\"authority\":\"?\"},\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"active\":1,\"finished\":false,\"latest_profile_picture\":{\"id\":\"\",\"size\":\"0\",\"name\":\"\",\"type\":\"\",\"md5\":\"\",\"sha384\":\"\",\"@gc\":\"@yes\"},\"_resources\":{},\"__state\":\"bump\",\"__constructed\":true,\"__next_time\":\"60000\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"58125\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":52,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"command\":\"load\",\"timestamp\":\"59062\"}-->{\"__seq\":9,\"__time\":\"59062\",\"__auto_table_row_id\":104,\"deck\":{\"53\":{\"id\":53,\"value\":0,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"54\":{\"id\":54,\"value\":1,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"55\":{\"id\":55,\"value\":2,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"56\":{\"id\":56,\"value\":3,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"57\":{\"id\":57,\"value\":4,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"58\":{\"id\":58,\"value\":5,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"59\":{\"id\":59,\"value\":6,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"60\":{\"id\":60,\"value\":7,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"61\":{\"id\":61,\"value\":8,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"62\":{\"id\":62,\"value\":9,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"63\":{\"id\":63,\"value\":10,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"64\":{\"id\":64,\"value\":11,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"65\":{\"id\":65,\"value\":12,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"66\":{\"id\":66,\"value\":13,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"67\":{\"id\":67,\"value\":14,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"68\":{\"id\":68,\"value\":15,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"69\":{\"id\":69,\"value\":16,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"70\":{\"id\":70,\"value\":17,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"71\":{\"id\":71,\"value\":18,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"72\":{\"id\":72,\"value\":19,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"73\":{\"id\":73,\"value\":20,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"74\":{\"id\":74,\"value\":21,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"75\":{\"id\":75,\"value\":22,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"76\":{\"id\":76,\"value\":23,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"77\":{\"id\":77,\"value\":24,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"78\":{\"id\":78,\"value\":25,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"79\":{\"id\":79,\"value\":26,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"80\":{\"id\":80,\"value\":27,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"81\":{\"id\":81,\"value\":28,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"82\":{\"id\":82,\"value\":29,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"83\":{\"id\":83,\"value\":30,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"84\":{\"id\":84,\"value\":31,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"85\":{\"id\":85,\"value\":32,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"86\":{\"id\":86,\"value\":33,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"87\":{\"id\":87,\"value\":34,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"88\":{\"id\":88,\"value\":35,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"89\":{\"id\":89,\"value\":36,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"90\":{\"id\":90,\"value\":37,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"91\":{\"id\":91,\"value\":38,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"92\":{\"id\":92,\"value\":39,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"93\":{\"id\":93,\"value\":40,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"94\":{\"id\":94,\"value\":41,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"95\":{\"id\":95,\"value\":42,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"96\":{\"id\":96,\"value\":43,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"97\":{\"id\":97,\"value\":44,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"98\":{\"id\":98,\"value\":45,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"99\":{\"id\":99,\"value\":46,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"100\":{\"id\":100,\"value\":47,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"101\":{\"id\":101,\"value\":48,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"102\":{\"id\":102,\"value\":49,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"103\":{\"id\":103,\"value\":50,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"104\":{\"id\":104,\"value\":51,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0}},\"__messages\":null,\"__entropy\":\"5082315122564986995\"} need:true in:938");
    gold.append("\n{\"name\":\"\",\"x\":0,\"y\":0,\"bank_balance\":0,\"pvalue1\":{\"x\":0,\"y\":0,\"id\":0},\"pvalue2\":{\"x\":0,\"y\":0,\"id\":0},\"deck\":{\"1\":{\"id\":1,\"value\":0,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":13},\"2\":{\"id\":2,\"value\":1,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":31},\"3\":{\"id\":3,\"value\":2,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":38},\"4\":{\"id\":4,\"value\":3,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"5\":{\"id\":5,\"value\":4,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":4},\"6\":{\"id\":6,\"value\":5,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":46},\"7\":{\"id\":7,\"value\":6,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":16},\"8\":{\"id\":8,\"value\":7,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":14},\"9\":{\"id\":9,\"value\":8,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":11},\"10\":{\"id\":10,\"value\":9,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":5},\"11\":{\"id\":11,\"value\":10,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":17},\"12\":{\"id\":12,\"value\":11,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":44},\"13\":{\"id\":13,\"value\":12,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":27},\"14\":{\"id\":14,\"value\":13,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":18},\"15\":{\"id\":15,\"value\":14,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":45},\"16\":{\"id\":16,\"value\":15,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":49},\"17\":{\"id\":17,\"value\":16,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":8},\"18\":{\"id\":18,\"value\":17,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":35},\"19\":{\"id\":19,\"value\":18,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":23},\"20\":{\"id\":20,\"value\":19,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":34},\"21\":{\"id\":21,\"value\":20,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":21},\"22\":{\"id\":22,\"value\":21,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":19},\"23\":{\"id\":23,\"value\":22,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":43},\"24\":{\"id\":24,\"value\":23,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":36},\"25\":{\"id\":25,\"value\":24,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":26},\"26\":{\"id\":26,\"value\":25,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":39},\"27\":{\"id\":27,\"value\":26,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":3},\"28\":{\"id\":28,\"value\":27,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":1},\"29\":{\"id\":29,\"value\":28,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":30},\"30\":{\"id\":30,\"value\":29,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":41},\"31\":{\"id\":31,\"value\":30,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":47},\"32\":{\"id\":32,\"value\":31,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":15},\"33\":{\"id\":33,\"value\":32,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":7},\"34\":{\"id\":34,\"value\":33,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":12},\"35\":{\"id\":35,\"value\":34,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":25},\"36\":{\"id\":36,\"value\":35,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":6},\"37\":{\"id\":37,\"value\":36,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":37},\"38\":{\"id\":38,\"value\":37,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":22},\"39\":{\"id\":39,\"value\":38,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":42},\"40\":{\"id\":40,\"value\":39,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":28},\"41\":{\"id\":41,\"value\":40,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":20},\"42\":{\"id\":42,\"value\":41,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":10},\"43\":{\"id\":43,\"value\":42,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":2},\"44\":{\"id\":44,\"value\":43,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":9},\"45\":{\"id\":45,\"value\":44,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":51},\"46\":{\"id\":46,\"value\":45,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":50},\"47\":{\"id\":47,\"value\":46,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":32},\"48\":{\"id\":48,\"value\":47,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":29},\"49\":{\"id\":49,\"value\":48,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":33},\"50\":{\"id\":50,\"value\":49,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":40},\"51\":{\"id\":51,\"value\":50,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":48},\"52\":{\"id\":52,\"value\":51,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":24},\"53\":{\"id\":53,\"value\":0,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"54\":{\"id\":54,\"value\":1,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"55\":{\"id\":55,\"value\":2,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"56\":{\"id\":56,\"value\":3,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"57\":{\"id\":57,\"value\":4,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"58\":{\"id\":58,\"value\":5,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"59\":{\"id\":59,\"value\":6,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"60\":{\"id\":60,\"value\":7,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"61\":{\"id\":61,\"value\":8,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"62\":{\"id\":62,\"value\":9,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"63\":{\"id\":63,\"value\":10,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"64\":{\"id\":64,\"value\":11,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"65\":{\"id\":65,\"value\":12,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"66\":{\"id\":66,\"value\":13,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"67\":{\"id\":67,\"value\":14,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"68\":{\"id\":68,\"value\":15,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"69\":{\"id\":69,\"value\":16,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"70\":{\"id\":70,\"value\":17,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"71\":{\"id\":71,\"value\":18,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"72\":{\"id\":72,\"value\":19,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"73\":{\"id\":73,\"value\":20,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"74\":{\"id\":74,\"value\":21,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"75\":{\"id\":75,\"value\":22,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"76\":{\"id\":76,\"value\":23,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"77\":{\"id\":77,\"value\":24,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"78\":{\"id\":78,\"value\":25,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"79\":{\"id\":79,\"value\":26,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"80\":{\"id\":80,\"value\":27,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"81\":{\"id\":81,\"value\":28,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"82\":{\"id\":82,\"value\":29,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"83\":{\"id\":83,\"value\":30,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"84\":{\"id\":84,\"value\":31,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"85\":{\"id\":85,\"value\":32,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"86\":{\"id\":86,\"value\":33,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"87\":{\"id\":87,\"value\":34,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"88\":{\"id\":88,\"value\":35,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"89\":{\"id\":89,\"value\":36,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"90\":{\"id\":90,\"value\":37,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"91\":{\"id\":91,\"value\":38,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"92\":{\"id\":92,\"value\":39,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"93\":{\"id\":93,\"value\":40,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"94\":{\"id\":94,\"value\":41,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"95\":{\"id\":95,\"value\":42,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"96\":{\"id\":96,\"value\":43,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"97\":{\"id\":97,\"value\":44,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"98\":{\"id\":98,\"value\":45,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"99\":{\"id\":99,\"value\":46,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"100\":{\"id\":100,\"value\":47,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"101\":{\"id\":101,\"value\":48,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"102\":{\"id\":102,\"value\":49,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"103\":{\"id\":103,\"value\":50,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0},\"104\":{\"id\":104,\"value\":51,\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"ordering\":0}},\"value\":0,\"recs\":{},\"countdown\":9,\"current_player\":{\"agent\":\"?\",\"authority\":\"?\"},\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"active\":1,\"finished\":false,\"latest_profile_picture\":{\"id\":\"\",\"size\":\"0\",\"name\":\"\",\"type\":\"\",\"md5\":\"\",\"sha384\":\"\",\"@gc\":\"@yes\"},\"_resources\":{},\"__state\":\"bump\",\"__constructed\":true,\"__next_time\":\"60000\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"5082315122564986995\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"59062\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":104,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\nSKIPPING JSON COMPARE AS A LOAD WAS DETECTED");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_GameHearts_6 = null;
  private String get_GameHearts_6() {
    if (cached_GameHearts_6 != null) {
      return cached_GameHearts_6;
    }
    cached_GameHearts_6 = generateTestOutput(true, "GameHearts_6", "./test_code/Demo_GameHearts_success.a");
    return cached_GameHearts_6;
  }

  @Test
  public void testGameHeartsEmission() {
    assertEmissionGood(get_GameHearts_6());
  }

  @Test
  public void testGameHeartsSuccess() {
    assertLivePass(get_GameHearts_6());
  }

  @Test
  public void testGameHeartsGoodWillHappy() {
    assertGoodWillHappy(get_GameHearts_6());
  }

  @Test
  public void testGameHeartsExceptionFree() {
    assertExceptionFree(get_GameHearts_6());
  }

  @Test
  public void testGameHeartsTODOFree() {
    assertTODOFree(get_GameHearts_6());
  }

  @Test
  public void stable_GameHearts_6() {
    String live = get_GameHearts_6();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_GameHearts_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class GameHearts_6 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxCard> deck;");
    gold.append("\n  private final RxPrincipal owner;");
    gold.append("\n  private final RxTable<RTxPlayer> players;");
    gold.append("\n  private final RxLazy<NtList<RTxPlayer>> people;");
    gold.append("\n  private final RxBoolean playing;");
    gold.append("\n  private final RxEnumInt32 passing_mode;");
    gold.append("\n  private final RxPrincipal player1;");
    gold.append("\n  private final RxPrincipal player2;");
    gold.append("\n  private final RxPrincipal player3;");
    gold.append("\n  private final RxPrincipal player4;");
    gold.append("\n  private final RxPrincipal current;");
    gold.append("\n  private final RxInt32 played;");
    gold.append("\n  private final RxEnumInt32 suit_in_play;");
    gold.append("\n  private final RxBoolean points_played;");
    gold.append("\n  private final RxPrincipal last_winner;");
    gold.append("\n  private final RxInt32 points_awarded;");
    gold.append("\n  private final RxLazy<NtList<RTxCard>> hand;");
    gold.append("\n  private final RxLazy<Integer> players_connected;");
    gold.append("\n  private final RxLazy<Integer> observers_connected;");
    gold.append("\n  private final RxLazy<NtList<RTxPlayer>> players_ordered;");
    gold.append("\n  private final RxLazy<Boolean> ready;");
    gold.append("\n  private final RxLazy<NtList<RTxCard>> in_play;");
    gold.append("\n  private final RxGuard ___my_take;");
    gold.append("\n  public NtList<RTxCard> __COMPUTE_my_take(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return deck.iterate(false).where(true, new __CLOSURE_WhereClause1(__who));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += deck.__memory();");
    gold.append("\n    __sum += owner.__memory();");
    gold.append("\n    __sum += players.__memory();");
    gold.append("\n    __sum += people.__memory();");
    gold.append("\n    __sum += playing.__memory();");
    gold.append("\n    __sum += passing_mode.__memory();");
    gold.append("\n    __sum += player1.__memory();");
    gold.append("\n    __sum += player2.__memory();");
    gold.append("\n    __sum += player3.__memory();");
    gold.append("\n    __sum += player4.__memory();");
    gold.append("\n    __sum += current.__memory();");
    gold.append("\n    __sum += played.__memory();");
    gold.append("\n    __sum += suit_in_play.__memory();");
    gold.append("\n    __sum += points_played.__memory();");
    gold.append("\n    __sum += last_winner.__memory();");
    gold.append("\n    __sum += points_awarded.__memory();");
    gold.append("\n    __sum += hand.__memory();");
    gold.append("\n    __sum += players_connected.__memory();");
    gold.append("\n    __sum += observers_connected.__memory();");
    gold.append("\n    __sum += players_ordered.__memory();");
    gold.append("\n    __sum += ready.__memory();");
    gold.append("\n    __sum += in_play.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public GameHearts_6(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    deck = new RxTable<>(__self, this, \"deck\", (RxParent __parent) -> new RTxCard(__parent).__link(), 0);");
    gold.append("\n    owner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    players = new RxTable<>(__self, this, \"players\", (RxParent __parent) -> new RTxPlayer(__parent).__link(), 0);");
    gold.append("\n    people = new RxLazy<NtList<RTxPlayer>>(this, () -> (players.iterate(false).orderBy(true, __ORDER_Player_play_order_a)));");
    gold.append("\n    playing = new RxBoolean(this, false);");
    gold.append("\n    passing_mode = new RxEnumInt32(this, 0, (__v) -> __EnumFix_PassingMode(__v));");
    gold.append("\n    player1 = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    player2 = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    player3 = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    player4 = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    current = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    played = new RxInt32(this, 0);");
    gold.append("\n    suit_in_play = new RxEnumInt32(this, 1, (__v) -> __EnumFix_Suit(__v));");
    gold.append("\n    points_played = new RxBoolean(this, false);");
    gold.append("\n    last_winner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    points_awarded = new RxInt32(this, 0);");
    gold.append("\n    hand = new RxLazy<NtList<RTxCard>>(this, () -> (deck.iterate(false).where(true, new __CLOSURE_WhereClause0())));");
    gold.append("\n    players_connected = new RxLazy<Integer>(this, () -> ((players.iterate(false).where(true, new __CLOSURE_WhereClause4())).size()));");
    gold.append("\n    observers_connected = new RxLazy<Integer>(this, () -> ((players.iterate(false).where(true, new __CLOSURE_WhereClause5())).size()));");
    gold.append("\n    players_ordered = new RxLazy<NtList<RTxPlayer>>(this, () -> (players.iterate(false).where(false, new __CLOSURE_WhereClause6()).orderBy(true, __ORDER_Player_play_order_a)));");
    gold.append("\n    ready = new RxLazy<Boolean>(this, () -> (((int) players_connected.get()) == ((int) 4)));");
    gold.append("\n    in_play = new RxLazy<NtList<RTxCard>>(this, () -> (deck.iterate(false).where(false, new __CLOSURE_WhereClause33()).orderBy(true, __ORDER_Card_rank_d)));");
    gold.append("\n    ___my_take =  new RxGuard();");
    gold.append("\n    deck.__subscribe(___my_take);");
    gold.append("\n    players.__subscribe(people);");
    gold.append("\n    deck.__subscribe(hand);");
    gold.append("\n    players.__subscribe(players_connected);");
    gold.append("\n    players.__subscribe(observers_connected);");
    gold.append("\n    players.__subscribe(players_ordered);");
    gold.append("\n    players_connected.__subscribe(ready);");
    gold.append("\n    deck.__subscribe(in_play);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"deck\":");
    gold.append("\n            deck.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"owner\":");
    gold.append("\n            owner.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"players\":");
    gold.append("\n            players.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"playing\":");
    gold.append("\n            playing.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"passing_mode\":");
    gold.append("\n            passing_mode.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player1\":");
    gold.append("\n            player1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player2\":");
    gold.append("\n            player2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player3\":");
    gold.append("\n            player3.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player4\":");
    gold.append("\n            player4.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"current\":");
    gold.append("\n            current.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"played\":");
    gold.append("\n            played.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"suit_in_play\":");
    gold.append("\n            suit_in_play.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"points_played\":");
    gold.append("\n            points_played.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"last_winner\":");
    gold.append("\n            last_winner.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"points_awarded\":");
    gold.append("\n            points_awarded.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"deck\":");
    gold.append("\n            deck.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"owner\":");
    gold.append("\n            owner.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"players\":");
    gold.append("\n            players.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"playing\":");
    gold.append("\n            playing.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"passing_mode\":");
    gold.append("\n            passing_mode.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player1\":");
    gold.append("\n            player1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player2\":");
    gold.append("\n            player2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player3\":");
    gold.append("\n            player3.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player4\":");
    gold.append("\n            player4.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"current\":");
    gold.append("\n            current.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"played\":");
    gold.append("\n            played.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"suit_in_play\":");
    gold.append("\n            suit_in_play.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"points_played\":");
    gold.append("\n            points_played.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"last_winner\":");
    gold.append("\n            last_winner.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"points_awarded\":");
    gold.append("\n            points_awarded.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"deck\");");
    gold.append("\n    deck.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n    owner.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"players\");");
    gold.append("\n    players.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"playing\");");
    gold.append("\n    playing.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"passing_mode\");");
    gold.append("\n    passing_mode.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player1\");");
    gold.append("\n    player1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player2\");");
    gold.append("\n    player2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player3\");");
    gold.append("\n    player3.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player4\");");
    gold.append("\n    player4.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"current\");");
    gold.append("\n    current.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"played\");");
    gold.append("\n    played.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"suit_in_play\");");
    gold.append("\n    suit_in_play.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"points_played\");");
    gold.append("\n    points_played.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"last_winner\");");
    gold.append("\n    last_winner.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"points_awarded\");");
    gold.append("\n    points_awarded.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    deck.__commit(\"deck\", __forward, __reverse);");
    gold.append("\n    owner.__commit(\"owner\", __forward, __reverse);");
    gold.append("\n    players.__commit(\"players\", __forward, __reverse);");
    gold.append("\n    playing.__commit(\"playing\", __forward, __reverse);");
    gold.append("\n    passing_mode.__commit(\"passing_mode\", __forward, __reverse);");
    gold.append("\n    player1.__commit(\"player1\", __forward, __reverse);");
    gold.append("\n    player2.__commit(\"player2\", __forward, __reverse);");
    gold.append("\n    player3.__commit(\"player3\", __forward, __reverse);");
    gold.append("\n    player4.__commit(\"player4\", __forward, __reverse);");
    gold.append("\n    current.__commit(\"current\", __forward, __reverse);");
    gold.append("\n    played.__commit(\"played\", __forward, __reverse);");
    gold.append("\n    suit_in_play.__commit(\"suit_in_play\", __forward, __reverse);");
    gold.append("\n    points_played.__commit(\"points_played\", __forward, __reverse);");
    gold.append("\n    last_winner.__commit(\"last_winner\", __forward, __reverse);");
    gold.append("\n    points_awarded.__commit(\"points_awarded\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    deck.__revert();");
    gold.append("\n    owner.__revert();");
    gold.append("\n    players.__revert();");
    gold.append("\n    playing.__revert();");
    gold.append("\n    passing_mode.__revert();");
    gold.append("\n    player1.__revert();");
    gold.append("\n    player2.__revert();");
    gold.append("\n    player3.__revert();");
    gold.append("\n    player4.__revert();");
    gold.append("\n    current.__revert();");
    gold.append("\n    played.__revert();");
    gold.append("\n    suit_in_play.__revert();");
    gold.append("\n    points_played.__revert();");
    gold.append("\n    last_winner.__revert();");
    gold.append("\n    points_awarded.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaGameHearts_6 implements DeltaNode {");
    gold.append("\n    private int __gpeople;");
    gold.append("\n    private DRecordList<DeltaRTxPlayer> __dpeople;");
    gold.append("\n    private DBoolean __dplaying;");
    gold.append("\n    private DInt32 __dpassing_mode;");
    gold.append("\n    private DInt32 __dplayed;");
    gold.append("\n    private DInt32 __dsuit_in_play;");
    gold.append("\n    private DBoolean __dpoints_played;");
    gold.append("\n    private DPrincipal __dlast_winner;");
    gold.append("\n    private DInt32 __dpoints_awarded;");
    gold.append("\n    private int __ghand;");
    gold.append("\n    private DRecordList<DeltaRTxCard> __dhand;");
    gold.append("\n    private int __gplayers_connected;");
    gold.append("\n    private DInt32 __dplayers_connected;");
    gold.append("\n    private int __gobservers_connected;");
    gold.append("\n    private DInt32 __dobservers_connected;");
    gold.append("\n    private int __gplayers_ordered;");
    gold.append("\n    private DRecordList<DeltaRTxPlayer> __dplayers_ordered;");
    gold.append("\n    private int __gready;");
    gold.append("\n    private DBoolean __dready;");
    gold.append("\n    private int __gin_play;");
    gold.append("\n    private DRecordList<DeltaRTxCard> __din_play;");
    gold.append("\n    private long __gmy_take;");
    gold.append("\n    private DRecordList<DeltaRTxCard> __dmy_take;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaGameHearts_6() {");
    gold.append("\n      __gpeople = -1;");
    gold.append("\n      __dpeople = new DRecordList<DeltaRTxPlayer>();");
    gold.append("\n      __dplaying = new DBoolean();");
    gold.append("\n      __dpassing_mode = new DInt32();");
    gold.append("\n      __dplayed = new DInt32();");
    gold.append("\n      __dsuit_in_play = new DInt32();");
    gold.append("\n      __dpoints_played = new DBoolean();");
    gold.append("\n      __dlast_winner = new DPrincipal();");
    gold.append("\n      __dpoints_awarded = new DInt32();");
    gold.append("\n      __ghand = -1;");
    gold.append("\n      __dhand = new DRecordList<DeltaRTxCard>();");
    gold.append("\n      __gplayers_connected = -1;");
    gold.append("\n      __dplayers_connected = new DInt32();");
    gold.append("\n      __gobservers_connected = -1;");
    gold.append("\n      __dobservers_connected = new DInt32();");
    gold.append("\n      __gplayers_ordered = -1;");
    gold.append("\n      __dplayers_ordered = new DRecordList<DeltaRTxPlayer>();");
    gold.append("\n      __gready = -1;");
    gold.append("\n      __dready = new DBoolean();");
    gold.append("\n      __gin_play = -1;");
    gold.append("\n      __din_play = new DRecordList<DeltaRTxCard>();");
    gold.append("\n      __gmy_take = -1;");
    gold.append("\n      __dmy_take = new DRecordList<DeltaRTxCard>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dpeople.__memory();");
    gold.append("\n      __sum += __dplaying.__memory();");
    gold.append("\n      __sum += __dpassing_mode.__memory();");
    gold.append("\n      __sum += __dplayed.__memory();");
    gold.append("\n      __sum += __dsuit_in_play.__memory();");
    gold.append("\n      __sum += __dpoints_played.__memory();");
    gold.append("\n      __sum += __dlast_winner.__memory();");
    gold.append("\n      __sum += __dpoints_awarded.__memory();");
    gold.append("\n      __sum += __dhand.__memory();");
    gold.append("\n      __sum += __dplayers_connected.__memory();");
    gold.append("\n      __sum += __dobservers_connected.__memory();");
    gold.append("\n      __sum += __dplayers_ordered.__memory();");
    gold.append("\n      __sum += __dready.__memory();");
    gold.append("\n      __sum += __din_play.__memory();");
    gold.append("\n      __sum += __dmy_take.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(GameHearts_6 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 15;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gpeople != __item.people.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list3 = __obj.planField(\"people\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxPlayer> __deltaList4 = __dpeople;");
    gold.append("\n          DRecordList<DeltaRTxPlayer>.Walk __deltaListWalker5 = __deltaList4.begin();");
    gold.append("\n          for (RTxPlayer __listElement6 : __item.people.get()) {");
    gold.append("\n            DeltaRTxPlayer __deltaElement7 = __deltaList4.getPrior(__listElement6.__id(), () -> new DeltaRTxPlayer());");
    gold.append("\n            __deltaElement7.show(__listElement6, __list3.planField(__listElement6.__id()));");
    gold.append("\n            __deltaListWalker5.next(__listElement6.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker5.end(__list3);");
    gold.append("\n          __list3.end();");
    gold.append("\n        }");
    gold.append("\n        __gpeople = __item.people.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      __dplaying.show(__item.playing.get(), __obj.planField(\"playing\"));");
    gold.append("\n      __dpassing_mode.show(__item.passing_mode.get(), __obj.planField(\"passing_mode\"));");
    gold.append("\n      __dplayed.show(__item.played.get(), __obj.planField(\"played\"));");
    gold.append("\n      __dsuit_in_play.show(__item.suit_in_play.get(), __obj.planField(\"suit_in_play\"));");
    gold.append("\n      __dpoints_played.show(__item.points_played.get(), __obj.planField(\"points_played\"));");
    gold.append("\n      __dlast_winner.show(__item.last_winner.get(), __obj.planField(\"last_winner\"));");
    gold.append("\n      __dpoints_awarded.show(__item.points_awarded.get(), __obj.planField(\"points_awarded\"));");
    gold.append("\n      if (__ghand != __item.hand.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list8 = __obj.planField(\"hand\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxCard> __deltaList9 = __dhand;");
    gold.append("\n          DRecordList<DeltaRTxCard>.Walk __deltaListWalker10 = __deltaList9.begin();");
    gold.append("\n          for (RTxCard __listElement11 : __item.hand.get()) {");
    gold.append("\n            DeltaRTxCard __deltaElement12 = __deltaList9.getPrior(__listElement11.__id(), () -> new DeltaRTxCard());");
    gold.append("\n            __deltaElement12.show(__listElement11, __list8.planField(__listElement11.__id()));");
    gold.append("\n            __deltaListWalker10.next(__listElement11.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker10.end(__list8);");
    gold.append("\n          __list8.end();");
    gold.append("\n        }");
    gold.append("\n        __ghand = __item.hand.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gplayers_connected != __item.players_connected.getGeneration()) {");
    gold.append("\n        __dplayers_connected.show(__item.players_connected.get(), __obj.planField(\"players_connected\"));");
    gold.append("\n        __gplayers_connected = __item.players_connected.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gobservers_connected != __item.observers_connected.getGeneration()) {");
    gold.append("\n        __dobservers_connected.show(__item.observers_connected.get(), __obj.planField(\"observers_connected\"));");
    gold.append("\n        __gobservers_connected = __item.observers_connected.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gplayers_ordered != __item.players_ordered.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list13 = __obj.planField(\"players_ordered\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxPlayer> __deltaList14 = __dplayers_ordered;");
    gold.append("\n          DRecordList<DeltaRTxPlayer>.Walk __deltaListWalker15 = __deltaList14.begin();");
    gold.append("\n          for (RTxPlayer __listElement16 : __item.players_ordered.get()) {");
    gold.append("\n            DeltaRTxPlayer __deltaElement17 = __deltaList14.getPrior(__listElement16.__id(), () -> new DeltaRTxPlayer());");
    gold.append("\n            __deltaElement17.show(__listElement16, __list13.planField(__listElement16.__id()));");
    gold.append("\n            __deltaListWalker15.next(__listElement16.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker15.end(__list13);");
    gold.append("\n          __list13.end();");
    gold.append("\n        }");
    gold.append("\n        __gplayers_ordered = __item.players_ordered.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gready != __item.ready.getGeneration()) {");
    gold.append("\n        __dready.show(__item.ready.get(), __obj.planField(\"ready\"));");
    gold.append("\n        __gready = __item.ready.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gin_play != __item.in_play.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list18 = __obj.planField(\"in_play\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxCard> __deltaList19 = __din_play;");
    gold.append("\n          DRecordList<DeltaRTxCard>.Walk __deltaListWalker20 = __deltaList19.begin();");
    gold.append("\n          for (RTxCard __listElement21 : __item.in_play.get()) {");
    gold.append("\n            DeltaRTxCard __deltaElement22 = __deltaList19.getPrior(__listElement21.__id(), () -> new DeltaRTxCard());");
    gold.append("\n            __deltaElement22.show(__listElement21, __list18.planField(__listElement21.__id()));");
    gold.append("\n            __deltaListWalker20.next(__listElement21.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker20.end(__list18);");
    gold.append("\n          __list18.end();");
    gold.append("\n        }");
    gold.append("\n        __gin_play = __item.in_play.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      RTx__ViewerType __VIEWER = (RTx__ViewerType) __writer.viewerState;");
    gold.append("\n      long __CHECK = 0;");
    gold.append("\n      __CHECK = __item.___my_take.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__gmy_take != __CHECK)  {");
    gold.append("\n        NtList<RTxCard> __local_my_take = __item.__COMPUTE_my_take(__writer.who, __VIEWER);");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list23 = __obj.planField(\"my_take\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxCard> __deltaList24 = __dmy_take;");
    gold.append("\n          DRecordList<DeltaRTxCard>.Walk __deltaListWalker25 = __deltaList24.begin();");
    gold.append("\n          for (RTxCard __listElement26 : __local_my_take) {");
    gold.append("\n            DeltaRTxCard __deltaElement27 = __deltaList24.getPrior(__listElement26.__id(), () -> new DeltaRTxCard());");
    gold.append("\n            __deltaElement27.show(__listElement26, __list23.planField(__listElement26.__id()));");
    gold.append("\n            __deltaListWalker25.next(__listElement26.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker25.end(__list23);");
    gold.append("\n          __list23.end();");
    gold.append("\n        }");
    gold.append("\n        __gmy_take = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dpeople.clear();");
    gold.append("\n      __dplaying.clear();");
    gold.append("\n      __dpassing_mode.clear();");
    gold.append("\n      __dplayed.clear();");
    gold.append("\n      __dsuit_in_play.clear();");
    gold.append("\n      __dpoints_played.clear();");
    gold.append("\n      __dlast_winner.clear();");
    gold.append("\n      __dpoints_awarded.clear();");
    gold.append("\n      __dhand.clear();");
    gold.append("\n      __dplayers_connected.clear();");
    gold.append("\n      __dobservers_connected.clear();");
    gold.append("\n      __dplayers_ordered.clear();");
    gold.append("\n      __dready.clear();");
    gold.append("\n      __din_play.clear();");
    gold.append("\n      __dmy_take.clear();");
    gold.append("\n      __code_cost += 15;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    GameHearts_6 __self = this;");
    gold.append("\n    DeltaGameHearts_6 __state = new DeltaGameHearts_6();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_Suit = new int[] {1, 2, 3, 4};");
    gold.append("\n  private static final int __EnumCycleNext_Suit(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 4:");
    gold.append("\n        return 1;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_Suit(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n        return 4;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_Suit(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n      case 2:");
    gold.append("\n      case 3:");
    gold.append("\n      case 4:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_Rank = new int[] {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};");
    gold.append("\n  private static final int __EnumCycleNext_Rank(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 14:");
    gold.append("\n        return 2;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_Rank(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 2:");
    gold.append("\n        return 14;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_Rank(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 2:");
    gold.append("\n      case 3:");
    gold.append("\n      case 4:");
    gold.append("\n      case 5:");
    gold.append("\n      case 6:");
    gold.append("\n      case 7:");
    gold.append("\n      case 8:");
    gold.append("\n      case 9:");
    gold.append("\n      case 10:");
    gold.append("\n      case 11:");
    gold.append("\n      case 12:");
    gold.append("\n      case 13:");
    gold.append("\n      case 14:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 2;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_Place = new int[] {1, 2, 3, 4};");
    gold.append("\n  private static final int __EnumCycleNext_Place(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 4:");
    gold.append("\n        return 1;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_Place(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n        return 4;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_Place(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n      case 2:");
    gold.append("\n      case 3:");
    gold.append("\n      case 4:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Card = new String[] {};");
    gold.append("\n  private class RTxCard extends RxRecordBase<RTxCard> {");
    gold.append("\n    private final RTxCard __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxEnumInt32 suit;");
    gold.append("\n    private final RxEnumInt32 rank;");
    gold.append("\n    private final RxPrincipal owner;");
    gold.append("\n    private final RxInt32 ordering;");
    gold.append("\n    private final RxEnumInt32 place;");
    gold.append("\n    private final RxLazy<Integer> points;");
    gold.append("\n    private RTxCard(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      suit = new RxEnumInt32(this, 1, (__v) -> __EnumFix_Suit(__v));");
    gold.append("\n      rank = new RxEnumInt32(this, 2, (__v) -> __EnumFix_Rank(__v));");
    gold.append("\n      owner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      ordering = new RxInt32(this, 0);");
    gold.append("\n      place = new RxEnumInt32(this, 1, (__v) -> __EnumFix_Place(__v));");
    gold.append("\n      points = new RxLazy<Integer>(this, () -> ((((int) suit.get()) == ((int) 2) ? 1 : (((int) suit.get()) == ((int) 3) && ((int) rank.get()) == ((int) 12) ? 13 : 0))));");
    gold.append("\n      points.__subscribe(this);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public boolean __POLICY_p(NtPrincipal __who){");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(0);");
    gold.append("\n      if (((int) place.get()) == ((int) 2) || ((int) place.get()) == ((int) 4)) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(1);");
    gold.append("\n        return (__who).equals(owner.get());");
    gold.append("\n      }");
    gold.append("\n      __track(2);");
    gold.append("\n      if (((int) place.get()) == ((int) 3)) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(3);");
    gold.append("\n        return true;");
    gold.append("\n      }");
    gold.append("\n      __track(4);");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += suit.__memory();");
    gold.append("\n      __sum += rank.__memory();");
    gold.append("\n      __sum += owner.__memory();");
    gold.append("\n      __sum += ordering.__memory();");
    gold.append("\n      __sum += place.__memory();");
    gold.append("\n      __sum += points.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Card;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"suit\":");
    gold.append("\n          return suit;");
    gold.append("\n        case \"rank\":");
    gold.append("\n          return rank;");
    gold.append("\n        case \"owner\":");
    gold.append("\n          return owner;");
    gold.append("\n        case \"ordering\":");
    gold.append("\n          return ordering;");
    gold.append("\n        case \"place\":");
    gold.append("\n          return place;");
    gold.append("\n        case \"points\":");
    gold.append("\n          return points;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"suit\":");
    gold.append("\n              suit.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"rank\":");
    gold.append("\n              rank.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"owner\":");
    gold.append("\n              owner.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"ordering\":");
    gold.append("\n              ordering.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"place\":");
    gold.append("\n              place.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"suit\":");
    gold.append("\n              suit.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"rank\":");
    gold.append("\n              rank.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"owner\":");
    gold.append("\n              owner.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"ordering\":");
    gold.append("\n              ordering.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"place\":");
    gold.append("\n              place.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"suit\");");
    gold.append("\n      suit.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"rank\");");
    gold.append("\n      rank.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n      owner.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"ordering\");");
    gold.append("\n      ordering.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"place\");");
    gold.append("\n      place.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        suit.__commit(\"suit\", __forward, __reverse);");
    gold.append("\n        rank.__commit(\"rank\", __forward, __reverse);");
    gold.append("\n        owner.__commit(\"owner\", __forward, __reverse);");
    gold.append("\n        ordering.__commit(\"ordering\", __forward, __reverse);");
    gold.append("\n        place.__commit(\"place\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        suit.__revert();");
    gold.append("\n        rank.__revert();");
    gold.append("\n        owner.__revert();");
    gold.append("\n        ordering.__revert();");
    gold.append("\n        place.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxCard __link() {");
    gold.append("\n      suit.__subscribe(points);");
    gold.append("\n      rank.__subscribe(points);");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Card\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxCard implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DInt32 __dsuit;");
    gold.append("\n    private DInt32 __drank;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxCard() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dsuit = new DInt32();");
    gold.append("\n      __drank = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      __sum += __dsuit.__memory();");
    gold.append("\n      __sum += __drank.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxCard __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      if (!__item.__POLICY_p(__writer.who)) {");
    gold.append("\n        hide(__writer);");
    gold.append("\n        return;");
    gold.append("\n      }");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      __dsuit.show(__item.suit.get(), __obj.planField(\"suit\"));");
    gold.append("\n      __drank.show(__item.rank.get(), __obj.planField(\"rank\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __dsuit.clear();");
    gold.append("\n      __drank.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxEmpty extends NtMessageBase {");
    gold.append("\n    private final RTxEmpty __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"Empty\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_Empty = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Empty;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxEmpty(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxEmpty() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxEmpty implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxEmpty() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxEmpty __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Player = new String[] {};");
    gold.append("\n  private class RTxPlayer extends RxRecordBase<RTxPlayer> {");
    gold.append("\n    private final RTxPlayer __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxPrincipal link;");
    gold.append("\n    private final RxBoolean playing;");
    gold.append("\n    private final RxInt32 points;");
    gold.append("\n    private final RxBoolean leader;");
    gold.append("\n    private final RxInt32 play_order;");
    gold.append("\n    private RTxPlayer(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      link = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      playing = new RxBoolean(this, false);");
    gold.append("\n      points = new RxInt32(this, 0);");
    gold.append("\n      leader = new RxBoolean(this, false);");
    gold.append("\n      play_order = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += link.__memory();");
    gold.append("\n      __sum += playing.__memory();");
    gold.append("\n      __sum += points.__memory();");
    gold.append("\n      __sum += leader.__memory();");
    gold.append("\n      __sum += play_order.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Player;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"link\":");
    gold.append("\n          return link;");
    gold.append("\n        case \"playing\":");
    gold.append("\n          return playing;");
    gold.append("\n        case \"points\":");
    gold.append("\n          return points;");
    gold.append("\n        case \"leader\":");
    gold.append("\n          return leader;");
    gold.append("\n        case \"play_order\":");
    gold.append("\n          return play_order;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"link\":");
    gold.append("\n              link.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"playing\":");
    gold.append("\n              playing.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"points\":");
    gold.append("\n              points.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"leader\":");
    gold.append("\n              leader.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"play_order\":");
    gold.append("\n              play_order.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"link\":");
    gold.append("\n              link.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"playing\":");
    gold.append("\n              playing.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"points\":");
    gold.append("\n              points.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"leader\":");
    gold.append("\n              leader.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"play_order\":");
    gold.append("\n              play_order.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"link\");");
    gold.append("\n      link.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"playing\");");
    gold.append("\n      playing.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"points\");");
    gold.append("\n      points.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"leader\");");
    gold.append("\n      leader.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"play_order\");");
    gold.append("\n      play_order.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        link.__commit(\"link\", __forward, __reverse);");
    gold.append("\n        playing.__commit(\"playing\", __forward, __reverse);");
    gold.append("\n        points.__commit(\"points\", __forward, __reverse);");
    gold.append("\n        leader.__commit(\"leader\", __forward, __reverse);");
    gold.append("\n        play_order.__commit(\"play_order\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        link.__revert();");
    gold.append("\n        playing.__revert();");
    gold.append("\n        points.__revert();");
    gold.append("\n        leader.__revert();");
    gold.append("\n        play_order.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxPlayer __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Player\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPlayer implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DPrincipal __dlink;");
    gold.append("\n    private DInt32 __dpoints;");
    gold.append("\n    private DBoolean __dleader;");
    gold.append("\n    private DInt32 __dplay_order;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPlayer() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dlink = new DPrincipal();");
    gold.append("\n      __dpoints = new DInt32();");
    gold.append("\n      __dleader = new DBoolean();");
    gold.append("\n      __dplay_order = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      __sum += __dlink.__memory();");
    gold.append("\n      __sum += __dpoints.__memory();");
    gold.append("\n      __sum += __dleader.__memory();");
    gold.append("\n      __sum += __dplay_order.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPlayer __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      __dlink.show(__item.link.get(), __obj.planField(\"link\"));");
    gold.append("\n      __dpoints.show(__item.points.get(), __obj.planField(\"points\"));");
    gold.append("\n      if (__writer.who.equals(__item.link.get())) {");
    gold.append("\n        __dleader.show(__item.leader.get(), __obj.planField(\"leader\"));");
    gold.append("\n        /* privacy check close up */");
    gold.append("\n      } else {");
    gold.append("\n        __dleader.hide(__obj.planField(\"leader\"));");
    gold.append("\n      }");
    gold.append("\n      if (__writer.who.equals(__item.link.get())) {");
    gold.append("\n        __dplay_order.show(__item.play_order.get(), __obj.planField(\"play_order\"));");
    gold.append("\n        /* privacy check close up */");
    gold.append("\n      } else {");
    gold.append("\n        __dplay_order.hide(__obj.planField(\"play_order\"));");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __dlink.clear();");
    gold.append("\n      __dpoints.clear();");
    gold.append("\n      __dleader.clear();");
    gold.append("\n      __dplay_order.clear();");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_LeaderAction = new int[] {1, 2, 3, 10};");
    gold.append("\n  private static final int __EnumCycleNext_LeaderAction(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 3:");
    gold.append("\n        return 10;");
    gold.append("\n      case 10:");
    gold.append("\n        return 1;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_LeaderAction(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n        return 10;");
    gold.append("\n      case 10:");
    gold.append("\n        return 3;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_LeaderAction(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n      case 2:");
    gold.append("\n      case 3:");
    gold.append("\n      case 10:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxLeaderActionMessage extends NtMessageBase {");
    gold.append("\n    private final RTxLeaderActionMessage __this;");
    gold.append("\n    private int action = 0;");
    gold.append("\n    private int id = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"action\");");
    gold.append("\n      __hash.hashInteger(this.action);");
    gold.append("\n      __hash.hashString(\"id\");");
    gold.append("\n      __hash.hashInteger(this.id);");
    gold.append("\n      __hash.hashString(\"LeaderActionMessage\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_LeaderActionMessage = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_LeaderActionMessage;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxLeaderActionMessage(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"action\":");
    gold.append("\n            this.action = __EnumFix_LeaderAction(__reader.readInteger());");
    gold.append("\n            break;");
    gold.append("\n          case \"id\":");
    gold.append("\n            this.id = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"action\");");
    gold.append("\n      __writer.writeInteger(action);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      __writer.writeInteger(id);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxLeaderActionMessage() { __this = this; }");
    gold.append("\n    private RTxLeaderActionMessage(int action, int id) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.action = action;");
    gold.append("\n      this.id = id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxLeaderActionMessage implements DeltaNode {");
    gold.append("\n    private DInt32 __daction;");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxLeaderActionMessage() {");
    gold.append("\n      __daction = new DInt32();");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __daction.__memory();");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxLeaderActionMessage __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __daction.show(__item.action, __obj.planField(\"action\"));");
    gold.append("\n      __did.show(__item.id, __obj.planField(\"id\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __daction.clear();");
    gold.append("\n      __did.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_PassingMode = new int[] {0, 1, 2, 3};");
    gold.append("\n  private static final int __EnumCycleNext_PassingMode(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 3:");
    gold.append("\n        return 0;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_PassingMode(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 0:");
    gold.append("\n        return 3;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_PassingMode(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 0:");
    gold.append("\n      case 1:");
    gold.append("\n      case 2:");
    gold.append("\n      case 3:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 0;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxCardDecision extends NtMessageBase {");
    gold.append("\n    private final RTxCardDecision __this;");
    gold.append("\n    private int id = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"id\");");
    gold.append("\n      __hash.hashInteger(this.id);");
    gold.append("\n      __hash.hashString(\"CardDecision\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_CardDecision = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_CardDecision;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxCardDecision(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"id\":");
    gold.append("\n            this.id = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      __writer.writeInteger(id);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxCardDecision() { __this = this; }");
    gold.append("\n    private RTxCardDecision(int id) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.id = id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxCardDecision implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxCardDecision() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxCardDecision __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id, __obj.planField(\"id\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_0 __this;");
    gold.append("\n    private boolean leader = false;");
    gold.append("\n    private NtPrincipal link = NtPrincipal.NO_ONE;");
    gold.append("\n    private int play_order = 0;");
    gold.append("\n    private boolean playing = false;");
    gold.append("\n    private int points = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"leader\");");
    gold.append("\n      __hash.hashBoolean(this.leader);");
    gold.append("\n      __hash.hashString(\"link\");");
    gold.append("\n      __hash.hashNtPrincipal(this.link);");
    gold.append("\n      __hash.hashString(\"play_order\");");
    gold.append("\n      __hash.hashInteger(this.play_order);");
    gold.append("\n      __hash.hashString(\"playing\");");
    gold.append("\n      __hash.hashBoolean(this.playing);");
    gold.append("\n      __hash.hashString(\"points\");");
    gold.append("\n      __hash.hashInteger(this.points);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_0 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_0;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"leader\":");
    gold.append("\n            this.leader = __reader.readBoolean();");
    gold.append("\n            break;");
    gold.append("\n          case \"link\":");
    gold.append("\n            this.link = __reader.readNtPrincipal();");
    gold.append("\n            break;");
    gold.append("\n          case \"play_order\":");
    gold.append("\n            this.play_order = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          case \"playing\":");
    gold.append("\n            this.playing = __reader.readBoolean();");
    gold.append("\n            break;");
    gold.append("\n          case \"points\":");
    gold.append("\n            this.points = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"leader\");");
    gold.append("\n      __writer.writeBoolean(leader);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"link\");");
    gold.append("\n      __writer.writeNtPrincipal(link);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"play_order\");");
    gold.append("\n      __writer.writeInteger(play_order);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"playing\");");
    gold.append("\n      __writer.writeBoolean(playing);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"points\");");
    gold.append("\n      __writer.writeInteger(points);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_0(boolean leader, NtPrincipal link, int play_order, boolean playing, int points) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.leader = leader;");
    gold.append("\n      this.link = link;");
    gold.append("\n      this.play_order = play_order;");
    gold.append("\n      this.playing = playing;");
    gold.append("\n      this.points = points;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DBoolean __dleader;");
    gold.append("\n    private DPrincipal __dlink;");
    gold.append("\n    private DInt32 __dplay_order;");
    gold.append("\n    private DBoolean __dplaying;");
    gold.append("\n    private DInt32 __dpoints;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dleader = new DBoolean();");
    gold.append("\n      __dlink = new DPrincipal();");
    gold.append("\n      __dplay_order = new DInt32();");
    gold.append("\n      __dplaying = new DBoolean();");
    gold.append("\n      __dpoints = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dleader.__memory();");
    gold.append("\n      __sum += __dlink.__memory();");
    gold.append("\n      __sum += __dplay_order.__memory();");
    gold.append("\n      __sum += __dplaying.__memory();");
    gold.append("\n      __sum += __dpoints.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dleader.show(__item.leader, __obj.planField(\"leader\"));");
    gold.append("\n      __dlink.show(__item.link, __obj.planField(\"link\"));");
    gold.append("\n      __dplay_order.show(__item.play_order, __obj.planField(\"play_order\"));");
    gold.append("\n      __dplaying.show(__item.playing, __obj.planField(\"playing\"));");
    gold.append("\n      __dpoints.show(__item.points, __obj.planField(\"points\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dleader.clear();");
    gold.append("\n      __dlink.clear();");
    gold.append("\n      __dplay_order.clear();");
    gold.append("\n      __dplaying.clear();");
    gold.append("\n      __dpoints.clear();");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_2 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_2 __this;");
    gold.append("\n    private int place = 0;");
    gold.append("\n    private int rank = 0;");
    gold.append("\n    private int suit = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"place\");");
    gold.append("\n      __hash.hashInteger(this.place);");
    gold.append("\n      __hash.hashString(\"rank\");");
    gold.append("\n      __hash.hashInteger(this.rank);");
    gold.append("\n      __hash.hashString(\"suit\");");
    gold.append("\n      __hash.hashInteger(this.suit);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_2 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_2;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_2(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"place\":");
    gold.append("\n            this.place = __EnumFix_Place(__reader.readInteger());");
    gold.append("\n            break;");
    gold.append("\n          case \"rank\":");
    gold.append("\n            this.rank = __EnumFix_Rank(__reader.readInteger());");
    gold.append("\n            break;");
    gold.append("\n          case \"suit\":");
    gold.append("\n            this.suit = __EnumFix_Suit(__reader.readInteger());");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"place\");");
    gold.append("\n      __writer.writeInteger(place);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"rank\");");
    gold.append("\n      __writer.writeInteger(rank);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"suit\");");
    gold.append("\n      __writer.writeInteger(suit);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_2() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_2(int place, int rank, int suit) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.place = place;");
    gold.append("\n      this.rank = rank;");
    gold.append("\n      this.suit = suit;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_2 implements DeltaNode {");
    gold.append("\n    private DInt32 __dplace;");
    gold.append("\n    private DInt32 __drank;");
    gold.append("\n    private DInt32 __dsuit;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_2() {");
    gold.append("\n      __dplace = new DInt32();");
    gold.append("\n      __drank = new DInt32();");
    gold.append("\n      __dsuit = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dplace.__memory();");
    gold.append("\n      __sum += __drank.__memory();");
    gold.append("\n      __sum += __dsuit.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_2 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dplace.show(__item.place, __obj.planField(\"place\"));");
    gold.append("\n      __drank.show(__item.rank, __obj.planField(\"rank\"));");
    gold.append("\n      __dsuit.show(__item.suit, __obj.planField(\"suit\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dplace.clear();");
    gold.append("\n      __drank.clear();");
    gold.append("\n      __dsuit.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  private final Sink<RTxLeaderActionMessage> __queue_leader = new Sink<>(\"leader\");");
    gold.append("\n  private final NtChannel<RTxLeaderActionMessage> leader = new NtChannel<>(__futures, __queue_leader);");
    gold.append("\n  private final Sink<RTxCardDecision[]> __queue_pass_channel = new Sink<>(\"pass_channel\");");
    gold.append("\n  private final NtChannel<RTxCardDecision[]> pass_channel = new NtChannel<>(__futures, __queue_pass_channel);");
    gold.append("\n  private final Sink<RTxCardDecision[]> __queue_single_play = new Sink<>(\"single_play\");");
    gold.append("\n  private final NtChannel<RTxCardDecision[]> single_play = new NtChannel<>(__futures, __queue_single_play);");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"leader\":");
    gold.append("\n        __queue_leader.enqueue(__task, (RTxLeaderActionMessage) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      case \"pass_channel\":");
    gold.append("\n        __queue_pass_channel.enqueue(__task, (RTxCardDecision[]) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      case \"single_play\":");
    gold.append("\n        __queue_single_play.enqueue(__task, (RTxCardDecision[]) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"leader\":");
    gold.append("\n        return new RTxLeaderActionMessage(__reader);");
    gold.append("\n      case \"pass_channel\":");
    gold.append("\n        {");
    gold.append("\n          ArrayList<RTxCardDecision> __array_pass_channel = new ArrayList<>();");
    gold.append("\n          if (__reader.startArray()) {");
    gold.append("\n            while (__reader.notEndOfArray()) {");
    gold.append("\n              __array_pass_channel.add(new RTxCardDecision(__reader));");
    gold.append("\n            }");
    gold.append("\n          } else {");
    gold.append("\n            __array_pass_channel.add(new RTxCardDecision(__reader));");
    gold.append("\n          }");
    gold.append("\n          return __array_pass_channel.toArray(new RTxCardDecision[__array_pass_channel.size()]);");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n      case \"single_play\":");
    gold.append("\n        {");
    gold.append("\n          ArrayList<RTxCardDecision> __array_single_play = new ArrayList<>();");
    gold.append("\n          if (__reader.startArray()) {");
    gold.append("\n            while (__reader.notEndOfArray()) {");
    gold.append("\n              __array_single_play.add(new RTxCardDecision(__reader));");
    gold.append("\n            }");
    gold.append("\n          } else {");
    gold.append("\n            __array_single_play.add(new RTxCardDecision(__reader));");
    gold.append("\n          }");
    gold.append("\n          return __array_single_play.toArray(new RTxCardDecision[__array_single_play.size()]);");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n    __queue_leader.clear();");
    gold.append("\n    __queue_pass_channel.clear();");
    gold.append("\n    __queue_single_play.clear();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private void __step_lobby() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(5);");
    gold.append("\n    final RTxLeaderActionMessage decision = leader.fetchItem(owner.get()).await();");
    gold.append("\n    __track(6);");
    gold.append("\n    if (((int) decision.action) == ((int) 1) && !ready.get()) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(7);");
    gold.append("\n      NtList<RxBoolean> _auto_28 = (players.iterate(false).where(true, new __CLOSURE_WhereClause7(decision))).transform((item) -> item.playing);");
    gold.append("\n      for (RxBoolean _auto_29 : _auto_28) {");
    gold.append("\n        _auto_29.set(true);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (((int) decision.action) == ((int) 2)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(8);");
    gold.append("\n      NtList<RxBoolean> _auto_30 = (players.iterate(false).where(true, new __CLOSURE_WhereClause8(decision))).transform((item) -> item.playing);");
    gold.append("\n      for (RxBoolean _auto_31 : _auto_30) {");
    gold.append("\n        _auto_31.set(false);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (((int) decision.action) == ((int) 3)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(9);");
    gold.append("\n      NtList<RxInt32> _auto_32 = (players.iterate(false).where(true, new __CLOSURE_WhereClause9())).transform((item) -> item.play_order);");
    gold.append("\n      for (RxInt32 _auto_33 : _auto_32) {");
    gold.append("\n        _auto_33.set(__randomInt());");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (((int) decision.action) == ((int) 10)) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      __track(10);");
    gold.append("\n      playing.set(true);");
    gold.append("\n      __track(11);");
    gold.append("\n      if (((int) (players.iterate(false).where(true, new __CLOSURE_WhereClause10())).size()) == ((int) 4)) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(12);");
    gold.append("\n        __transitionStateMachine(\"setup\", 0);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(13);");
    gold.append("\n    __transitionStateMachine(\"lobby\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_setup() {");
    gold.append("\n    __code_cost += 6;");
    gold.append("\n    __track(14);");
    gold.append("\n    for(Integer s : __ALL_VALUES_Suit) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(15);");
    gold.append("\n      for(Integer r : __ALL_VALUES_Rank) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(16);");
    gold.append("\n        {");
    gold.append("\n          RxTable<RTxCard> _AutoRef34 = deck;");
    gold.append("\n          RTx_AnonObjConvert_2 _AutoExpr36 = new RTx_AnonObjConvert_2(1, r, s);");
    gold.append("\n          RTxCard _CreateRef35 = _AutoRef34.make();");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          _CreateRef35.place.set(_AutoExpr36.place);");
    gold.append("\n          _CreateRef35.rank.set(_AutoExpr36.rank);");
    gold.append("\n          _CreateRef35.suit.set(_AutoExpr36.suit);");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(17);");
    gold.append("\n    NtList<RxInt32> _auto_37 = (players.iterate(false).where(true, new __CLOSURE_WhereClause11())).transform((item) -> item.play_order);");
    gold.append("\n    for (RxInt32 _auto_38 : _auto_37) {");
    gold.append("\n      _auto_38.set(100);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(18);");
    gold.append("\n    int normativeOrder = 0;");
    gold.append("\n    __track(19);");
    gold.append("\n    NtList<RxInt32> _auto_39 = (players.iterate(false).where(false, new __CLOSURE_WhereClause12()).orderBy(true, __ORDER_Player_play_order_a)).transform((item) -> item.play_order);");
    gold.append("\n    for (RxInt32 _auto_40 : _auto_39) {");
    gold.append("\n      _auto_40.set(normativeOrder++);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(20);");
    gold.append("\n    __transitionStateMachine(\"shuffle_and_distribute\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_shuffle_and_distribute() {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(21);");
    gold.append("\n    NtList<RxInt32> _auto_41 = (deck.iterate(true)).transform((item) -> item.ordering);");
    gold.append("\n    for (RxInt32 _auto_42 : _auto_41) {");
    gold.append("\n      _auto_42.set(__randomInt());");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(22);");
    gold.append("\n    NtList<RxPrincipal> _auto_43 = (deck.iterate(true)).transform((item) -> item.owner);");
    gold.append("\n    for (RxPrincipal _auto_44 : _auto_43) {");
    gold.append("\n      _auto_44.set(NtPrincipal.NO_ONE);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(23);");
    gold.append("\n    NtList<RxEnumInt32> _auto_45 = (deck.iterate(true)).transform((item) -> item.place);");
    gold.append("\n    for (RxEnumInt32 _auto_46 : _auto_45) {");
    gold.append("\n      _auto_46.set(2);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(24);");
    gold.append("\n    RTxPlayer[] op = (players.iterate(false).where(false, new __CLOSURE_WhereClause13()).orderBy(true, __ORDER_Player_play_order_a)).toArray((Integer __n) -> (Object) (new RTxPlayer[__n]));");
    gold.append("\n    __track(25);");
    gold.append("\n    {");
    gold.append("\n      int k = 0;");
    gold.append("\n      for (;__goodwill(225, 18, 225, 23) && (k < 4);k++) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(26);");
    gold.append("\n        NtMaybe<RTxPlayer> _AutoConditionplayer_47;");
    gold.append("\n        if ((_AutoConditionplayer_47 = Utility.lookup(op, k)).has()) {");
    gold.append("\n          RTxPlayer player = _AutoConditionplayer_47.get();");
    gold.append("\n          __code_cost += 2;");
    gold.append("\n          __track(27);");
    gold.append("\n          NtList<RxPrincipal> _auto_48 = (deck.iterate(false).where(false, new __CLOSURE_WhereClause14()).orderBy(false, __ORDER_Card_ordering_a).limit(true, 13)).transform((item) -> item.owner);");
    gold.append("\n          for (RxPrincipal _auto_49 : _auto_48) {");
    gold.append("\n            _auto_49.set(player.link.get());");
    gold.append("\n          }");
    gold.append("\n");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(28);");
    gold.append("\n    __transitionStateMachine(\"pass\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_pass() {");
    gold.append("\n    __code_cost += 13;");
    gold.append("\n    __track(29);");
    gold.append("\n    if (((int) passing_mode.get()) == ((int) 3)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(30);");
    gold.append("\n      __transitionStateMachine(\"start_play\", 0);");
    gold.append("\n    }");
    gold.append("\n    __track(31);");
    gold.append("\n    RTxPlayer[] op = (players.iterate(false).where(false, new __CLOSURE_WhereClause15()).orderBy(true, __ORDER_Player_play_order_a)).toArray((Integer __n) -> (Object) (new RTxPlayer[__n]));");
    gold.append("\n    __track(32);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_50;");
    gold.append("\n    if ((_AutoConditionplayer_50 = Utility.lookup(op, 0)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_50.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(33);");
    gold.append("\n      player1.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(34);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_51;");
    gold.append("\n    if ((_AutoConditionplayer_51 = Utility.lookup(op, 1)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_51.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(35);");
    gold.append("\n      player2.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(36);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_52;");
    gold.append("\n    if ((_AutoConditionplayer_52 = Utility.lookup(op, 2)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_52.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(37);");
    gold.append("\n      player3.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(38);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_53;");
    gold.append("\n    if ((_AutoConditionplayer_53 = Utility.lookup(op, 3)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_53.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(39);");
    gold.append("\n      player4.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(40);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass1 = pass_channel.choose(player1.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause16(player1)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(41);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass2 = pass_channel.choose(player2.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause17(player2)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(42);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass3 = pass_channel.choose(player3.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause18(player3)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(43);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass4 = pass_channel.choose(player4.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause19(player4)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(44);");
    gold.append("\n    NtMaybe<RTxCardDecision[]> _AutoConditiondecision1_54;");
    gold.append("\n    if ((_AutoConditiondecision1_54 = pass1.await()).has()) {");
    gold.append("\n      RTxCardDecision[] decision1 = _AutoConditiondecision1_54.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(45);");
    gold.append("\n      NtMaybe<RTxCardDecision[]> _AutoConditiondecision2_55;");
    gold.append("\n      if ((_AutoConditiondecision2_55 = pass2.await()).has()) {");
    gold.append("\n        RTxCardDecision[] decision2 = _AutoConditiondecision2_55.get();");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(46);");
    gold.append("\n        NtMaybe<RTxCardDecision[]> _AutoConditiondecision3_56;");
    gold.append("\n        if ((_AutoConditiondecision3_56 = pass3.await()).has()) {");
    gold.append("\n          RTxCardDecision[] decision3 = _AutoConditiondecision3_56.get();");
    gold.append("\n          __code_cost += 2;");
    gold.append("\n          __track(47);");
    gold.append("\n          NtMaybe<RTxCardDecision[]> _AutoConditiondecision4_57;");
    gold.append("\n          if ((_AutoConditiondecision4_57 = pass4.await()).has()) {");
    gold.append("\n            RTxCardDecision[] decision4 = _AutoConditiondecision4_57.get();");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(48);");
    gold.append("\n            if (((int) passing_mode.get()) == ((int) 2)) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(49);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(50);");
    gold.append("\n                NtList<RxPrincipal> _auto_58 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause20(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_59 : _auto_58) {");
    gold.append("\n                  _auto_59.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(51);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(52);");
    gold.append("\n                NtList<RxPrincipal> _auto_60 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause21(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_61 : _auto_60) {");
    gold.append("\n                  _auto_61.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(53);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(54);");
    gold.append("\n                NtList<RxPrincipal> _auto_62 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause22(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_63 : _auto_62) {");
    gold.append("\n                  _auto_63.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(55);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(56);");
    gold.append("\n                NtList<RxPrincipal> _auto_64 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause23(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_65 : _auto_64) {");
    gold.append("\n                  _auto_65.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            } else if (((int) passing_mode.get()) == ((int) 1)) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(57);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(58);");
    gold.append("\n                NtList<RxPrincipal> _auto_66 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause24(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_67 : _auto_66) {");
    gold.append("\n                  _auto_67.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(59);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(60);");
    gold.append("\n                NtList<RxPrincipal> _auto_68 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause25(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_69 : _auto_68) {");
    gold.append("\n                  _auto_69.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(61);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(62);");
    gold.append("\n                NtList<RxPrincipal> _auto_70 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause26(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_71 : _auto_70) {");
    gold.append("\n                  _auto_71.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(63);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(64);");
    gold.append("\n                NtList<RxPrincipal> _auto_72 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause27(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_73 : _auto_72) {");
    gold.append("\n                  _auto_73.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            } else if (((int) passing_mode.get()) == ((int) 0)) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(65);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(66);");
    gold.append("\n                NtList<RxPrincipal> _auto_74 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause28(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_75 : _auto_74) {");
    gold.append("\n                  _auto_75.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(67);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(68);");
    gold.append("\n                NtList<RxPrincipal> _auto_76 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause29(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_77 : _auto_76) {");
    gold.append("\n                  _auto_77.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(69);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(70);");
    gold.append("\n                NtList<RxPrincipal> _auto_78 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause30(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_79 : _auto_78) {");
    gold.append("\n                  _auto_79.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(71);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(72);");
    gold.append("\n                NtList<RxPrincipal> _auto_80 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause31(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_81 : _auto_80) {");
    gold.append("\n                  _auto_81.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(73);");
    gold.append("\n    __transitionStateMachine(\"start_play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_start_play() {");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(74);");
    gold.append("\n    played.set(0);");
    gold.append("\n    __track(75);");
    gold.append("\n    current.set(player1.get());");
    gold.append("\n    __track(76);");
    gold.append("\n    NtMaybe<RTxCard> _AutoConditiontwo_clubs_82;");
    gold.append("\n    if ((_AutoConditiontwo_clubs_82 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause32())).lookup(0)).has()) {");
    gold.append("\n      RTxCard two_clubs = _AutoConditiontwo_clubs_82.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(77);");
    gold.append("\n      current.set(two_clubs.owner.get());");
    gold.append("\n    }");
    gold.append("\n    __track(78);");
    gold.append("\n    __transitionStateMachine(\"play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_play() {");
    gold.append("\n    __code_cost += 8;");
    gold.append("\n    __track(79);");
    gold.append("\n    NtList<RTxCard> choices = deck.iterate(false).where(true, new __CLOSURE_WhereClause34(current, played, points_played, suit_in_play));");
    gold.append("\n    __track(80);");
    gold.append("\n    if (((int) choices.get().size()) == ((int) 0)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(81);");
    gold.append("\n      choices = deck.iterate(false).where(true, new __CLOSURE_WhereClause35(current));");
    gold.append("\n    }");
    gold.append("\n    __track(82);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> playX = single_play.choose(current.get(), Utility.convertMultiple(choices.get(), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 1);");
    gold.append("\n    __track(83);");
    gold.append("\n    NtMaybe<RTxCardDecision[]> _AutoConditionthePlay_83;");
    gold.append("\n    if ((_AutoConditionthePlay_83 = playX.await()).has()) {");
    gold.append("\n      RTxCardDecision[] thePlay = _AutoConditionthePlay_83.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(84);");
    gold.append("\n      for(RTxCardDecision dec : thePlay) {");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(85);");
    gold.append("\n        NtList<RxEnumInt32> _auto_84 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause36(dec))).transform((item) -> item.place);");
    gold.append("\n        for (RxEnumInt32 _auto_85 : _auto_84) {");
    gold.append("\n          _auto_85.set(3);");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n        __track(86);");
    gold.append("\n        NtMaybe<RTxCard> _AutoConditioncardPlayed_86;");
    gold.append("\n        if ((_AutoConditioncardPlayed_86 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause37(dec))).lookup(0)).has()) {");
    gold.append("\n          RTxCard cardPlayed = _AutoConditioncardPlayed_86.get();");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          __track(87);");
    gold.append("\n          if (cardPlayed.points.get() > 0) {");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(88);");
    gold.append("\n            points_played.set(true);");
    gold.append("\n          }");
    gold.append("\n          __track(89);");
    gold.append("\n          if (((int) played.get()) == ((int) 0)) {");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(90);");
    gold.append("\n            suit_in_play.set(cardPlayed.suit.get());");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(91);");
    gold.append("\n    if ((current.get()).equals(player1.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(92);");
    gold.append("\n      current.set(player2.get());");
    gold.append("\n    } else if ((current.get()).equals(player2.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(93);");
    gold.append("\n      current.set(player3.get());");
    gold.append("\n    } else if ((current.get()).equals(player3.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(94);");
    gold.append("\n      current.set(player4.get());");
    gold.append("\n    } else if ((current.get()).equals(player4.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(95);");
    gold.append("\n      current.set(player1.get());");
    gold.append("\n    }");
    gold.append("\n    __track(96);");
    gold.append("\n    if (((int) played.get()) == ((int) 3)) {");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n      __track(97);");
    gold.append("\n      NtMaybe<RTxCard> _AutoConditionwinner_87;");
    gold.append("\n      if ((_AutoConditionwinner_87 = (deck.iterate(false).where(false, new __CLOSURE_WhereClause38(suit_in_play)).orderBy(true, __ORDER_Card_rank_d)).lookup(0)).has()) {");
    gold.append("\n        RTxCard winner = _AutoConditionwinner_87.get();");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(98);");
    gold.append("\n        NtList<RxPrincipal> _auto_88 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause39())).transform((item) -> item.owner);");
    gold.append("\n        for (RxPrincipal _auto_89 : _auto_88) {");
    gold.append("\n          _auto_89.set(winner.owner.get());");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n        __track(99);");
    gold.append("\n        last_winner.set(winner.owner.get());");
    gold.append("\n      }");
    gold.append("\n      __track(100);");
    gold.append("\n      NtList<RxEnumInt32> _auto_90 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause40())).transform((item) -> item.place);");
    gold.append("\n      for (RxEnumInt32 _auto_91 : _auto_90) {");
    gold.append("\n        _auto_91.set(4);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n      __track(101);");
    gold.append("\n      played.set(0);");
    gold.append("\n      __track(102);");
    gold.append("\n      current.set(last_winner.get());");
    gold.append("\n      __track(103);");
    gold.append("\n      if (((int) (deck.iterate(false).where(true, new __CLOSURE_WhereClause41(current))).size()) == ((int) 0)) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(104);");
    gold.append("\n        __transitionStateMachine(\"score\", 0);");
    gold.append("\n      }");
    gold.append("\n    } else {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(105);");
    gold.append("\n      played.bumpUpPost();");
    gold.append("\n    }");
    gold.append("\n    __track(106);");
    gold.append("\n    __transitionStateMachine(\"play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_score() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(107);");
    gold.append("\n    for(RTxPlayer p : players.iterate(false).where(true, new __CLOSURE_WhereClause42())) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(108);");
    gold.append("\n      int local_points = 0;");
    gold.append("\n      __track(109);");
    gold.append("\n      for(RTxCard c : deck.iterate(false).where(true, new __CLOSURE_WhereClause43(p))) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(110);");
    gold.append("\n        local_points += c.points.get();");
    gold.append("\n      }");
    gold.append("\n      __track(111);");
    gold.append("\n      if (((int) local_points) == ((int) 26)) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(112);");
    gold.append("\n        for(RTxPlayer p2 : players.iterate(false).where(true, new __CLOSURE_WhereClause44(p))) {");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          __track(113);");
    gold.append("\n          p2.points.opAddTo(26);");
    gold.append("\n          __track(114);");
    gold.append("\n          points_awarded.opAddTo(26);");
    gold.append("\n        }");
    gold.append("\n      } else {");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(115);");
    gold.append("\n        p.points.opAddTo(local_points);");
    gold.append("\n        __track(116);");
    gold.append("\n        points_awarded.opAddTo(local_points);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(117);");
    gold.append("\n    if (((int) passing_mode.get()) == ((int) 0)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(118);");
    gold.append("\n      passing_mode.set(2);");
    gold.append("\n    } else if (((int) passing_mode.get()) == ((int) 2)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(119);");
    gold.append("\n      passing_mode.set(1);");
    gold.append("\n    } else if (((int) passing_mode.get()) == ((int) 1)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(120);");
    gold.append("\n      passing_mode.set(3);");
    gold.append("\n    } else if (((int) passing_mode.get()) == ((int) 3)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(121);");
    gold.append("\n      passing_mode.set(0);");
    gold.append("\n    }");
    gold.append("\n    __track(122);");
    gold.append("\n    __transitionStateMachine(\"shuffle_and_distribute\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"lobby\":");
    gold.append("\n        __step_lobby();");
    gold.append("\n        return;");
    gold.append("\n      case \"setup\":");
    gold.append("\n        __step_setup();");
    gold.append("\n        return;");
    gold.append("\n      case \"shuffle_and_distribute\":");
    gold.append("\n        __step_shuffle_and_distribute();");
    gold.append("\n        return;");
    gold.append("\n      case \"pass\":");
    gold.append("\n        __step_pass();");
    gold.append("\n        return;");
    gold.append("\n      case \"start_play\":");
    gold.append("\n        __step_start_play();");
    gold.append("\n        return;");
    gold.append("\n      case \"play\":");
    gold.append("\n        __step_play();");
    gold.append("\n        return;");
    gold.append("\n      case \"score\":");
    gold.append("\n        __step_score();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(123);");
    gold.append("\n    if ((owner.get()).equals(NtPrincipal.NO_ONE)) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(124);");
    gold.append("\n      owner.set(__who);");
    gold.append("\n      __track(125);");
    gold.append("\n      {");
    gold.append("\n        RxTable<RTxPlayer> _AutoRef92 = players;");
    gold.append("\n        RTx_AnonObjConvert_0 _AutoExpr94 = new RTx_AnonObjConvert_0(true, __who, 0, true, 0);");
    gold.append("\n        RTxPlayer _CreateRef93 = _AutoRef92.make();");
    gold.append("\n        __code_cost += 5;");
    gold.append("\n        _CreateRef93.leader.set(_AutoExpr94.leader);");
    gold.append("\n        _CreateRef93.link.set(_AutoExpr94.link);");
    gold.append("\n        _CreateRef93.play_order.set(_AutoExpr94.play_order);");
    gold.append("\n        _CreateRef93.playing.set(_AutoExpr94.playing);");
    gold.append("\n        _CreateRef93.points.set(_AutoExpr94.points);");
    gold.append("\n      }");
    gold.append("\n      __track(126);");
    gold.append("\n      __transitionStateMachine(\"lobby\", 0);");
    gold.append("\n    }");
    gold.append("\n    __track(127);");
    gold.append("\n    if ((owner.get()).equals(__who)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(128);");
    gold.append("\n      return true;");
    gold.append("\n    }");
    gold.append("\n    __track(129);");
    gold.append("\n    if (((int) (players.iterate(false).where(true, new __CLOSURE_WhereClause2(__who))).size()) == ((int) 0)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(130);");
    gold.append("\n      {");
    gold.append("\n        RxTable<RTxPlayer> _AutoRef95 = players;");
    gold.append("\n        RTx_AnonObjConvert_0 _AutoExpr97 = new RTx_AnonObjConvert_0(false, __who, players.size(), false, 0);");
    gold.append("\n        RTxPlayer _CreateRef96 = _AutoRef95.make();");
    gold.append("\n        __code_cost += 5;");
    gold.append("\n        _CreateRef96.leader.set(_AutoExpr97.leader);");
    gold.append("\n        _CreateRef96.link.set(_AutoExpr97.link);");
    gold.append("\n        _CreateRef96.play_order.set(_AutoExpr97.play_order);");
    gold.append("\n        _CreateRef96.playing.set(_AutoExpr97.playing);");
    gold.append("\n        _CreateRef96.points.set(_AutoExpr97.points);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(131);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public void __onDisconnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(132);");
    gold.append("\n    (players.iterate(false).where(true, new __CLOSURE_WhereClause3(__who))).map((__item) -> { __item.__delete(); });");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {");
    gold.append("\n    __onDisconnected__0(__cvalue, __cvalue.who);");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) place) == ((int) 2);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause1 implements WhereClause<RTxCard> {");
    gold.append("\n    private NtPrincipal __who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause1(NtPrincipal __who) {");
    gold.append("\n      this.__who = __who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) place) == ((int) 4) && (owner).equals(__who);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause2 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private NtPrincipal __who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause2(NtPrincipal __who) {");
    gold.append("\n      this.__who = __who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      NtPrincipal link = __obj.link.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (link).equals(__who);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause3 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private NtPrincipal __who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause3(NtPrincipal __who) {");
    gold.append("\n      this.__who = __who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      NtPrincipal link = __obj.link.get();");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (link).equals(__who) && !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause4 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause5 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause6 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause7 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxLeaderActionMessage decision;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return decision.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause7(RTxLeaderActionMessage decision) {");
    gold.append("\n      this.decision = decision;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) decision.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause8 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxLeaderActionMessage decision;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return decision.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause8(RTxLeaderActionMessage decision) {");
    gold.append("\n      this.decision = decision;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) decision.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause9 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause10 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause11 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause12 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause13 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause14 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(NtPrincipal.NO_ONE);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause15 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause16 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal player1;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause16(RxPrincipal player1) {");
    gold.append("\n      this.player1 = player1;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(player1.get());");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause17 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal player2;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause17(RxPrincipal player2) {");
    gold.append("\n      this.player2 = player2;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(player2.get());");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause18 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal player3;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause18(RxPrincipal player3) {");
    gold.append("\n      this.player3 = player3;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(player3.get());");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause19 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal player4;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause19(RxPrincipal player4) {");
    gold.append("\n      this.player4 = player4;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(player4.get());");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause20 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause20(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause21 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause21(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause22 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause22(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause23 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause23(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause24 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause24(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause25 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause25(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause26 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause26(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause27 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause27(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause28 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause28(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause29 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause29(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause30 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause30(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause31 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause31(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause32 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int rank = __obj.rank.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) rank) == ((int) 2) && ((int) suit) == ((int) 1);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause33 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) place) == ((int) 3);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause34 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal current;");
    gold.append("\n    private RxInt32 played;");
    gold.append("\n    private RxBoolean points_played;");
    gold.append("\n    private RxEnumInt32 suit_in_play;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause34(RxPrincipal current, RxInt32 played, RxBoolean points_played, RxEnumInt32 suit_in_play) {");
    gold.append("\n      this.current = current;");
    gold.append("\n      this.played = played;");
    gold.append("\n      this.points_played = points_played;");
    gold.append("\n      this.suit_in_play = suit_in_play;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      int points = __obj.points.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(current.get()) && ((int) place) == ((int) 2) && (((int) played.get()) == ((int) 0) && (points_played.get() || ((int) points) == ((int) 0)) || played.get() > 0 && ((int) suit_in_play.get()) == ((int) suit));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause35 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal current;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause35(RxPrincipal current) {");
    gold.append("\n      this.current = current;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(current.get()) && ((int) place) == ((int) 2);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause36 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause36(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause37 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause37(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) dec.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause38 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxEnumInt32 suit_in_play;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause38(RxEnumInt32 suit_in_play) {");
    gold.append("\n      this.suit_in_play = suit_in_play;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) place) == ((int) 3) && ((int) suit) == ((int) suit_in_play.get());");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause39 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) place) == ((int) 3);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause40 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) place) == ((int) 3);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause41 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal current;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause41(RxPrincipal current) {");
    gold.append("\n      this.current = current;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(current.get()) && ((int) place) == ((int) 2);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause42 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause43 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxPlayer p;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause43(RTxPlayer p) {");
    gold.append("\n      this.p = p;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(p.link.get()) && ((int) place) == ((int) 4);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause44 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxPlayer p;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause44(RTxPlayer p) {");
    gold.append("\n      this.p = p;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      NtPrincipal link = __obj.link.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing && !((link).equals(p.link.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxCard> __ORDER_Card_ordering_a = new Comparator<RTxCard>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxCard __a, RTxCard __b) {");
    gold.append("\n      return __a.ordering.compareTo(__b.ordering);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxCard> __ORDER_Card_rank_d = new Comparator<RTxCard>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxCard __a, RTxCard __b) {");
    gold.append("\n      return -__a.rank.compareTo(__b.rank);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxPlayer> __ORDER_Player_play_order_a = new Comparator<RTxPlayer>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxPlayer __a, RTxPlayer __b) {");
    gold.append("\n      return __a.play_order.compareTo(__b.play_order);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"deck\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Card\"},\"privacy\":\"private\"},\"hand\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Card\"}},\"privacy\":\"public\"},\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"players\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Player\"},\"privacy\":\"private\"},\"players_connected\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"observers_connected\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"people\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Player\"}},\"privacy\":\"public\"},\"players_ordered\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Player\"}},\"privacy\":\"public\"},\"ready\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"playing\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"passing_mode\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"enum\",\"enum\":\"PassingMode\",\"options\":{\"values\":{\"Across\":0,\"ToLeft\":1,\"ToRight\":2,\"None\":3},\"names\":{\"0\":\"Across\",\"1\":\"ToLeft\",\"2\":\"ToRight\",\"3\":\"None\"},\"default\":\"Across\"}},\"privacy\":\"public\"},\"player1\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"player2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"player3\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"player4\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"current\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"played\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"suit_in_play\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"enum\",\"enum\":\"Suit\",\"options\":{\"values\":{\"Clubs\":1,\"Hearts\":2,\"Spades\":3,\"Diamonds\":4},\"names\":{\"1\":\"Clubs\",\"2\":\"Hearts\",\"3\":\"Spades\",\"4\":\"Diamonds\"},\"default\":\"Clubs\"}},\"privacy\":\"public\"},\"points_played\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"in_play\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Card\"}},\"privacy\":\"public\"},\"last_winner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"points_awarded\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"my_take\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Card\"}},\"privacy\":\"bubble\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"Suit\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Suit\",\"options\":{\"values\":{\"Clubs\":1,\"Hearts\":2,\"Spades\":3,\"Diamonds\":4},\"names\":{\"1\":\"Clubs\",\"2\":\"Hearts\",\"3\":\"Spades\",\"4\":\"Diamonds\"},\"default\":\"Clubs\"}},\"Rank\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Rank\",\"options\":{\"values\":{\"Two\":2,\"Three\":3,\"Four\":4,\"Five\":5,\"Six\":6,\"Seven\":7,\"Eight\":8,\"Nine\":9,\"Ten\":10,\"Jack\":11,\"Queen\":12,\"King\":13,\"Ace\":14},\"names\":{\"2\":\"Two\",\"3\":\"Three\",\"4\":\"Four\",\"5\":\"Five\",\"6\":\"Six\",\"7\":\"Seven\",\"8\":\"Eight\",\"9\":\"Nine\",\"10\":\"Ten\",\"11\":\"Jack\",\"12\":\"Queen\",\"13\":\"King\",\"14\":\"Ace\"},\"default\":\"Two\"}},\"Place\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Place\",\"options\":{\"values\":{\"Deck\":1,\"Hand\":2,\"InPlay\":3,\"Taken\":4},\"names\":{\"1\":\"Deck\",\"2\":\"Hand\",\"3\":\"InPlay\",\"4\":\"Taken\"},\"default\":\"Deck\"}},\"Card\":{\"nature\":\"reactive_record\",\"name\":\"Card\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"suit\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"enum\",\"enum\":\"Suit\",\"options\":{\"values\":{\"Clubs\":1,\"Hearts\":2,\"Spades\":3,\"Diamonds\":4},\"names\":{\"1\":\"Clubs\",\"2\":\"Hearts\",\"3\":\"Spades\",\"4\":\"Diamonds\"},\"default\":\"Clubs\"}},\"privacy\":\"public\"},\"rank\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"enum\",\"enum\":\"Rank\",\"options\":{\"values\":{\"Two\":2,\"Three\":3,\"Four\":4,\"Five\":5,\"Six\":6,\"Seven\":7,\"Eight\":8,\"Nine\":9,\"Ten\":10,\"Jack\":11,\"Queen\":12,\"King\":13,\"Ace\":14},\"names\":{\"2\":\"Two\",\"3\":\"Three\",\"4\":\"Four\",\"5\":\"Five\",\"6\":\"Six\",\"7\":\"Seven\",\"8\":\"Eight\",\"9\":\"Nine\",\"10\":\"Ten\",\"11\":\"Jack\",\"12\":\"Queen\",\"13\":\"King\",\"14\":\"Ace\"},\"default\":\"Two\"}},\"privacy\":\"public\"},\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"ordering\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"place\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"enum\",\"enum\":\"Place\",\"options\":{\"values\":{\"Deck\":1,\"Hand\":2,\"InPlay\":3,\"Taken\":4},\"names\":{\"1\":\"Deck\",\"2\":\"Hand\",\"3\":\"InPlay\",\"4\":\"Taken\"},\"default\":\"Deck\"}},\"privacy\":\"private\"},\"points\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"Empty\":{\"nature\":\"native_message\",\"name\":\"Empty\",\"anonymous\":false,\"fields\":{}},\"Player\":{\"nature\":\"reactive_record\",\"name\":\"Player\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"link\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"playing\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"private\"},\"points\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"leader\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"viewer_is\"},\"play_order\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"viewer_is\"}}},\"LeaderAction\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"LeaderAction\",\"options\":{\"values\":{\"PromoteObserver\":1,\"DemotePlayer\":2,\"ShufflePlayers\":3,\"Begin\":10},\"names\":{\"1\":\"PromoteObserver\",\"2\":\"DemotePlayer\",\"3\":\"ShufflePlayers\",\"10\":\"Begin\"},\"default\":\"PromoteObserver\"}},\"LeaderActionMessage\":{\"nature\":\"native_message\",\"name\":\"LeaderActionMessage\",\"anonymous\":false,\"fields\":{\"action\":{\"type\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"LeaderAction\",\"options\":{\"values\":{\"PromoteObserver\":1,\"DemotePlayer\":2,\"ShufflePlayers\":3,\"Begin\":10},\"names\":{\"1\":\"PromoteObserver\",\"2\":\"DemotePlayer\",\"3\":\"ShufflePlayers\",\"10\":\"Begin\"},\"default\":\"PromoteObserver\"}},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"PassingMode\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"PassingMode\",\"options\":{\"values\":{\"Across\":0,\"ToLeft\":1,\"ToRight\":2,\"None\":3},\"names\":{\"0\":\"Across\",\"1\":\"ToLeft\",\"2\":\"ToRight\",\"3\":\"None\"},\"default\":\"Across\"}},\"CardDecision\":{\"nature\":\"native_message\",\"name\":\"CardDecision\",\"anonymous\":false,\"fields\":{\"id\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"leader\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"private\"},\"link\":{\"type\":{\"nature\":\"native_value\",\"type\":\"secure<principal>\"},\"privacy\":\"private\"},\"play_order\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"playing\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"private\"},\"points\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"_AnonObjConvert_2\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_2\",\"anonymous\":true,\"fields\":{\"place\":{\"type\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Place\",\"options\":{\"values\":{\"Deck\":1,\"Hand\":2,\"InPlay\":3,\"Taken\":4},\"names\":{\"1\":\"Deck\",\"2\":\"Hand\",\"3\":\"InPlay\",\"4\":\"Taken\"},\"default\":\"Deck\"}},\"privacy\":\"private\"},\"rank\":{\"type\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Rank\",\"options\":{\"values\":{\"Two\":2,\"Three\":3,\"Four\":4,\"Five\":5,\"Six\":6,\"Seven\":7,\"Eight\":8,\"Nine\":9,\"Ten\":10,\"Jack\":11,\"Queen\":12,\"King\":13,\"Ace\":14},\"names\":{\"2\":\"Two\",\"3\":\"Three\",\"4\":\"Four\",\"5\":\"Five\",\"6\":\"Six\",\"7\":\"Seven\",\"8\":\"Eight\",\"9\":\"Nine\",\"10\":\"Ten\",\"11\":\"Jack\",\"12\":\"Queen\",\"13\":\"King\",\"14\":\"Ace\"},\"default\":\"Two\"}},\"privacy\":\"private\"},\"suit\":{\"type\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Suit\",\"options\":{\"values\":{\"Clubs\":1,\"Hearts\":2,\"Spades\":3,\"Diamonds\":4},\"names\":{\"1\":\"Clubs\",\"2\":\"Hearts\",\"3\":\"Spades\",\"4\":\"Diamonds\"},\"default\":\"Clubs\"}},\"privacy\":\"private\"}}}},\"channels\":{\"leader\":\"LeaderActionMessage\",\"pass_channel\":\"CardDecision\",\"single_play\":\"CardDecision\"},\"constructors\":[],\"labels\":[\"lobby\",\"setup\",\"shuffle_and_distribute\",\"pass\",\"start_play\",\"play\",\"score\"]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:1618");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"playing\":false,\"passing_mode\":0,\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0,\"players_connected\":0,\"observers_connected\":0,\"ready\":false},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__state\":\"lobby\",\"__next_time\":\"75\",\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__connection_id\":1,\"__time\":\"75\",\"__auto_table_row_id\":1,\"players\":{\"1\":{\"id\":1,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__blocked_on\":\"leader\",\"__blocked\":true,\"__seq\":5} need:false in:0");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"people\":{\"1\":{\"id\":1,\"link\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points\":0,\"leader\":true,\"play_order\":0},\"@o\":[1]},\"players_connected\":1,\"players_ordered\":{\"1\":{\"id\":1,\"link\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points\":0,\"leader\":true,\"play_order\":0},\"@o\":[1]}},\"outstanding\":[{\"id\":1,\"channel\":\"leader\",\"array\":false}],\"blockers\":[{\"agent\":\"?\",\"authority\":\"?\"}],\"seq\":4}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"125\"}-->{\"__blocked_on\":\"leader\",\"__seq\":6} need:false in:0");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"people\":{\"1\":{\"id\":1,\"link\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points\":0},\"@o\":[1]},\"playing\":false,\"passing_mode\":0,\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0,\"players_connected\":1,\"observers_connected\":0,\"players_ordered\":{\"1\":{\"id\":1,\"link\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points\":0},\"@o\":[1]},\"ready\":false},\"outstanding\":[],\"blockers\":[{\"agent\":\"?\",\"authority\":\"?\"}],\"seq\":5}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"150\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__state\":\"lobby\",\"__next_time\":\"150\",\"__seq\":7,\"__connection_id\":2,\"__time\":\"150\",\"__auto_table_row_id\":2,\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"2\":{\"id\":2,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}},\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__blocked_on\":\"leader\",\"__seq\":8} need:false in:0");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"people\":{\"2\":{\"id\":2,\"link\":{\"@t\":1,\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0},\"@o\":[1,2]},\"players_connected\":2,\"players_ordered\":{\"2\":{\"id\":2,\"link\":{\"@t\":1,\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0},\"@o\":[1,2]}},\"outstanding\":[],\"blockers\":[{\"agent\":\"rando\",\"authority\":\"random-place\"}],\"seq\":7}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"people\":{\"2\":{\"id\":2,\"link\":{\"@t\":1,\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0,\"leader\":true,\"play_order\":0},\"@o\":[1,2]},\"players_connected\":2,\"players_ordered\":{\"2\":{\"id\":2,\"link\":{\"@t\":1,\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0,\"leader\":true,\"play_order\":0},\"@o\":[1,2]}},\"outstanding\":[{\"id\":2,\"channel\":\"leader\",\"array\":false}],\"blockers\":[{\"agent\":\"rando\",\"authority\":\"random-place\"}],\"seq\":7}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"200\"}-->{\"__blocked_on\":\"leader\",\"__seq\":9} need:false in:0");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\nMEMORY:5940");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"deck\":{},\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"1\":{\"id\":1,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0},\"2\":{\"id\":2,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}},\"playing\":false,\"passing_mode\":0,\"player1\":{\"agent\":\"?\",\"authority\":\"?\"},\"player2\":{\"agent\":\"?\",\"authority\":\"?\"},\"player3\":{\"agent\":\"?\",\"authority\":\"?\"},\"player4\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0,\"__state\":\"lobby\",\"__constructed\":true,\"__next_time\":\"150\",\"__last_expire_time\":\"0\",\"__blocked\":true,\"__seq\":9,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":2,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"deck\":{},\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"1\":{\"id\":1,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0},\"2\":{\"id\":2,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}},\"playing\":false,\"passing_mode\":0,\"player1\":{\"agent\":\"?\",\"authority\":\"?\"},\"player2\":{\"agent\":\"?\",\"authority\":\"?\"},\"player3\":{\"agent\":\"?\",\"authority\":\"?\"},\"player4\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0,\"__state\":\"lobby\",\"__constructed\":true,\"__next_time\":\"150\",\"__last_expire_time\":\"0\",\"__blocked\":true,\"__seq\":9,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":2,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"deck\":{},\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"1\":{\"id\":1,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0},\"2\":{\"id\":2,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}},\"playing\":false,\"passing_mode\":0,\"player1\":{\"agent\":\"?\",\"authority\":\"?\"},\"player2\":{\"agent\":\"?\",\"authority\":\"?\"},\"player3\":{\"agent\":\"?\",\"authority\":\"?\"},\"player4\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0,\"__state\":\"lobby\",\"__constructed\":true,\"__next_time\":\"150\",\"__last_expire_time\":\"0\",\"__blocked\":true,\"__seq\":9,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":2,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_RefSilly_7 = null;
  private String get_RefSilly_7() {
    if (cached_RefSilly_7 != null) {
      return cached_RefSilly_7;
    }
    cached_RefSilly_7 = generateTestOutput(true, "RefSilly_7", "./test_code/Demo_RefSilly_success.a");
    return cached_RefSilly_7;
  }

  @Test
  public void testRefSillyEmission() {
    assertEmissionGood(get_RefSilly_7());
  }

  @Test
  public void testRefSillySuccess() {
    assertLivePass(get_RefSilly_7());
  }

  @Test
  public void testRefSillyGoodWillHappy() {
    assertGoodWillHappy(get_RefSilly_7());
  }

  @Test
  public void testRefSillyExceptionFree() {
    assertExceptionFree(get_RefSilly_7());
  }

  @Test
  public void testRefSillyTODOFree() {
    assertTODOFree(get_RefSilly_7());
  }

  @Test
  public void stable_RefSilly_7() {
    String live = get_RefSilly_7();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_RefSilly_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class RefSilly_7 extends LivingDocument {");
    gold.append("\n  private final RxPrincipal owner;");
    gold.append("\n  private final RxString name;");
    gold.append("\n  private final RxString description;");
    gold.append("\n  private final RxInt32 viewers;");
    gold.append("\n  private final RxTable<RTxAddOn> _addons;");
    gold.append("\n  private final RxLazy<NtList<RTxAddOn>> addons;");
    gold.append("\n  private final RxLazy<String> name_uppercase;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += owner.__memory();");
    gold.append("\n    __sum += name.__memory();");
    gold.append("\n    __sum += description.__memory();");
    gold.append("\n    __sum += viewers.__memory();");
    gold.append("\n    __sum += _addons.__memory();");
    gold.append("\n    __sum += addons.__memory();");
    gold.append("\n    __sum += name_uppercase.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public RefSilly_7(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    owner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    name = new RxString(this, \"\");");
    gold.append("\n    description = new RxString(this, \"\");");
    gold.append("\n    viewers = new RxInt32(this, 0);");
    gold.append("\n    _addons = new RxTable<>(__self, this, \"_addons\", (RxParent __parent) -> new RTxAddOn(__parent).__link(), 0);");
    gold.append("\n    addons = new RxLazy<NtList<RTxAddOn>>(this, () -> (_addons.iterate(false).orderBy(true, __ORDER_AddOn_name_a)));");
    gold.append("\n    name_uppercase = new RxLazy<String>(this, () -> (LibString.upper(name.get())));");
    gold.append("\n    _addons.__subscribe(addons);");
    gold.append("\n    name.__subscribe(name_uppercase);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"owner\":");
    gold.append("\n            owner.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"name\":");
    gold.append("\n            name.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"description\":");
    gold.append("\n            description.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"viewers\":");
    gold.append("\n            viewers.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_addons\":");
    gold.append("\n            _addons.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"owner\":");
    gold.append("\n            owner.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"name\":");
    gold.append("\n            name.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"description\":");
    gold.append("\n            description.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"viewers\":");
    gold.append("\n            viewers.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_addons\":");
    gold.append("\n            _addons.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n    owner.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n    name.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"description\");");
    gold.append("\n    description.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"viewers\");");
    gold.append("\n    viewers.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_addons\");");
    gold.append("\n    _addons.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    owner.__commit(\"owner\", __forward, __reverse);");
    gold.append("\n    name.__commit(\"name\", __forward, __reverse);");
    gold.append("\n    description.__commit(\"description\", __forward, __reverse);");
    gold.append("\n    viewers.__commit(\"viewers\", __forward, __reverse);");
    gold.append("\n    _addons.__commit(\"_addons\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    owner.__revert();");
    gold.append("\n    name.__revert();");
    gold.append("\n    description.__revert();");
    gold.append("\n    viewers.__revert();");
    gold.append("\n    _addons.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRefSilly_7 implements DeltaNode {");
    gold.append("\n    private DPrincipal __downer;");
    gold.append("\n    private DString __dname;");
    gold.append("\n    private DString __ddescription;");
    gold.append("\n    private DInt32 __dviewers;");
    gold.append("\n    private int __gaddons;");
    gold.append("\n    private DRecordList<DeltaRTxAddOn> __daddons;");
    gold.append("\n    private int __gname_uppercase;");
    gold.append("\n    private DString __dname_uppercase;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRefSilly_7() {");
    gold.append("\n      __downer = new DPrincipal();");
    gold.append("\n      __dname = new DString();");
    gold.append("\n      __ddescription = new DString();");
    gold.append("\n      __dviewers = new DInt32();");
    gold.append("\n      __gaddons = -1;");
    gold.append("\n      __daddons = new DRecordList<DeltaRTxAddOn>();");
    gold.append("\n      __gname_uppercase = -1;");
    gold.append("\n      __dname_uppercase = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __downer.__memory();");
    gold.append("\n      __sum += __dname.__memory();");
    gold.append("\n      __sum += __ddescription.__memory();");
    gold.append("\n      __sum += __dviewers.__memory();");
    gold.append("\n      __sum += __daddons.__memory();");
    gold.append("\n      __sum += __dname_uppercase.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RefSilly_7 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __downer.show(__item.owner.get(), __obj.planField(\"owner\"));");
    gold.append("\n      __dname.show(__item.name.get(), __obj.planField(\"name\"));");
    gold.append("\n      __ddescription.show(__item.description.get(), __obj.planField(\"description\"));");
    gold.append("\n      __dviewers.show(__item.viewers.get(), __obj.planField(\"viewers\"));");
    gold.append("\n      if (__gaddons != __item.addons.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list0 = __obj.planField(\"addons\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxAddOn> __deltaList1 = __daddons;");
    gold.append("\n          DRecordList<DeltaRTxAddOn>.Walk __deltaListWalker2 = __deltaList1.begin();");
    gold.append("\n          for (RTxAddOn __listElement3 : __item.addons.get()) {");
    gold.append("\n            DeltaRTxAddOn __deltaElement4 = __deltaList1.getPrior(__listElement3.__id(), () -> new DeltaRTxAddOn());");
    gold.append("\n            __deltaElement4.show(__listElement3, __list0.planField(__listElement3.__id()));");
    gold.append("\n            __deltaListWalker2.next(__listElement3.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker2.end(__list0);");
    gold.append("\n          __list0.end();");
    gold.append("\n        }");
    gold.append("\n        __gaddons = __item.addons.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gname_uppercase != __item.name_uppercase.getGeneration()) {");
    gold.append("\n        __dname_uppercase.show(__item.name_uppercase.get(), __obj.planField(\"name_uppercase\"));");
    gold.append("\n        __gname_uppercase = __item.name_uppercase.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __downer.clear();");
    gold.append("\n      __dname.clear();");
    gold.append("\n      __ddescription.clear();");
    gold.append("\n      __dviewers.clear();");
    gold.append("\n      __daddons.clear();");
    gold.append("\n      __dname_uppercase.clear();");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    RefSilly_7 __self = this;");
    gold.append("\n    DeltaRefSilly_7 __state = new DeltaRefSilly_7();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_AddOn = new String[] {};");
    gold.append("\n  private class RTxAddOn extends RxRecordBase<RTxAddOn> {");
    gold.append("\n    private final RTxAddOn __this;");
    gold.append("\n    private final RxString name;");
    gold.append("\n    private final RxString description;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxAddOn(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      name = new RxString(this, \"\");");
    gold.append("\n      description = new RxString(this, \"\");");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += name.__memory();");
    gold.append("\n      __sum += description.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_AddOn;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"name\":");
    gold.append("\n          return name;");
    gold.append("\n        case \"description\":");
    gold.append("\n          return description;");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"name\":");
    gold.append("\n              name.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"description\":");
    gold.append("\n              description.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"name\":");
    gold.append("\n              name.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"description\":");
    gold.append("\n              description.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n      name.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"description\");");
    gold.append("\n      description.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        name.__commit(\"name\", __forward, __reverse);");
    gold.append("\n        description.__commit(\"description\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        name.__revert();");
    gold.append("\n        description.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxAddOn __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"AddOn\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxAddOn implements DeltaNode {");
    gold.append("\n    private DString __dname;");
    gold.append("\n    private DString __ddescription;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxAddOn() {");
    gold.append("\n      __dname = new DString();");
    gold.append("\n      __ddescription = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dname.__memory();");
    gold.append("\n      __sum += __ddescription.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxAddOn __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dname.show(__item.name.get(), __obj.planField(\"name\"));");
    gold.append("\n      __ddescription.show(__item.description.get(), __obj.planField(\"description\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dname.clear();");
    gold.append("\n      __ddescription.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxArg extends NtMessageBase {");
    gold.append("\n    private final RTxArg __this;");
    gold.append("\n    private String description = \"\";");
    gold.append("\n    private String name = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"description\");");
    gold.append("\n      __hash.hashString(this.description);");
    gold.append("\n      __hash.hashString(\"name\");");
    gold.append("\n      __hash.hashString(this.name);");
    gold.append("\n      __hash.hashString(\"Arg\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_Arg = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Arg;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxArg(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"description\":");
    gold.append("\n            this.description = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          case \"name\":");
    gold.append("\n            this.name = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"description\");");
    gold.append("\n      __writer.writeString(description);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n      __writer.writeString(name);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxArg() { __this = this; }");
    gold.append("\n    private RTxArg(String description, String name) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.description = description;");
    gold.append("\n      this.name = name;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxArg implements DeltaNode {");
    gold.append("\n    private DString __dname;");
    gold.append("\n    private DString __ddescription;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxArg() {");
    gold.append("\n      __dname = new DString();");
    gold.append("\n      __ddescription = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dname.__memory();");
    gold.append("\n      __sum += __ddescription.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxArg __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dname.show(__item.name, __obj.planField(\"name\"));");
    gold.append("\n      __ddescription.show(__item.description, __obj.planField(\"description\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dname.clear();");
    gold.append("\n      __ddescription.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxAddAddOn extends NtMessageBase {");
    gold.append("\n    private final RTxAddAddOn __this;");
    gold.append("\n    private String description = \"\";");
    gold.append("\n    private String name = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"description\");");
    gold.append("\n      __hash.hashString(this.description);");
    gold.append("\n      __hash.hashString(\"name\");");
    gold.append("\n      __hash.hashString(this.name);");
    gold.append("\n      __hash.hashString(\"AddAddOn\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_AddAddOn = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_AddAddOn;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxAddAddOn(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"description\":");
    gold.append("\n            this.description = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          case \"name\":");
    gold.append("\n            this.name = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"description\");");
    gold.append("\n      __writer.writeString(description);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n      __writer.writeString(name);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxAddAddOn() { __this = this; }");
    gold.append("\n    private RTxAddAddOn(String description, String name) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.description = description;");
    gold.append("\n      this.name = name;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxAddAddOn implements DeltaNode {");
    gold.append("\n    private DString __dname;");
    gold.append("\n    private DString __ddescription;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxAddAddOn() {");
    gold.append("\n      __dname = new DString();");
    gold.append("\n      __ddescription = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dname.__memory();");
    gold.append("\n      __sum += __ddescription.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxAddAddOn __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dname.show(__item.name, __obj.planField(\"name\"));");
    gold.append("\n      __ddescription.show(__item.description, __obj.planField(\"description\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dname.clear();");
    gold.append("\n      __ddescription.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxNothing extends NtMessageBase {");
    gold.append("\n    private final RTxNothing __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"Nothing\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_Nothing = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Nothing;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxNothing(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxNothing() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxNothing implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxNothing() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxNothing __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_create_new_add_on(CoreRequestContext __context, NtPrincipal __who, RTxAddAddOn arg) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxAddOn> _AutoRef5 = _addons;");
    gold.append("\n      RTxAddAddOn _AutoExpr7 = arg;");
    gold.append("\n      RTxAddOn _CreateRef6 = _AutoRef5.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef6.description.set(_AutoExpr7.description);");
    gold.append("\n      _CreateRef6.name.set(_AutoExpr7.name);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_delete(CoreRequestContext __context, NtPrincipal __who, RTxNothing arg) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(1);");
    gold.append("\n    if ((owner.get()).equals(__who)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(2);");
    gold.append("\n      __destroyDocument();");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"create_new_add_on\":");
    gold.append("\n      case \"delete\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"create_new_add_on\":");
    gold.append("\n        handleChannelMessage_create_new_add_on(__context, __context.who, (RTxAddAddOn) __message);");
    gold.append("\n        return;");
    gold.append("\n      case \"delete\":");
    gold.append("\n        handleChannelMessage_delete(__context, __context.who, (RTxNothing) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"create_new_add_on\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_create_new_add_on(__task.context(__getKey()), __task.who, (RTxAddAddOn)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"delete\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_delete(__task.context(__getKey()), __task.who, (RTxNothing)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"create_new_add_on\":");
    gold.append("\n        return new RTxAddAddOn(__reader);");
    gold.append("\n      case \"delete\":");
    gold.append("\n        return new RTxNothing(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(3);");
    gold.append("\n    viewers.bumpUpPost();");
    gold.append("\n    __track(4);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public void __onDisconnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(5);");
    gold.append("\n    viewers.bumpDownPost();");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {");
    gold.append("\n    __onDisconnected__0(__cvalue, __cvalue.who);");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, RTxArg arg) {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(6);");
    gold.append("\n    owner.set(__who);");
    gold.append("\n    __track(7);");
    gold.append("\n    name.set(arg.name);");
    gold.append("\n    __track(8);");
    gold.append("\n    description.set(arg.description);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    return new RTxArg(__reader);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object_pre_cast) {");
    gold.append("\n    RTxArg __object = (RTxArg) __object_pre_cast;");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxAddOn> __ORDER_AddOn_name_a = new Comparator<RTxAddOn>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxAddOn __a, RTxAddOn __b) {");
    gold.append("\n      return __a.name.compareTo(__b.name);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"name\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"description\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"viewers\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"_addons\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"AddOn\"},\"privacy\":\"private\"},\"addons\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"AddOn\"}},\"privacy\":\"public\"},\"name_uppercase\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"AddOn\":{\"nature\":\"reactive_record\",\"name\":\"AddOn\",\"fields\":{\"name\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"description\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"Arg\":{\"nature\":\"native_message\",\"name\":\"Arg\",\"anonymous\":false,\"fields\":{\"name\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"description\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"AddAddOn\":{\"nature\":\"native_message\",\"name\":\"AddAddOn\",\"anonymous\":false,\"fields\":{\"name\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"description\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"Nothing\":{\"nature\":\"native_message\",\"name\":\"Nothing\",\"anonymous\":false,\"fields\":{}}},\"channels\":{\"create_new_add_on\":\"AddAddOn\",\"delete\":\"Nothing\"},\"constructors\":[\"arg\"],\"constructor\":\"Arg\",\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"name\":\"\",\"description\":\"\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:4");
    gold.append("\nMEMORY:806");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"name\":\"\",\"description\":\"\",\"viewers\":0,\"name_uppercase\":\"\"},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"viewers\":1,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"viewers\":1},\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"name\":\"\",\"description\":\"\",\"viewers\":1,\"name_uppercase\":\"\"},\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"viewers\":2,\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"viewers\":2},\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"viewers\":2},\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:1316");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"name\":\"\",\"description\":\"\",\"viewers\":2,\"_addons\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"name\":\"\",\"description\":\"\",\"viewers\":2,\"_addons\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"name\":\"\",\"description\":\"\",\"viewers\":2,\"_addons\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_RefValid_8 = null;
  private String get_RefValid_8() {
    if (cached_RefValid_8 != null) {
      return cached_RefValid_8;
    }
    cached_RefValid_8 = generateTestOutput(true, "RefValid_8", "./test_code/Demo_RefValid_success.a");
    return cached_RefValid_8;
  }

  @Test
  public void testRefValidEmission() {
    assertEmissionGood(get_RefValid_8());
  }

  @Test
  public void testRefValidSuccess() {
    assertLivePass(get_RefValid_8());
  }

  @Test
  public void testRefValidGoodWillHappy() {
    assertGoodWillHappy(get_RefValid_8());
  }

  @Test
  public void testRefValidExceptionFree() {
    assertExceptionFree(get_RefValid_8());
  }

  @Test
  public void testRefValidTODOFree() {
    assertTODOFree(get_RefValid_8());
  }

  @Test
  public void stable_RefValid_8() {
    String live = get_RefValid_8();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_RefValid_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class RefValid_8 extends LivingDocument {");
    gold.append("\n  private final RxMap<String,RTxR> m;");
    gold.append("\n  private final RxTable<RTxCard> deck;");
    gold.append("\n  private final RxTable<RTxRec> tbl;");
    gold.append("\n  private final RxTable<RTxPoint> pointdb;");
    gold.append("\n  private final RxLazy<NtMap<Integer,NtList<RTxPoint>>> points_by_x2;");
    gold.append("\n  private final RxMap<String,RTxPoint> named_points;");
    gold.append("\n  private final RxMap<Integer,RTxPoint> index_points;");
    gold.append("\n  private final RxLazy<NtMap<Integer,Double>> by_x;");
    gold.append("\n  private final RxLazy<NtMap<Integer,NtList<RTxPoint>>> points_by_x;");
    gold.append("\n  private final RxLazy<NtMap<Integer,NtMaybe<Integer>>> by_x_2;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += m.__memory();");
    gold.append("\n    __sum += deck.__memory();");
    gold.append("\n    __sum += tbl.__memory();");
    gold.append("\n    __sum += pointdb.__memory();");
    gold.append("\n    __sum += points_by_x2.__memory();");
    gold.append("\n    __sum += named_points.__memory();");
    gold.append("\n    __sum += index_points.__memory();");
    gold.append("\n    __sum += by_x.__memory();");
    gold.append("\n    __sum += points_by_x.__memory();");
    gold.append("\n    __sum += by_x_2.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public RefValid_8(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    m = new RxMap<String,RTxR>(this, new RxMap.StringCodec<RTxR>() { @Override public RTxR make(RxParent __parent) { return new RTxR(__parent).__link();} });");
    gold.append("\n    deck = new RxTable<>(__self, this, \"deck\", (RxParent __parent) -> new RTxCard(__parent).__link(), 0);");
    gold.append("\n    tbl = new RxTable<>(__self, this, \"tbl\", (RxParent __parent) -> new RTxRec(__parent).__link(), 0);");
    gold.append("\n    pointdb = new RxTable<>(__self, this, \"pointdb\", (RxParent __parent) -> new RTxPoint(__parent).__link(), 0);");
    gold.append("\n    points_by_x2 = new RxLazy<NtMap<Integer,NtList<RTxPoint>>>(this, () -> (pointdb.iterate(false).reduce((__item) -> __item.x.get(), (new __CLOSURE_Lambda2()))));");
    gold.append("\n    named_points = new RxMap<String,RTxPoint>(this, new RxMap.StringCodec<RTxPoint>() { @Override public RTxPoint make(RxParent __parent) { return new RTxPoint(__parent).__link();} });");
    gold.append("\n    index_points = new RxMap<Integer,RTxPoint>(this, new RxMap.IntegerCodec<RTxPoint>() { @Override public RTxPoint make(RxParent __parent) { return new RTxPoint(__parent).__link();} });");
    gold.append("\n    by_x = new RxLazy<NtMap<Integer,Double>>(this, () -> (pointdb.iterate(false).reduce((__item) -> __item.x.get(), (__list) -> __FUNC_4_sum_y(__list))));");
    gold.append("\n    points_by_x = new RxLazy<NtMap<Integer,NtList<RTxPoint>>>(this, () -> (pointdb.iterate(false).reduce((__item) -> __item.x.get(), (__list) -> __FUNC_5_identity_points(__list))));");
    gold.append("\n    by_x_2 = new RxLazy<NtMap<Integer,NtMaybe<Integer>>>(this, () -> (pointdb.iterate(false).reduce((__item) -> __item.x.get(), (new __CLOSURE_Lambda3()))));");
    gold.append("\n    pointdb.__subscribe(points_by_x2);");
    gold.append("\n    pointdb.__subscribe(by_x);");
    gold.append("\n    pointdb.__subscribe(points_by_x);");
    gold.append("\n    pointdb.__subscribe(by_x_2);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"m\":");
    gold.append("\n            m.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"deck\":");
    gold.append("\n            deck.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"tbl\":");
    gold.append("\n            tbl.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"pointdb\":");
    gold.append("\n            pointdb.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"named_points\":");
    gold.append("\n            named_points.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"index_points\":");
    gold.append("\n            index_points.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"m\":");
    gold.append("\n            m.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"deck\":");
    gold.append("\n            deck.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"tbl\":");
    gold.append("\n            tbl.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"pointdb\":");
    gold.append("\n            pointdb.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"named_points\":");
    gold.append("\n            named_points.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"index_points\":");
    gold.append("\n            index_points.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"m\");");
    gold.append("\n    m.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"deck\");");
    gold.append("\n    deck.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"tbl\");");
    gold.append("\n    tbl.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"pointdb\");");
    gold.append("\n    pointdb.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"named_points\");");
    gold.append("\n    named_points.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"index_points\");");
    gold.append("\n    index_points.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    m.__commit(\"m\", __forward, __reverse);");
    gold.append("\n    deck.__commit(\"deck\", __forward, __reverse);");
    gold.append("\n    tbl.__commit(\"tbl\", __forward, __reverse);");
    gold.append("\n    pointdb.__commit(\"pointdb\", __forward, __reverse);");
    gold.append("\n    named_points.__commit(\"named_points\", __forward, __reverse);");
    gold.append("\n    index_points.__commit(\"index_points\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    m.__revert();");
    gold.append("\n    deck.__revert();");
    gold.append("\n    tbl.__revert();");
    gold.append("\n    pointdb.__revert();");
    gold.append("\n    named_points.__revert();");
    gold.append("\n    index_points.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRefValid_8 implements DeltaNode {");
    gold.append("\n    private int __gpoints_by_x2;");
    gold.append("\n    private DMap<Integer,DRecordList<DeltaRTxPoint>> __dpoints_by_x2;");
    gold.append("\n    private int __gby_x;");
    gold.append("\n    private DMap<Integer,DDouble> __dby_x;");
    gold.append("\n    private int __gpoints_by_x;");
    gold.append("\n    private DMap<Integer,DRecordList<DeltaRTxPoint>> __dpoints_by_x;");
    gold.append("\n    private int __gby_x_2;");
    gold.append("\n    private DMap<Integer,DMaybe<DInt32>> __dby_x_2;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRefValid_8() {");
    gold.append("\n      __gpoints_by_x2 = -1;");
    gold.append("\n      __dpoints_by_x2 = new DMap<Integer,DRecordList<DeltaRTxPoint>>();");
    gold.append("\n      __gby_x = -1;");
    gold.append("\n      __dby_x = new DMap<Integer,DDouble>();");
    gold.append("\n      __gpoints_by_x = -1;");
    gold.append("\n      __dpoints_by_x = new DMap<Integer,DRecordList<DeltaRTxPoint>>();");
    gold.append("\n      __gby_x_2 = -1;");
    gold.append("\n      __dby_x_2 = new DMap<Integer,DMaybe<DInt32>>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dpoints_by_x2.__memory();");
    gold.append("\n      __sum += __dby_x.__memory();");
    gold.append("\n      __sum += __dpoints_by_x.__memory();");
    gold.append("\n      __sum += __dby_x_2.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RefValid_8 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gpoints_by_x2 != __item.points_by_x2.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __map7 = __obj.planField(\"points_by_x2\").planObject();");
    gold.append("\n          DMap<Integer,DRecordList<DeltaRTxPoint>> __deltaMap8 = __dpoints_by_x2;");
    gold.append("\n          DMap<Integer,DRecordList<DeltaRTxPoint>>.Walk __deltaMapWalker9 = __deltaMap8.begin();");
    gold.append("\n          for (NtPair<Integer,NtList<RTxPoint>> __mapEntry10 : __item.points_by_x2.get()) {");
    gold.append("\n            DRecordList<DeltaRTxPoint> __deltaElement11 = __deltaMapWalker9.next(__mapEntry10.key, () -> new DRecordList<DeltaRTxPoint>());");
    gold.append("\n            {");
    gold.append("\n              PrivateLazyDeltaWriter __list12 = __map7.planField(\"\" + __mapEntry10.key).planObject();");
    gold.append("\n              DRecordList<DeltaRTxPoint> __deltaList13 = __deltaElement11;");
    gold.append("\n              DRecordList<DeltaRTxPoint>.Walk __deltaListWalker14 = __deltaList13.begin();");
    gold.append("\n              for (RTxPoint __listElement15 : __mapEntry10.value) {");
    gold.append("\n                DeltaRTxPoint __deltaElement16 = __deltaList13.getPrior(__listElement15.__id(), () -> new DeltaRTxPoint());");
    gold.append("\n                __deltaElement16.show(__listElement15, __list12.planField(__listElement15.__id()));");
    gold.append("\n                __deltaListWalker14.next(__listElement15.__id());");
    gold.append("\n              }");
    gold.append("\n              __deltaListWalker14.end(__list12);");
    gold.append("\n              __list12.end();");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n          __deltaMapWalker9.end(__map7);");
    gold.append("\n          __map7.end();");
    gold.append("\n        }");
    gold.append("\n        __gpoints_by_x2 = __item.points_by_x2.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gby_x != __item.by_x.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __map17 = __obj.planField(\"by_x\").planObject();");
    gold.append("\n          DMap<Integer,DDouble> __deltaMap18 = __dby_x;");
    gold.append("\n          DMap<Integer,DDouble>.Walk __deltaMapWalker19 = __deltaMap18.begin();");
    gold.append("\n          for (NtPair<Integer,Double> __mapEntry20 : __item.by_x.get()) {");
    gold.append("\n            DDouble __deltaElement21 = __deltaMapWalker19.next(__mapEntry20.key, () -> new DDouble());");
    gold.append("\n            __deltaElement21.show(__mapEntry20.value, __map17.planField(\"\" + __mapEntry20.key));");
    gold.append("\n          }");
    gold.append("\n          __deltaMapWalker19.end(__map17);");
    gold.append("\n          __map17.end();");
    gold.append("\n        }");
    gold.append("\n        __gby_x = __item.by_x.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gpoints_by_x != __item.points_by_x.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __map22 = __obj.planField(\"points_by_x\").planObject();");
    gold.append("\n          DMap<Integer,DRecordList<DeltaRTxPoint>> __deltaMap23 = __dpoints_by_x;");
    gold.append("\n          DMap<Integer,DRecordList<DeltaRTxPoint>>.Walk __deltaMapWalker24 = __deltaMap23.begin();");
    gold.append("\n          for (NtPair<Integer,NtList<RTxPoint>> __mapEntry25 : __item.points_by_x.get()) {");
    gold.append("\n            DRecordList<DeltaRTxPoint> __deltaElement26 = __deltaMapWalker24.next(__mapEntry25.key, () -> new DRecordList<DeltaRTxPoint>());");
    gold.append("\n            {");
    gold.append("\n              PrivateLazyDeltaWriter __list27 = __map22.planField(\"\" + __mapEntry25.key).planObject();");
    gold.append("\n              DRecordList<DeltaRTxPoint> __deltaList28 = __deltaElement26;");
    gold.append("\n              DRecordList<DeltaRTxPoint>.Walk __deltaListWalker29 = __deltaList28.begin();");
    gold.append("\n              for (RTxPoint __listElement30 : __mapEntry25.value) {");
    gold.append("\n                DeltaRTxPoint __deltaElement31 = __deltaList28.getPrior(__listElement30.__id(), () -> new DeltaRTxPoint());");
    gold.append("\n                __deltaElement31.show(__listElement30, __list27.planField(__listElement30.__id()));");
    gold.append("\n                __deltaListWalker29.next(__listElement30.__id());");
    gold.append("\n              }");
    gold.append("\n              __deltaListWalker29.end(__list27);");
    gold.append("\n              __list27.end();");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n          __deltaMapWalker24.end(__map22);");
    gold.append("\n          __map22.end();");
    gold.append("\n        }");
    gold.append("\n        __gpoints_by_x = __item.points_by_x.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gby_x_2 != __item.by_x_2.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __map32 = __obj.planField(\"by_x_2\").planObject();");
    gold.append("\n          DMap<Integer,DMaybe<DInt32>> __deltaMap33 = __dby_x_2;");
    gold.append("\n          DMap<Integer,DMaybe<DInt32>>.Walk __deltaMapWalker34 = __deltaMap33.begin();");
    gold.append("\n          for (NtPair<Integer,NtMaybe<Integer>> __mapEntry35 : __item.by_x_2.get()) {");
    gold.append("\n            DMaybe<DInt32> __deltaElement36 = __deltaMapWalker34.next(__mapEntry35.key, () -> new DMaybe<DInt32>());");
    gold.append("\n            if (__mapEntry35.value.has()) {");
    gold.append("\n              Integer __maybeElement37 = (Integer)(__mapEntry35.value.get());");
    gold.append("\n              DInt32 __maybeDeltaElement38 = __deltaElement36.get(() -> new DInt32());");
    gold.append("\n              __maybeDeltaElement38.show(__maybeElement37, __map32.planField(\"\" + __mapEntry35.key));");
    gold.append("\n            } else {");
    gold.append("\n              __deltaElement36.hide(__map32.planField(\"\" + __mapEntry35.key));");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n          __deltaMapWalker34.end(__map32);");
    gold.append("\n          __map32.end();");
    gold.append("\n        }");
    gold.append("\n        __gby_x_2 = __item.by_x_2.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dpoints_by_x2.clear();");
    gold.append("\n      __dby_x.clear();");
    gold.append("\n      __dpoints_by_x.clear();");
    gold.append("\n      __dby_x_2.clear();");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    RefValid_8 __self = this;");
    gold.append("\n    DeltaRefValid_8 __state = new DeltaRefValid_8();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_R = new String[] {};");
    gold.append("\n  private class RTxR extends RxRecordBase<RTxR> {");
    gold.append("\n    private final RTxR __this;");
    gold.append("\n    private final RxInt32 x;");
    gold.append("\n    private final RxInt32 y;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxR(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      x = new RxInt32(this, 0);");
    gold.append("\n      y = new RxInt32(this, 0);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += x.__memory();");
    gold.append("\n      __sum += y.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_R;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"x\":");
    gold.append("\n          return x;");
    gold.append("\n        case \"y\":");
    gold.append("\n          return y;");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      x.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      y.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n        y.__commit(\"y\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        x.__revert();");
    gold.append("\n        y.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxR __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"R\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxR implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxR() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxR __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Card = new String[] {};");
    gold.append("\n  private class RTxCard extends RxRecordBase<RTxCard> {");
    gold.append("\n    private final RTxCard __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxInt32 value;");
    gold.append("\n    private final RxPrincipal owner;");
    gold.append("\n    private final RxInt32 ordering;");
    gold.append("\n    private RTxCard(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      value = new RxInt32(this, 0);");
    gold.append("\n      owner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      ordering = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += value.__memory();");
    gold.append("\n      __sum += owner.__memory();");
    gold.append("\n      __sum += ordering.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Card;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"value\":");
    gold.append("\n          return value;");
    gold.append("\n        case \"owner\":");
    gold.append("\n          return owner;");
    gold.append("\n        case \"ordering\":");
    gold.append("\n          return ordering;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"value\":");
    gold.append("\n              value.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"owner\":");
    gold.append("\n              owner.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"ordering\":");
    gold.append("\n              ordering.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"value\":");
    gold.append("\n              value.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"owner\":");
    gold.append("\n              owner.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"ordering\":");
    gold.append("\n              ordering.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"value\");");
    gold.append("\n      value.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n      owner.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"ordering\");");
    gold.append("\n      ordering.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        value.__commit(\"value\", __forward, __reverse);");
    gold.append("\n        owner.__commit(\"owner\", __forward, __reverse);");
    gold.append("\n        ordering.__commit(\"ordering\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        value.__revert();");
    gold.append("\n        owner.__revert();");
    gold.append("\n        ordering.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxCard __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Card\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxCard implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DInt32 __dvalue;");
    gold.append("\n    private DPrincipal __downer;");
    gold.append("\n    private DInt32 __dordering;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxCard() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dvalue = new DInt32();");
    gold.append("\n      __downer = new DPrincipal();");
    gold.append("\n      __dordering = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      __sum += __dvalue.__memory();");
    gold.append("\n      __sum += __downer.__memory();");
    gold.append("\n      __sum += __dordering.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxCard __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      __dvalue.show(__item.value.get(), __obj.planField(\"value\"));");
    gold.append("\n      __downer.show(__item.owner.get(), __obj.planField(\"owner\"));");
    gold.append("\n      __dordering.show(__item.ordering.get(), __obj.planField(\"ordering\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __dvalue.clear();");
    gold.append("\n      __downer.clear();");
    gold.append("\n      __dordering.clear();");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Rec = new String[] {};");
    gold.append("\n  private class RTxRec extends RxRecordBase<RTxRec> {");
    gold.append("\n    private final RTxRec __this;");
    gold.append("\n    private final RxInt32 x;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxRec(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      x = new RxInt32(this, 0);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    private void __METH_6_zero() {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(0);");
    gold.append("\n      x.set(0);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += x.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Rec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"x\":");
    gold.append("\n          return x;");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      x.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        x.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxRec __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Rec\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxRec implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxRec() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxRec __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Point = new String[] {};");
    gold.append("\n  private class RTxPoint extends RxRecordBase<RTxPoint> {");
    gold.append("\n    private final RTxPoint __this;");
    gold.append("\n    private final RxInt32 x;");
    gold.append("\n    private final RxInt32 y;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxPoint(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      x = new RxInt32(this, 0);");
    gold.append("\n      y = new RxInt32(this, 0);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += x.__memory();");
    gold.append("\n      __sum += y.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Point;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"x\":");
    gold.append("\n          return x;");
    gold.append("\n        case \"y\":");
    gold.append("\n          return y;");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      x.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      y.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n        y.__commit(\"y\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        x.__revert();");
    gold.append("\n        y.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxPoint __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Point\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPoint implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPoint() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPoint __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private void __FUNC_0_shuffle() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(1);");
    gold.append("\n    int ordering = 0;");
    gold.append("\n    __track(2);");
    gold.append("\n    NtList<RxInt32> _auto_39 = (deck.iterate(false).shuffle(true, __random)).transform((item) -> item.ordering);");
    gold.append("\n    for (RxInt32 _auto_40 : _auto_39) {");
    gold.append("\n      _auto_40.set(ordering++);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void __FUNC_1_deal_cards(NtPrincipal who, int count) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(3);");
    gold.append("\n    NtList<RxPrincipal> _auto_41 = (deck.iterate(false).where(false, new __CLOSURE_WhereClause0()).orderBy(false, __ORDER_Card_ordering_a).limit(true, count)).transform((item) -> item.owner);");
    gold.append("\n    for (RxPrincipal _auto_42 : _auto_41) {");
    gold.append("\n      _auto_42.set(who);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void __FUNC_2_zero_records() {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(4);");
    gold.append("\n    (tbl.iterate(true)).map((__item) -> { __item.__METH_6_zero(); });");
    gold.append("\n  }");
    gold.append("\n  private void __FUNC_3_trash_cards_randomly(NtPrincipal who, int count) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(5);");
    gold.append("\n    (deck.iterate(false).where(false, new __CLOSURE_WhereClause1(who)).shuffle(false, __random).limit(true, count)).map((__item) -> { __item.__delete(); });");
    gold.append("\n  }");
    gold.append("\n  private double __FUNC_4_sum_y(NtList<RTxPoint> points) {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(0);");
    gold.append("\n    double v = 0.0;");
    gold.append("\n    __track(1);");
    gold.append("\n    for(RTxPoint p : points.get()) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(2);");
    gold.append("\n      v += p.y.get();");
    gold.append("\n    }");
    gold.append("\n    __track(3);");
    gold.append("\n    return v;");
    gold.append("\n  }");
    gold.append("\n  private NtList<RTxPoint> __FUNC_5_identity_points(NtList<RTxPoint> cards) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    return cards.get();");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(NtPrincipal.NO_ONE);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause1 implements WhereClause<RTxCard> {");
    gold.append("\n    private NtPrincipal who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause1(NtPrincipal who) {");
    gold.append("\n      this.who = who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(who);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_Lambda2 implements Function<NtList<RTxPoint>, NtList<RTxPoint>> {");
    gold.append("\n    @Override");
    gold.append("\n    public NtList<RTxPoint> apply(NtList<RTxPoint> list) {");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return list.get();");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_Lambda3 implements Function<NtList<RTxPoint>, NtMaybe<Integer>> {");
    gold.append("\n    @Override");
    gold.append("\n    public NtMaybe<Integer> apply(NtList<RTxPoint> list) {");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return LibStatistics.sumInts(list.get().transform((item) -> item.y.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxCard> __ORDER_Card_ordering_a = new Comparator<RTxCard>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxCard __a, RTxCard __b) {");
    gold.append("\n      return __a.ordering.compareTo(__b.ordering);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"m\":{\"type\":{\"nature\":\"reactive_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"string\"},\"range\":{\"nature\":\"reactive_ref\",\"ref\":\"R\"}},\"privacy\":\"private\"},\"deck\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Card\"},\"privacy\":\"private\"},\"tbl\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Rec\"},\"privacy\":\"private\"},\"pointdb\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Point\"},\"privacy\":\"private\"},\"by_x\":{\"type\":{\"nature\":\"native_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"int\"},\"range\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"points_by_x\":{\"type\":{\"nature\":\"native_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"int\"},\"range\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"native_ref\",\"ref\":\"Point\"}}},\"privacy\":\"public\"},\"points_by_x2\":{\"type\":{\"nature\":\"native_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"int\"},\"range\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Point\"}}},\"privacy\":\"public\"},\"by_x_2\":{\"type\":{\"nature\":\"native_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"int\"},\"range\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}}},\"privacy\":\"public\"},\"named_points\":{\"type\":{\"nature\":\"reactive_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"string\"},\"range\":{\"nature\":\"reactive_ref\",\"ref\":\"Point\"}},\"privacy\":\"private\"},\"index_points\":{\"type\":{\"nature\":\"reactive_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"int\"},\"range\":{\"nature\":\"reactive_ref\",\"ref\":\"Point\"}},\"privacy\":\"private\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"R\":{\"nature\":\"reactive_record\",\"name\":\"R\",\"fields\":{\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"y\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"Card\":{\"nature\":\"reactive_record\",\"name\":\"Card\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"value\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"ordering\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"Rec\":{\"nature\":\"reactive_record\",\"name\":\"Rec\",\"fields\":{\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"Point\":{\"nature\":\"reactive_record\",\"name\":\"Point\",\"fields\":{\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"y\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"}}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:1388");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:1826");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"m\":{},\"deck\":{},\"tbl\":{},\"pointdb\":{},\"named_points\":{},\"index_points\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"m\":{},\"deck\":{},\"tbl\":{},\"pointdb\":{},\"named_points\":{},\"index_points\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"m\":{},\"deck\":{},\"tbl\":{},\"pointdb\":{},\"named_points\":{},\"index_points\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_ReferenceIntro_9 = null;
  private String get_ReferenceIntro_9() {
    if (cached_ReferenceIntro_9 != null) {
      return cached_ReferenceIntro_9;
    }
    cached_ReferenceIntro_9 = generateTestOutput(true, "ReferenceIntro_9", "./test_code/Demo_ReferenceIntro_success.a");
    return cached_ReferenceIntro_9;
  }

  @Test
  public void testReferenceIntroEmission() {
    assertEmissionGood(get_ReferenceIntro_9());
  }

  @Test
  public void testReferenceIntroSuccess() {
    assertLivePass(get_ReferenceIntro_9());
  }

  @Test
  public void testReferenceIntroGoodWillHappy() {
    assertGoodWillHappy(get_ReferenceIntro_9());
  }

  @Test
  public void testReferenceIntroExceptionFree() {
    assertExceptionFree(get_ReferenceIntro_9());
  }

  @Test
  public void testReferenceIntroTODOFree() {
    assertTODOFree(get_ReferenceIntro_9());
  }

  @Test
  public void stable_ReferenceIntro_9() {
    String live = get_ReferenceIntro_9();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_ReferenceIntro_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class ReferenceIntro_9 extends LivingDocument {");
    gold.append("\n  private final RxPrincipal creator;");
    gold.append("\n  private final RxInt32 x;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += creator.__memory();");
    gold.append("\n    __sum += x.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public ReferenceIntro_9(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    creator = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    x = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"creator\":");
    gold.append("\n            creator.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"creator\":");
    gold.append("\n            creator.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"creator\");");
    gold.append("\n    creator.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    creator.__commit(\"creator\", __forward, __reverse);");
    gold.append("\n    x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    creator.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaReferenceIntro_9 implements DeltaNode {");
    gold.append("\n    private DPrincipal __dcreator;");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaReferenceIntro_9() {");
    gold.append("\n      __dcreator = new DPrincipal();");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dcreator.__memory();");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(ReferenceIntro_9 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dcreator.show(__item.creator.get(), __obj.planField(\"creator\"));");
    gold.append("\n      __dx.show(__item.x.get(), __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dcreator.clear();");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    ReferenceIntro_9 __self = this;");
    gold.append("\n    DeltaReferenceIntro_9 __state = new DeltaReferenceIntro_9();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxConsXYZ extends NtMessageBase {");
    gold.append("\n    private final RTxConsXYZ __this;");
    gold.append("\n    private int x = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"x\");");
    gold.append("\n      __hash.hashInteger(this.x);");
    gold.append("\n      __hash.hashString(\"ConsXYZ\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_ConsXYZ = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_ConsXYZ;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxConsXYZ(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            this.x = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      __writer.writeInteger(x);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxConsXYZ() { __this = this; }");
    gold.append("\n    private RTxConsXYZ(int x) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.x = x;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxConsXYZ implements DeltaNode {");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxConsXYZ() {");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxConsXYZ __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dx.show(__item.x, __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxNothing extends NtMessageBase {");
    gold.append("\n    private final RTxNothing __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"Nothing\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_Nothing = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Nothing;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxNothing(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxNothing() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxNothing implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxNothing() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxNothing __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxParam extends NtMessageBase {");
    gold.append("\n    private final RTxParam __this;");
    gold.append("\n    private int z = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"z\");");
    gold.append("\n      __hash.hashInteger(this.z);");
    gold.append("\n      __hash.hashString(\"Param\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_Param = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Param;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxParam(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"z\":");
    gold.append("\n            this.z = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"z\");");
    gold.append("\n      __writer.writeInteger(z);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxParam() { __this = this; }");
    gold.append("\n    private RTxParam(int z) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.z = z;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxParam implements DeltaNode {");
    gold.append("\n    private DInt32 __dz;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxParam() {");
    gold.append("\n      __dz = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dz.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxParam __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dz.show(__item.z, __obj.planField(\"z\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dz.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_square(CoreRequestContext __context, NtPrincipal __who, RTxNothing n) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    x.set(x.get() * x.get());");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_zero(CoreRequestContext __context, NtPrincipal __who, RTxNothing n) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(1);");
    gold.append("\n    x.set(0);");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_add(CoreRequestContext __context, NtPrincipal __who, RTxParam p) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(2);");
    gold.append("\n    x.opAddTo(p.z);");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_kill(CoreRequestContext __context, NtPrincipal __who, RTxNothing n) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(3);");
    gold.append("\n    if ((__who).equals(creator.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(4);");
    gold.append("\n      __destroyDocument();");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"zero\":");
    gold.append("\n      case \"add\":");
    gold.append("\n      case \"square\":");
    gold.append("\n      case \"kill\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"zero\":");
    gold.append("\n        handleChannelMessage_zero(__context, __context.who, (RTxNothing) __message);");
    gold.append("\n        return;");
    gold.append("\n      case \"add\":");
    gold.append("\n        handleChannelMessage_add(__context, __context.who, (RTxParam) __message);");
    gold.append("\n        return;");
    gold.append("\n      case \"square\":");
    gold.append("\n        handleChannelMessage_square(__context, __context.who, (RTxNothing) __message);");
    gold.append("\n        return;");
    gold.append("\n      case \"kill\":");
    gold.append("\n        handleChannelMessage_kill(__context, __context.who, (RTxNothing) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"square\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_square(__task.context(__getKey()), __task.who, (RTxNothing)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"zero\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_zero(__task.context(__getKey()), __task.who, (RTxNothing)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"add\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_add(__task.context(__getKey()), __task.who, (RTxParam)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"kill\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_kill(__task.context(__getKey()), __task.who, (RTxNothing)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"square\":");
    gold.append("\n        return new RTxNothing(__reader);");
    gold.append("\n      case \"zero\":");
    gold.append("\n        return new RTxNothing(__reader);");
    gold.append("\n      case \"add\":");
    gold.append("\n        return new RTxParam(__reader);");
    gold.append("\n      case \"kill\":");
    gold.append("\n        return new RTxNothing(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return LibPrincipal.isAdamaDeveloper(__who);");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(5);");
    gold.append("\n    return (__who).equals(creator.get());");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, RTxConsXYZ c) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(6);");
    gold.append("\n    creator.set(__who);");
    gold.append("\n    __track(7);");
    gold.append("\n    x.set(c.x);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    return new RTxConsXYZ(__reader);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object_pre_cast) {");
    gold.append("\n    RTxConsXYZ __object = (RTxConsXYZ) __object_pre_cast;");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"creator\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"ConsXYZ\":{\"nature\":\"native_message\",\"name\":\"ConsXYZ\",\"anonymous\":false,\"fields\":{\"x\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"Nothing\":{\"nature\":\"native_message\",\"name\":\"Nothing\",\"anonymous\":false,\"fields\":{}},\"Param\":{\"nature\":\"native_message\",\"name\":\"Param\",\"anonymous\":false,\"fields\":{\"z\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}}},\"channels\":{\"zero\":\"Nothing\",\"add\":\"Param\",\"square\":\"Nothing\",\"kill\":\"Nothing\"},\"constructors\":[\"c\"],\"constructor\":\"ConsXYZ\",\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:3");
    gold.append("\nMEMORY:496");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"creator\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"x\":0},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"creator\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"x\":0},\"seq\":6}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"125\"}-->{\"__messages\":null,\"__seq\":7,\"__entropy\":\"5082315122564986995\",\"__time\":\"125\"} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":7}");
    gold.append("\n+ RANDO DELTA:{\"seq\":7}");
    gold.append("\nMEMORY:766");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"creator\":{\"agent\":\"?\",\"authority\":\"?\"},\"x\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"5082315122564986995\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"125\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"creator\":{\"agent\":\"?\",\"authority\":\"?\"},\"x\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"5082315122564986995\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"125\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"creator\":{\"agent\":\"?\",\"authority\":\"?\"},\"x\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"5082315122564986995\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"125\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_ServiceHandler_10 = null;
  private String get_ServiceHandler_10() {
    if (cached_ServiceHandler_10 != null) {
      return cached_ServiceHandler_10;
    }
    cached_ServiceHandler_10 = generateTestOutput(true, "ServiceHandler_10", "./test_code/Demo_ServiceHandler_success.a");
    return cached_ServiceHandler_10;
  }

  @Test
  public void testServiceHandlerEmission() {
    assertEmissionGood(get_ServiceHandler_10());
  }

  @Test
  public void testServiceHandlerSuccess() {
    assertLivePass(get_ServiceHandler_10());
  }

  @Test
  public void testServiceHandlerGoodWillHappy() {
    assertGoodWillHappy(get_ServiceHandler_10());
  }

  @Test
  public void testServiceHandlerExceptionFree() {
    assertExceptionFree(get_ServiceHandler_10());
  }

  @Test
  public void testServiceHandlerTODOFree() {
    assertTODOFree(get_ServiceHandler_10());
  }

  @Test
  public void stable_ServiceHandler_10() {
    String live = get_ServiceHandler_10();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_ServiceHandler_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class ServiceHandler_10 extends LivingDocument {");
    gold.append("\n  private final RxInt32 x;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += x.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public ServiceHandler_10(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    x = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaServiceHandler_10 implements DeltaNode {");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaServiceHandler_10() {");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(ServiceHandler_10 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dx.show(__item.x.get(), __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    ServiceHandler_10 __self = this;");
    gold.append("\n    DeltaServiceHandler_10 __state = new DeltaServiceHandler_10();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxM extends NtMessageBase {");
    gold.append("\n    private final RTxM __this;");
    gold.append("\n    private int dx = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"dx\");");
    gold.append("\n      __hash.hashInteger(this.dx);");
    gold.append("\n      __hash.hashString(\"M\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_M = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_M;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxM(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"dx\":");
    gold.append("\n            this.dx = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"dx\");");
    gold.append("\n      __writer.writeInteger(dx);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxM() { __this = this; }");
    gold.append("\n    private RTxM(int dx) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.dx = dx;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxM implements DeltaNode {");
    gold.append("\n    private DInt32 __ddx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxM() {");
    gold.append("\n      __ddx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __ddx.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxM __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __ddx.show(__item.dx, __obj.planField(\"dx\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __ddx.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_change(CoreRequestContext __context, NtPrincipal __who, RTxM m) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    x.opAddTo(m.dx);");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"change\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"change\":");
    gold.append("\n        handleChannelMessage_change(__context, __context.who, (RTxM) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"change\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_change(__task.context(__getKey()), __task.who, (RTxM)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"change\":");
    gold.append("\n        return new RTxM(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(1);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(2);");
    gold.append("\n    x.set(123);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"M\":{\"nature\":\"native_message\",\"name\":\"M\",\"anonymous\":false,\"fields\":{\"dx\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}}},\"channels\":{\"change\":\"M\"},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"x\":123,\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:2");
    gold.append("\nMEMORY:432");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":123},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":123},\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:630");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"x\":123,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"x\":123,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"x\":123,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_Spreadsheet_11 = null;
  private String get_Spreadsheet_11() {
    if (cached_Spreadsheet_11 != null) {
      return cached_Spreadsheet_11;
    }
    cached_Spreadsheet_11 = generateTestOutput(true, "Spreadsheet_11", "./test_code/Demo_Spreadsheet_success.a");
    return cached_Spreadsheet_11;
  }

  @Test
  public void testSpreadsheetEmission() {
    assertEmissionGood(get_Spreadsheet_11());
  }

  @Test
  public void testSpreadsheetSuccess() {
    assertLivePass(get_Spreadsheet_11());
  }

  @Test
  public void testSpreadsheetGoodWillHappy() {
    assertGoodWillHappy(get_Spreadsheet_11());
  }

  @Test
  public void testSpreadsheetExceptionFree() {
    assertExceptionFree(get_Spreadsheet_11());
  }

  @Test
  public void testSpreadsheetTODOFree() {
    assertTODOFree(get_Spreadsheet_11());
  }

  @Test
  public void stable_Spreadsheet_11() {
    String live = get_Spreadsheet_11();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_Spreadsheet_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class Spreadsheet_11 extends LivingDocument {");
    gold.append("\n  private final RxInt32 x;");
    gold.append("\n  private final RxInt32 y;");
    gold.append("\n  private final RxDouble d;");
    gold.append("\n  private final RxBoolean b;");
    gold.append("\n  private final RxString name;");
    gold.append("\n  private final RxLazy<Integer> z;");
    gold.append("\n  private final RxLazy<Double> z2;");
    gold.append("\n  private final RxLazy<String> namex2;");
    gold.append("\n  private final RxDouble c1;");
    gold.append("\n  private final RxDouble c2;");
    gold.append("\n  private final RxInt32 s;");
    gold.append("\n  private final RxLazy<Integer> name_len;");
    gold.append("\n  private final RxLazy<Boolean> bz;");
    gold.append("\n  private final RxLazy<Boolean> baz;");
    gold.append("\n  private final RxLazy<Boolean> baz2;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += x.__memory();");
    gold.append("\n    __sum += y.__memory();");
    gold.append("\n    __sum += d.__memory();");
    gold.append("\n    __sum += b.__memory();");
    gold.append("\n    __sum += name.__memory();");
    gold.append("\n    __sum += z.__memory();");
    gold.append("\n    __sum += z2.__memory();");
    gold.append("\n    __sum += namex2.__memory();");
    gold.append("\n    __sum += c1.__memory();");
    gold.append("\n    __sum += c2.__memory();");
    gold.append("\n    __sum += s.__memory();");
    gold.append("\n    __sum += name_len.__memory();");
    gold.append("\n    __sum += bz.__memory();");
    gold.append("\n    __sum += baz.__memory();");
    gold.append("\n    __sum += baz2.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Spreadsheet_11(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    x = new RxInt32(this, 0);");
    gold.append("\n    y = new RxInt32(this, 0);");
    gold.append("\n    d = new RxDouble(this, 0.0);");
    gold.append("\n    b = new RxBoolean(this, false);");
    gold.append("\n    name = new RxString(this, \"\");");
    gold.append("\n    z = new RxLazy<Integer>(this, () -> (x.get() + y.get()));");
    gold.append("\n    z2 = new RxLazy<Double>(this, () -> ((b.get() ? x.get() : y.get()) * d.get()));");
    gold.append("\n    namex2 = new RxLazy<String>(this, () -> (name.get() + name.get()));");
    gold.append("\n    c1 = new RxDouble(this, 0.0);");
    gold.append("\n    c2 = new RxDouble(this, 0.0);");
    gold.append("\n    s = new RxInt32(this, 0);");
    gold.append("\n    name_len = new RxLazy<Integer>(this, () -> (namex2.get().length()));");
    gold.append("\n    bz = new RxLazy<Boolean>(this, () -> (name_len.get() > 100));");
    gold.append("\n    baz = new RxLazy<Boolean>(this, () -> (!bz.get()));");
    gold.append("\n    baz2 = new RxLazy<Boolean>(this, () -> (!baz.get()));");
    gold.append("\n    x.__subscribe(z);");
    gold.append("\n    y.__subscribe(z);");
    gold.append("\n    b.__subscribe(z2);");
    gold.append("\n    x.__subscribe(z2);");
    gold.append("\n    y.__subscribe(z2);");
    gold.append("\n    d.__subscribe(z2);");
    gold.append("\n    name.__subscribe(namex2);");
    gold.append("\n    namex2.__subscribe(name_len);");
    gold.append("\n    name_len.__subscribe(bz);");
    gold.append("\n    bz.__subscribe(baz);");
    gold.append("\n    baz.__subscribe(baz2);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y\":");
    gold.append("\n            y.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"d\":");
    gold.append("\n            d.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"b\":");
    gold.append("\n            b.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"name\":");
    gold.append("\n            name.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"c1\":");
    gold.append("\n            c1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"c2\":");
    gold.append("\n            c2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"s\":");
    gold.append("\n            s.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y\":");
    gold.append("\n            y.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"d\":");
    gold.append("\n            d.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"b\":");
    gold.append("\n            b.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"name\":");
    gold.append("\n            name.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"c1\":");
    gold.append("\n            c1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"c2\":");
    gold.append("\n            c2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"s\":");
    gold.append("\n            s.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n    y.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"d\");");
    gold.append("\n    d.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"b\");");
    gold.append("\n    b.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n    name.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"c1\");");
    gold.append("\n    c1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"c2\");");
    gold.append("\n    c2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"s\");");
    gold.append("\n    s.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n    y.__commit(\"y\", __forward, __reverse);");
    gold.append("\n    d.__commit(\"d\", __forward, __reverse);");
    gold.append("\n    b.__commit(\"b\", __forward, __reverse);");
    gold.append("\n    name.__commit(\"name\", __forward, __reverse);");
    gold.append("\n    c1.__commit(\"c1\", __forward, __reverse);");
    gold.append("\n    c2.__commit(\"c2\", __forward, __reverse);");
    gold.append("\n    s.__commit(\"s\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    y.__revert();");
    gold.append("\n    d.__revert();");
    gold.append("\n    b.__revert();");
    gold.append("\n    name.__revert();");
    gold.append("\n    c1.__revert();");
    gold.append("\n    c2.__revert();");
    gold.append("\n    s.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaSpreadsheet_11 implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaSpreadsheet_11() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(Spreadsheet_11 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    Spreadsheet_11 __self = this;");
    gold.append("\n    DeltaSpreadsheet_11 __state = new DeltaSpreadsheet_11();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private void __step_next() {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(0);");
    gold.append("\n    name.set(\"12345678901234567890123456789012345678901234567890 x \");");
    gold.append("\n    __track(1);");
    gold.append("\n    d.set(3.14);");
    gold.append("\n    __track(2);");
    gold.append("\n    b.set(false);");
    gold.append("\n    __track(3);");
    gold.append("\n    x.set(5);");
    gold.append("\n    __track(4);");
    gold.append("\n    y.set(10);");
    gold.append("\n    __track(5);");
    gold.append("\n    __transitionStateMachine(\"end\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_end() {");
    gold.append("\n    __code_cost += 9;");
    gold.append("\n    __track(6);");
    gold.append("\n    x.set(0);");
    gold.append("\n    __track(7);");
    gold.append("\n    y.set(1);");
    gold.append("\n    __track(8);");
    gold.append("\n    s.set(z.get());");
    gold.append("\n    __track(9);");
    gold.append("\n    d.set(3.14);");
    gold.append("\n    __track(10);");
    gold.append("\n    b.set(true);");
    gold.append("\n    __track(11);");
    gold.append("\n    c1.set(z2.get());");
    gold.append("\n    __track(12);");
    gold.append("\n    b.set(false);");
    gold.append("\n    __track(13);");
    gold.append("\n    c2.set(z2.get());");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"next\":");
    gold.append("\n        __step_next();");
    gold.append("\n        return;");
    gold.append("\n      case \"end\":");
    gold.append("\n        __step_end();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(14);");
    gold.append("\n    x.set(2);");
    gold.append("\n    __track(15);");
    gold.append("\n    y.set(3);");
    gold.append("\n    __track(16);");
    gold.append("\n    d.set(1.5);");
    gold.append("\n    __track(17);");
    gold.append("\n    b.set(true);");
    gold.append("\n    __track(18);");
    gold.append("\n    name.set(\"Jack Jillian\");");
    gold.append("\n    __track(19);");
    gold.append("\n    __transitionStateMachine(\"next\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"y\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"d\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"},\"b\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"private\"},\"name\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"private\"},\"z\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"z2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"private\"},\"namex2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"private\"},\"name_len\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"bz\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"private\"},\"baz\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"private\"},\"baz2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"private\"},\"c1\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"},\"c2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"},\"s\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[\"next\",\"end\"]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__state\":\"end\",\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"x\":5,\"y\":10,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"__messages\":null,\"__seq\":1} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__state\":\"\",\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\",\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"c1\":0.0,\"c2\":3.14,\"s\":1} need:false in:-25");
    gold.append("\nCPU:23");
    gold.append("\nMEMORY:1286");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:1404");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"c1\":0.0,\"c2\":3.14,\"s\":1,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"c1\":0.0,\"c2\":3.14,\"s\":1,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"c1\":0.0,\"c2\":3.14,\"s\":1,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_TicTacToe_12 = null;
  private String get_TicTacToe_12() {
    if (cached_TicTacToe_12 != null) {
      return cached_TicTacToe_12;
    }
    cached_TicTacToe_12 = generateTestOutput(true, "TicTacToe_12", "./test_code/Demo_TicTacToe_success.a");
    return cached_TicTacToe_12;
  }

  @Test
  public void testTicTacToeEmission() {
    assertEmissionGood(get_TicTacToe_12());
  }

  @Test
  public void testTicTacToeSuccess() {
    assertLivePass(get_TicTacToe_12());
  }

  @Test
  public void testTicTacToeGoodWillHappy() {
    assertGoodWillHappy(get_TicTacToe_12());
  }

  @Test
  public void testTicTacToeExceptionFree() {
    assertExceptionFree(get_TicTacToe_12());
  }

  @Test
  public void testTicTacToeTODOFree() {
    assertTODOFree(get_TicTacToe_12());
  }

  @Test
  public void stable_TicTacToe_12() {
    String live = get_TicTacToe_12();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_TicTacToe_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class TicTacToe_12 extends LivingDocument {");
    gold.append("\n  private final RxPrincipal playerX;");
    gold.append("\n  private final RxPrincipal playerO;");
    gold.append("\n  private final RxPrincipal current;");
    gold.append("\n  private final RxInt32 wins_X;");
    gold.append("\n  private final RxInt32 wins_O;");
    gold.append("\n  private final RxInt32 stalemates;");
    gold.append("\n  private final RxTable<RTxSquare> _squares;");
    gold.append("\n  private final RxLazy<NtList<RTxSquare>> board;");
    gold.append("\n  private final RxGuard ___your_role;");
    gold.append("\n  private final RxGuard ___your_turn;");
    gold.append("\n  private final RxGuard ___your_wins;");
    gold.append("\n  public String __COMPUTE_your_role(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return ((playerX.get()).equals(__who) ? \"X\" : ((playerO.get()).equals(__who) ? \"O\" : \"Observer\"));");
    gold.append("\n  }");
    gold.append("\n  public boolean __COMPUTE_your_turn(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return (current.get()).equals(__who);");
    gold.append("\n  }");
    gold.append("\n  public int __COMPUTE_your_wins(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return ((playerX.get()).equals(__who) ? wins_X.get() : ((playerO.get()).equals(__who) ? wins_O.get() : 0));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += playerX.__memory();");
    gold.append("\n    __sum += playerO.__memory();");
    gold.append("\n    __sum += current.__memory();");
    gold.append("\n    __sum += wins_X.__memory();");
    gold.append("\n    __sum += wins_O.__memory();");
    gold.append("\n    __sum += stalemates.__memory();");
    gold.append("\n    __sum += _squares.__memory();");
    gold.append("\n    __sum += board.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public TicTacToe_12(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    playerX = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    playerO = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    current = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    wins_X = new RxInt32(this, 0);");
    gold.append("\n    wins_O = new RxInt32(this, 0);");
    gold.append("\n    stalemates = new RxInt32(this, 0);");
    gold.append("\n    _squares = new RxTable<>(__self, this, \"_squares\", (RxParent __parent) -> new RTxSquare(__parent).__link(), 0);");
    gold.append("\n    board = new RxLazy<NtList<RTxSquare>>(this, () -> (_squares.iterate(true)));");
    gold.append("\n    ___your_role =  new RxGuard();");
    gold.append("\n    playerX.__subscribe(___your_role);");
    gold.append("\n    playerO.__subscribe(___your_role);");
    gold.append("\n    ___your_turn =  new RxGuard();");
    gold.append("\n    current.__subscribe(___your_turn);");
    gold.append("\n    ___your_wins =  new RxGuard();");
    gold.append("\n    playerX.__subscribe(___your_wins);");
    gold.append("\n    wins_X.__subscribe(___your_wins);");
    gold.append("\n    playerO.__subscribe(___your_wins);");
    gold.append("\n    wins_O.__subscribe(___your_wins);");
    gold.append("\n    _squares.__subscribe(board);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"playerX\":");
    gold.append("\n            playerX.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"playerO\":");
    gold.append("\n            playerO.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"current\":");
    gold.append("\n            current.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"wins_X\":");
    gold.append("\n            wins_X.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"wins_O\":");
    gold.append("\n            wins_O.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"stalemates\":");
    gold.append("\n            stalemates.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_squares\":");
    gold.append("\n            _squares.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"playerX\":");
    gold.append("\n            playerX.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"playerO\":");
    gold.append("\n            playerO.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"current\":");
    gold.append("\n            current.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"wins_X\":");
    gold.append("\n            wins_X.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"wins_O\":");
    gold.append("\n            wins_O.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"stalemates\":");
    gold.append("\n            stalemates.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_squares\":");
    gold.append("\n            _squares.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"playerX\");");
    gold.append("\n    playerX.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"playerO\");");
    gold.append("\n    playerO.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"current\");");
    gold.append("\n    current.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"wins_X\");");
    gold.append("\n    wins_X.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"wins_O\");");
    gold.append("\n    wins_O.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"stalemates\");");
    gold.append("\n    stalemates.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_squares\");");
    gold.append("\n    _squares.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    playerX.__commit(\"playerX\", __forward, __reverse);");
    gold.append("\n    playerO.__commit(\"playerO\", __forward, __reverse);");
    gold.append("\n    current.__commit(\"current\", __forward, __reverse);");
    gold.append("\n    wins_X.__commit(\"wins_X\", __forward, __reverse);");
    gold.append("\n    wins_O.__commit(\"wins_O\", __forward, __reverse);");
    gold.append("\n    stalemates.__commit(\"stalemates\", __forward, __reverse);");
    gold.append("\n    _squares.__commit(\"_squares\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    playerX.__revert();");
    gold.append("\n    playerO.__revert();");
    gold.append("\n    current.__revert();");
    gold.append("\n    wins_X.__revert();");
    gold.append("\n    wins_O.__revert();");
    gold.append("\n    stalemates.__revert();");
    gold.append("\n    _squares.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaTicTacToe_12 implements DeltaNode {");
    gold.append("\n    private DPrincipal __dcurrent;");
    gold.append("\n    private DInt32 __dwins_X;");
    gold.append("\n    private DInt32 __dwins_O;");
    gold.append("\n    private DInt32 __dstalemates;");
    gold.append("\n    private int __gboard;");
    gold.append("\n    private DRecordList<DeltaRTxSquare> __dboard;");
    gold.append("\n    private long __gyour_role;");
    gold.append("\n    private DString __dyour_role;");
    gold.append("\n    private long __gyour_turn;");
    gold.append("\n    private DBoolean __dyour_turn;");
    gold.append("\n    private long __gyour_wins;");
    gold.append("\n    private DInt32 __dyour_wins;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaTicTacToe_12() {");
    gold.append("\n      __dcurrent = new DPrincipal();");
    gold.append("\n      __dwins_X = new DInt32();");
    gold.append("\n      __dwins_O = new DInt32();");
    gold.append("\n      __dstalemates = new DInt32();");
    gold.append("\n      __gboard = -1;");
    gold.append("\n      __dboard = new DRecordList<DeltaRTxSquare>();");
    gold.append("\n      __gyour_role = -1;");
    gold.append("\n      __dyour_role = new DString();");
    gold.append("\n      __gyour_turn = -1;");
    gold.append("\n      __dyour_turn = new DBoolean();");
    gold.append("\n      __gyour_wins = -1;");
    gold.append("\n      __dyour_wins = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dcurrent.__memory();");
    gold.append("\n      __sum += __dwins_X.__memory();");
    gold.append("\n      __sum += __dwins_O.__memory();");
    gold.append("\n      __sum += __dstalemates.__memory();");
    gold.append("\n      __sum += __dboard.__memory();");
    gold.append("\n      __sum += __dyour_role.__memory();");
    gold.append("\n      __sum += __dyour_turn.__memory();");
    gold.append("\n      __sum += __dyour_wins.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(TicTacToe_12 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 8;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dcurrent.show(__item.current.get(), __obj.planField(\"current\"));");
    gold.append("\n      __dwins_X.show(__item.wins_X.get(), __obj.planField(\"wins_X\"));");
    gold.append("\n      __dwins_O.show(__item.wins_O.get(), __obj.planField(\"wins_O\"));");
    gold.append("\n      __dstalemates.show(__item.stalemates.get(), __obj.planField(\"stalemates\"));");
    gold.append("\n      if (__gboard != __item.board.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list2 = __obj.planField(\"board\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxSquare> __deltaList3 = __dboard;");
    gold.append("\n          DRecordList<DeltaRTxSquare>.Walk __deltaListWalker4 = __deltaList3.begin();");
    gold.append("\n          for (RTxSquare __listElement5 : __item.board.get()) {");
    gold.append("\n            DeltaRTxSquare __deltaElement6 = __deltaList3.getPrior(__listElement5.__id(), () -> new DeltaRTxSquare());");
    gold.append("\n            __deltaElement6.show(__listElement5, __list2.planField(__listElement5.__id()));");
    gold.append("\n            __deltaListWalker4.next(__listElement5.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker4.end(__list2);");
    gold.append("\n          __list2.end();");
    gold.append("\n        }");
    gold.append("\n        __gboard = __item.board.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      RTx__ViewerType __VIEWER = (RTx__ViewerType) __writer.viewerState;");
    gold.append("\n      long __CHECK = 0;");
    gold.append("\n      __CHECK = __item.___your_role.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__gyour_role != __CHECK)  {");
    gold.append("\n        String __local_your_role = __item.__COMPUTE_your_role(__writer.who, __VIEWER);");
    gold.append("\n        __dyour_role.show(__local_your_role, __obj.planField(\"your_role\"));");
    gold.append("\n        __gyour_role = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      __CHECK = __item.___your_turn.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__gyour_turn != __CHECK)  {");
    gold.append("\n        Boolean __local_your_turn = __item.__COMPUTE_your_turn(__writer.who, __VIEWER);");
    gold.append("\n        __dyour_turn.show(__local_your_turn, __obj.planField(\"your_turn\"));");
    gold.append("\n        __gyour_turn = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      __CHECK = __item.___your_wins.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__gyour_wins != __CHECK)  {");
    gold.append("\n        Integer __local_your_wins = __item.__COMPUTE_your_wins(__writer.who, __VIEWER);");
    gold.append("\n        __dyour_wins.show(__local_your_wins, __obj.planField(\"your_wins\"));");
    gold.append("\n        __gyour_wins = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dcurrent.clear();");
    gold.append("\n      __dwins_X.clear();");
    gold.append("\n      __dwins_O.clear();");
    gold.append("\n      __dstalemates.clear();");
    gold.append("\n      __dboard.clear();");
    gold.append("\n      __dyour_role.clear();");
    gold.append("\n      __dyour_turn.clear();");
    gold.append("\n      __dyour_wins.clear();");
    gold.append("\n      __code_cost += 8;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    TicTacToe_12 __self = this;");
    gold.append("\n    DeltaTicTacToe_12 __state = new DeltaTicTacToe_12();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_SquareState = new int[] {0, 1, 2};");
    gold.append("\n  private static final int __EnumCycleNext_SquareState(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 2:");
    gold.append("\n        return 0;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_SquareState(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 0:");
    gold.append("\n        return 2;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_SquareState(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 0:");
    gold.append("\n      case 1:");
    gold.append("\n      case 2:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 0;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Square = new String[] {};");
    gold.append("\n  private class RTxSquare extends RxRecordBase<RTxSquare> {");
    gold.append("\n    private final RTxSquare __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxInt32 x;");
    gold.append("\n    private final RxInt32 y;");
    gold.append("\n    private final RxEnumInt32 state;");
    gold.append("\n    private RTxSquare(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      x = new RxInt32(this, 0);");
    gold.append("\n      y = new RxInt32(this, 0);");
    gold.append("\n      state = new RxEnumInt32(this, 0, (__v) -> __EnumFix_SquareState(__v));");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += x.__memory();");
    gold.append("\n      __sum += y.__memory();");
    gold.append("\n      __sum += state.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Square;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"x\":");
    gold.append("\n          return x;");
    gold.append("\n        case \"y\":");
    gold.append("\n          return y;");
    gold.append("\n        case \"state\":");
    gold.append("\n          return state;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"state\":");
    gold.append("\n              state.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"state\":");
    gold.append("\n              state.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      x.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      y.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"state\");");
    gold.append("\n      state.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n        y.__commit(\"y\", __forward, __reverse);");
    gold.append("\n        state.__commit(\"state\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        x.__revert();");
    gold.append("\n        y.__revert();");
    gold.append("\n        state.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxSquare __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Square\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxSquare implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private DInt32 __dy;");
    gold.append("\n    private DInt32 __dstate;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxSquare() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __dy = new DInt32();");
    gold.append("\n      __dstate = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      __sum += __dy.__memory();");
    gold.append("\n      __sum += __dstate.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxSquare __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      __dx.show(__item.x.get(), __obj.planField(\"x\"));");
    gold.append("\n      __dy.show(__item.y.get(), __obj.planField(\"y\"));");
    gold.append("\n      __dstate.show(__item.state.get(), __obj.planField(\"state\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __dy.clear();");
    gold.append("\n      __dstate.clear();");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxPlay extends NtMessageBase {");
    gold.append("\n    private final RTxPlay __this;");
    gold.append("\n    private int id = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"id\");");
    gold.append("\n      __hash.hashInteger(this.id);");
    gold.append("\n      __hash.hashString(\"Play\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_Play = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Play;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxPlay(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"id\":");
    gold.append("\n            this.id = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      __writer.writeInteger(id);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxPlay() { __this = this; }");
    gold.append("\n    private RTxPlay(int id) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.id = id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPlay implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPlay() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPlay __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id, __obj.planField(\"id\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_1 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_1 __this;");
    gold.append("\n    private int state = 0;");
    gold.append("\n    private int x = 0;");
    gold.append("\n    private int y = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"state\");");
    gold.append("\n      __hash.hashInteger(this.state);");
    gold.append("\n      __hash.hashString(\"x\");");
    gold.append("\n      __hash.hashInteger(this.x);");
    gold.append("\n      __hash.hashString(\"y\");");
    gold.append("\n      __hash.hashInteger(this.y);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_1 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_1;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_1(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"state\":");
    gold.append("\n            this.state = __EnumFix_SquareState(__reader.readInteger());");
    gold.append("\n            break;");
    gold.append("\n          case \"x\":");
    gold.append("\n            this.x = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          case \"y\":");
    gold.append("\n            this.y = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"state\");");
    gold.append("\n      __writer.writeInteger(state);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      __writer.writeInteger(x);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      __writer.writeInteger(y);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_1() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_1(int state, int x, int y) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.state = state;");
    gold.append("\n      this.x = x;");
    gold.append("\n      this.y = y;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_1 implements DeltaNode {");
    gold.append("\n    private DInt32 __dstate;");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private DInt32 __dy;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_1() {");
    gold.append("\n      __dstate = new DInt32();");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __dy = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dstate.__memory();");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      __sum += __dy.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dstate.show(__item.state, __obj.planField(\"state\"));");
    gold.append("\n      __dx.show(__item.x, __obj.planField(\"x\"));");
    gold.append("\n      __dy.show(__item.y, __obj.planField(\"y\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dstate.clear();");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __dy.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private void __FUNC_0_current_wins() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(0);");
    gold.append("\n    if ((playerX.get()).equals(current.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(1);");
    gold.append("\n      wins_X.bumpUpPost();");
    gold.append("\n    } else {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(2);");
    gold.append("\n      wins_O.bumpUpPost();");
    gold.append("\n    }");
    gold.append("\n    __track(3);");
    gold.append("\n    __transitionStateMachine(\"end\", 0);");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  private final Sink<RTxPlay> __queue_play = new Sink<>(\"play\");");
    gold.append("\n  private final NtChannel<RTxPlay> play = new NtChannel<>(__futures, __queue_play);");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"play\":");
    gold.append("\n        __queue_play.enqueue(__task, (RTxPlay) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"play\":");
    gold.append("\n        return new RTxPlay(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n    __queue_play.clear();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private void __step_initiate() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(4);");
    gold.append("\n    current.set(playerX.get());");
    gold.append("\n    __track(5);");
    gold.append("\n    __transitionStateMachine(\"turn\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_turn() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(6);");
    gold.append("\n    NtList<RTxSquare> open = _squares.iterate(false).where(true, new __CLOSURE_WhereClause0());");
    gold.append("\n    __track(7);");
    gold.append("\n    if (((int) open.get().size()) == ((int) 0)) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(8);");
    gold.append("\n      stalemates.bumpUpPost();");
    gold.append("\n      __track(9);");
    gold.append("\n      __transitionStateMachine(\"end\", 0);");
    gold.append("\n      __track(10);");
    gold.append("\n      return;");
    gold.append("\n    }");
    gold.append("\n    __track(11);");
    gold.append("\n    NtMaybe<RTxPlay> _AutoConditionpick_7;");
    gold.append("\n    if ((_AutoConditionpick_7 = play.decide(current.get(), Utility.convertMultiple(open.get(), (__n) -> new RTxPlay[__n], (__obj) -> new RTxPlay(__obj.id.get()))).await()).has()) {");
    gold.append("\n      RTxPlay pick = _AutoConditionpick_7.get();");
    gold.append("\n      __code_cost += 8;");
    gold.append("\n      __track(12);");
    gold.append("\n      final int placed = ((playerX.get()).equals(current.get()) ? 1 : 2);");
    gold.append("\n      __track(13);");
    gold.append("\n      ;");
    gold.append("\n");
    gold.append("\n      __track(14);");
    gold.append("\n      NtList<RxEnumInt32> _auto_8 = (_squares.iterate(false).where(true, new __CLOSURE_WhereClause1(pick))).transform((item) -> item.state);");
    gold.append("\n      for (RxEnumInt32 _auto_9 : _auto_8) {");
    gold.append("\n        _auto_9.set(placed);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n      __track(15);");
    gold.append("\n      {");
    gold.append("\n        int k = 0;");
    gold.append("\n        for (;__goodwill(88, 20, 88, 25) && (k < 3);k++) {");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          __track(16);");
    gold.append("\n          if (((int) (_squares.iterate(false).where(true, new __CLOSURE_WhereClause2(k, placed))).size()) == ((int) 3)) {");
    gold.append("\n            __code_cost += 3;");
    gold.append("\n            __track(17);");
    gold.append("\n            __FUNC_0_current_wins();");
    gold.append("\n            __track(18);");
    gold.append("\n            return;");
    gold.append("\n          }");
    gold.append("\n          __track(19);");
    gold.append("\n          if (((int) (_squares.iterate(false).where(true, new __CLOSURE_WhereClause3(k, placed))).size()) == ((int) 3)) {");
    gold.append("\n            __code_cost += 3;");
    gold.append("\n            __track(20);");
    gold.append("\n            __FUNC_0_current_wins();");
    gold.append("\n            __track(21);");
    gold.append("\n            return;");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      __track(22);");
    gold.append("\n      if (((int) (_squares.iterate(false).where(true, new __CLOSURE_WhereClause4(placed))).size()) == ((int) 3) || ((int) (_squares.iterate(false).where(true, new __CLOSURE_WhereClause5(placed))).size()) == ((int) 3)) {");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(23);");
    gold.append("\n        __FUNC_0_current_wins();");
    gold.append("\n        __track(24);");
    gold.append("\n        return;");
    gold.append("\n      }");
    gold.append("\n      __track(25);");
    gold.append("\n      current.set(((playerX.get()).equals(current.get()) ? playerO.get() : playerX.get()));");
    gold.append("\n      __track(26);");
    gold.append("\n      __transitionStateMachine(\"turn\", 0);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private void __step_end() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(27);");
    gold.append("\n    NtList<RxEnumInt32> _auto_10 = (_squares.iterate(true)).transform((item) -> item.state);");
    gold.append("\n    for (RxEnumInt32 _auto_11 : _auto_10) {");
    gold.append("\n      _auto_11.set(0);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(28);");
    gold.append("\n    __transitionStateMachine(\"turn\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"initiate\":");
    gold.append("\n        __step_initiate();");
    gold.append("\n        return;");
    gold.append("\n      case \"turn\":");
    gold.append("\n        __step_turn();");
    gold.append("\n        return;");
    gold.append("\n      case \"end\":");
    gold.append("\n        __step_end();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(29);");
    gold.append("\n    if ((playerX.get()).equals(NtPrincipal.NO_ONE)) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      __track(30);");
    gold.append("\n      playerX.set(__who);");
    gold.append("\n      __track(31);");
    gold.append("\n      if (!((playerO.get()).equals(NtPrincipal.NO_ONE))) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(32);");
    gold.append("\n        __transitionStateMachine(\"initiate\", 0);");
    gold.append("\n      }");
    gold.append("\n    } else if ((playerO.get()).equals(NtPrincipal.NO_ONE)) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      __track(33);");
    gold.append("\n      playerO.set(__who);");
    gold.append("\n      __track(34);");
    gold.append("\n      if (!((playerX.get()).equals(NtPrincipal.NO_ONE))) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(35);");
    gold.append("\n        __transitionStateMachine(\"initiate\", 0);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(36);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanInvent__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(37);");
    gold.append("\n    {");
    gold.append("\n      int y = 0;");
    gold.append("\n      for (;__goodwill(30, 18, 30, 23) && (y < 3);y++) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(38);");
    gold.append("\n        {");
    gold.append("\n          int x = 0;");
    gold.append("\n          for (;__goodwill(31, 20, 31, 25) && (x < 3);x++) {");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(39);");
    gold.append("\n            {");
    gold.append("\n              RxTable<RTxSquare> _AutoRef12 = _squares;");
    gold.append("\n              RTx_AnonObjConvert_1 _AutoExpr14 = new RTx_AnonObjConvert_1(0, x, y);");
    gold.append("\n              RTxSquare _CreateRef13 = _AutoRef12.make();");
    gold.append("\n              __code_cost += 3;");
    gold.append("\n              _CreateRef13.state.set(_AutoExpr14.state);");
    gold.append("\n              _CreateRef13.x.set(_AutoExpr14.x);");
    gold.append("\n              _CreateRef13.y.set(_AutoExpr14.y);");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(40);");
    gold.append("\n    wins_X.set(0);");
    gold.append("\n    __track(41);");
    gold.append("\n    wins_O.set(0);");
    gold.append("\n    __track(42);");
    gold.append("\n    stalemates.set(0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxSquare> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int state = __obj.state.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) state) == ((int) 0);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause1 implements WhereClause<RTxSquare> {");
    gold.append("\n    private RTxPlay pick;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return pick.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause1(RTxPlay pick) {");
    gold.append("\n      this.pick = pick;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) id) == ((int) pick.id);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause2 implements WhereClause<RTxSquare> {");
    gold.append("\n    private int k;");
    gold.append("\n    private int placed;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause2(int k, int placed) {");
    gold.append("\n      this.k = k;");
    gold.append("\n      this.placed = placed;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int x = __obj.x.get();");
    gold.append("\n      int state = __obj.state.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) x) == ((int) k) && ((int) state) == ((int) placed);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause3 implements WhereClause<RTxSquare> {");
    gold.append("\n    private int k;");
    gold.append("\n    private int placed;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause3(int k, int placed) {");
    gold.append("\n      this.k = k;");
    gold.append("\n      this.placed = placed;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int y = __obj.y.get();");
    gold.append("\n      int state = __obj.state.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) y) == ((int) k) && ((int) state) == ((int) placed);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause4 implements WhereClause<RTxSquare> {");
    gold.append("\n    private int placed;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause4(int placed) {");
    gold.append("\n      this.placed = placed;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int y = __obj.y.get();");
    gold.append("\n      int x = __obj.x.get();");
    gold.append("\n      int state = __obj.state.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) y) == ((int) x) && ((int) state) == ((int) placed);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause5 implements WhereClause<RTxSquare> {");
    gold.append("\n    private int placed;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause5(int placed) {");
    gold.append("\n      this.placed = placed;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int y = __obj.y.get();");
    gold.append("\n      int x = __obj.x.get();");
    gold.append("\n      int state = __obj.state.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return ((int) y) == ((int) 2 - x) && ((int) state) == ((int) placed);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"playerX\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"playerO\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"current\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"wins_X\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"wins_O\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"stalemates\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"_squares\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Square\"},\"privacy\":\"private\"},\"board\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Square\"}},\"privacy\":\"public\"},\"your_role\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"bubble\"},\"your_turn\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"bubble\"},\"your_wins\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"bubble\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"SquareState\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"SquareState\",\"options\":{\"values\":{\"Open\":0,\"X\":1,\"O\":2},\"names\":{\"0\":\"Open\",\"1\":\"X\",\"2\":\"O\"},\"default\":\"Open\"}},\"Square\":{\"nature\":\"reactive_record\",\"name\":\"Square\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"y\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"state\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"enum\",\"enum\":\"SquareState\",\"options\":{\"values\":{\"Open\":0,\"X\":1,\"O\":2},\"names\":{\"0\":\"Open\",\"1\":\"X\",\"2\":\"O\"},\"default\":\"Open\"}},\"privacy\":\"public\"}}},\"Play\":{\"nature\":\"native_message\",\"name\":\"Play\",\"anonymous\":false,\"fields\":{\"id\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"_AnonObjConvert_1\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_1\",\"anonymous\":true,\"fields\":{\"state\":{\"type\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"SquareState\",\"options\":{\"values\":{\"Open\":0,\"X\":1,\"O\":2},\"names\":{\"0\":\"Open\",\"1\":\"X\",\"2\":\"O\"},\"default\":\"Open\"}},\"privacy\":\"private\"},\"x\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"y\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"}}}},\"channels\":{\"play\":\"Play\"},\"constructors\":[],\"labels\":[\"initiate\",\"turn\",\"end\"]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__auto_table_row_id\":9,\"_squares\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0}},\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:56");
    gold.append("\nMEMORY:3166");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"current\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"wins_X\":0,\"wins_O\":0,\"stalemates\":0,\"board\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0},\"@o\":[1,2,3,4,5,6,7,8,9]},\"your_role\":\"X\",\"your_turn\":true,\"your_wins\":0},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"current\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"wins_X\":0,\"wins_O\":0,\"stalemates\":0,\"board\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0},\"@o\":[1,2,3,4,5,6,7,8,9]},\"your_role\":\"Observer\",\"your_turn\":false,\"your_wins\":0},\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"playerX\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"your_role\":\"O\"},\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"your_role\":\"X\"},\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:8796");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"playerX\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playerO\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"wins_X\":0,\"wins_O\":0,\"stalemates\":0,\"_squares\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":9,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"playerX\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playerO\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"wins_X\":0,\"wins_O\":0,\"stalemates\":0,\"_squares\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":9,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"playerX\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playerO\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"wins_X\":0,\"wins_O\":0,\"stalemates\":0,\"_squares\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":9,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_chat_13 = null;
  private String get_chat_13() {
    if (cached_chat_13 != null) {
      return cached_chat_13;
    }
    cached_chat_13 = generateTestOutput(true, "chat_13", "./test_code/Demo_chat_success.a");
    return cached_chat_13;
  }

  @Test
  public void testchatEmission() {
    assertEmissionGood(get_chat_13());
  }

  @Test
  public void testchatSuccess() {
    assertLivePass(get_chat_13());
  }

  @Test
  public void testchatGoodWillHappy() {
    assertGoodWillHappy(get_chat_13());
  }

  @Test
  public void testchatExceptionFree() {
    assertExceptionFree(get_chat_13());
  }

  @Test
  public void testchatTODOFree() {
    assertTODOFree(get_chat_13());
  }

  @Test
  public void stable_chat_13() {
    String live = get_chat_13();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_chat_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class chat_13 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxLine> _chat;");
    gold.append("\n  private final RxLazy<NtList<RTxLine>> chat;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += _chat.__memory();");
    gold.append("\n    __sum += chat.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public chat_13(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    _chat = new RxTable<>(__self, this, \"_chat\", (RxParent __parent) -> new RTxLine(__parent).__link(), 0);");
    gold.append("\n    chat = new RxLazy<NtList<RTxLine>>(this, () -> (_chat.iterate(true)));");
    gold.append("\n    _chat.__subscribe(chat);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_chat\":");
    gold.append("\n            _chat.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_chat\":");
    gold.append("\n            _chat.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_chat\");");
    gold.append("\n    _chat.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    _chat.__commit(\"_chat\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    _chat.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class Deltachat_13 implements DeltaNode {");
    gold.append("\n    private int __gchat;");
    gold.append("\n    private DRecordList<DeltaRTxLine> __dchat;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private Deltachat_13() {");
    gold.append("\n      __gchat = -1;");
    gold.append("\n      __dchat = new DRecordList<DeltaRTxLine>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dchat.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(chat_13 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gchat != __item.chat.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list1 = __obj.planField(\"chat\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxLine> __deltaList2 = __dchat;");
    gold.append("\n          DRecordList<DeltaRTxLine>.Walk __deltaListWalker3 = __deltaList2.begin();");
    gold.append("\n          for (RTxLine __listElement4 : __item.chat.get()) {");
    gold.append("\n            DeltaRTxLine __deltaElement5 = __deltaList2.getPrior(__listElement4.__id(), () -> new DeltaRTxLine());");
    gold.append("\n            __deltaElement5.show(__listElement4, __list1.planField(__listElement4.__id()));");
    gold.append("\n            __deltaListWalker3.next(__listElement4.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker3.end(__list1);");
    gold.append("\n          __list1.end();");
    gold.append("\n        }");
    gold.append("\n        __gchat = __item.chat.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dchat.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    chat_13 __self = this;");
    gold.append("\n    Deltachat_13 __state = new Deltachat_13();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Line = new String[] {};");
    gold.append("\n  private class RTxLine extends RxRecordBase<RTxLine> {");
    gold.append("\n    private final RTxLine __this;");
    gold.append("\n    private final RxPrincipal who;");
    gold.append("\n    private final RxString what;");
    gold.append("\n    private final RxInt64 when;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxLine(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      who = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      what = new RxString(this, \"\");");
    gold.append("\n      when = new RxInt64(this, 0L);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += who.__memory();");
    gold.append("\n      __sum += what.__memory();");
    gold.append("\n      __sum += when.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Line;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"who\":");
    gold.append("\n          return who;");
    gold.append("\n        case \"what\":");
    gold.append("\n          return what;");
    gold.append("\n        case \"when\":");
    gold.append("\n          return when;");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"what\":");
    gold.append("\n              what.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"what\":");
    gold.append("\n              what.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      who.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      what.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      when.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        who.__commit(\"who\", __forward, __reverse);");
    gold.append("\n        what.__commit(\"what\", __forward, __reverse);");
    gold.append("\n        when.__commit(\"when\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        who.__revert();");
    gold.append("\n        what.__revert();");
    gold.append("\n        when.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxLine __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Line\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxLine implements DeltaNode {");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxLine() {");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxLine __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwho.show(__item.who.get(), __obj.planField(\"who\"));");
    gold.append("\n      __dwhat.show(__item.what.get(), __obj.planField(\"what\"));");
    gold.append("\n      __dwhen.show(__item.when.get(), __obj.planField(\"when\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxSay extends NtMessageBase {");
    gold.append("\n    private final RTxSay __this;");
    gold.append("\n    private String what = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"what\");");
    gold.append("\n      __hash.hashString(this.what);");
    gold.append("\n      __hash.hashString(\"Say\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_Say = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Say;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxSay(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"what\":");
    gold.append("\n            this.what = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      __writer.writeString(what);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxSay() { __this = this; }");
    gold.append("\n    private RTxSay(String what) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.what = what;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxSay implements DeltaNode {");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxSay() {");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxSay __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwhat.show(__item.what, __obj.planField(\"what\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_0 __this;");
    gold.append("\n    private String what = \"\";");
    gold.append("\n    private long when = 0L;");
    gold.append("\n    private NtPrincipal who = NtPrincipal.NO_ONE;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"what\");");
    gold.append("\n      __hash.hashString(this.what);");
    gold.append("\n      __hash.hashString(\"when\");");
    gold.append("\n      __hash.hashLong(this.when);");
    gold.append("\n      __hash.hashString(\"who\");");
    gold.append("\n      __hash.hashNtPrincipal(this.who);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_0 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_0;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"what\":");
    gold.append("\n            this.what = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          case \"when\":");
    gold.append("\n            this.when = __reader.readLong();");
    gold.append("\n            break;");
    gold.append("\n          case \"who\":");
    gold.append("\n            this.who = __reader.readNtPrincipal();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      __writer.writeString(what);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      __writer.writeLong(when);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      __writer.writeNtPrincipal(who);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_0(String what, long when, NtPrincipal who) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.what = what;");
    gold.append("\n      this.when = when;");
    gold.append("\n      this.who = who;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwhat.show(__item.what, __obj.planField(\"what\"));");
    gold.append("\n      __dwhen.show(__item.when, __obj.planField(\"when\"));");
    gold.append("\n      __dwho.show(__item.who, __obj.planField(\"who\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_say(CoreRequestContext __context, NtPrincipal __who, RTxSay what) throws AbortMessageException {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxLine> _AutoRef6 = _chat;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr8 = new RTx_AnonObjConvert_0(what.what, __timeNow(), __who);");
    gold.append("\n      RTxLine _CreateRef7 = _AutoRef6.make();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      _CreateRef7.what.set(_AutoExpr8.what);");
    gold.append("\n      _CreateRef7.when.set(_AutoExpr8.when);");
    gold.append("\n      _CreateRef7.who.set(_AutoExpr8.who);");
    gold.append("\n    }");
    gold.append("\n    __track(1);");
    gold.append("\n    (_chat.iterate(false).orderBy(false, __ORDER_Line_when_d).skip(true, 50)).map((__item) -> { __item.__delete(); });");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        handleChannelMessage_say(__context, __context.who, (RTxSay) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_say(__task.context(__getKey()), __task.who, (RTxSay)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        return new RTxSay(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication(String __space, String __key) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(2);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanInvent__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    __map.put(\"maximum_history\", 250);");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxLine> __ORDER_Line_when_d = new Comparator<RTxLine>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxLine __a, RTxLine __b) {");
    gold.append("\n      return -__a.when.compareTo(__b.when);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"_chat\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Line\"},\"privacy\":\"private\"},\"chat\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"Line\"}},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"Line\":{\"nature\":\"reactive_record\",\"name\":\"Line\",\"fields\":{\"who\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"what\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"when\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"Say\":{\"nature\":\"native_message\",\"name\":\"Say\",\"anonymous\":false,\"fields\":{\"what\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"what\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"private\"},\"when\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"private\"},\"who\":{\"type\":{\"nature\":\"native_value\",\"type\":\"secure<principal>\"},\"privacy\":\"private\"}}}},\"channels\":{\"say\":\"Say\"},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:538");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:656");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
}
