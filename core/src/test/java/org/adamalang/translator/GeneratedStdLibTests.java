/*
 * This file is subject to the terms and conditions outlined in the
 * file 'LICENSE' (it's dual licensed) located in the root directory
 * near the README.md which you should also read. For more information
 * about the project which owns this file, see https://www.adama-platform.com/ .
 *
 * (c) 2021 - 2023 by Adama Platform Initiative, LLC
 */
package org.adamalang.translator;

import org.junit.Test;

public class GeneratedStdLibTests extends GeneratedBase {
  private String cached_Lists_1 = null;
  private String get_Lists_1() {
    if (cached_Lists_1 != null) {
      return cached_Lists_1;
    }
    cached_Lists_1 = generateTestOutput(true, "Lists_1", "./test_code/StdLib_Lists_success.a");
    return cached_Lists_1;
  }

  @Test
  public void testListsEmission() {
    assertEmissionGood(get_Lists_1());
  }

  @Test
  public void testListsSuccess() {
    assertLivePass(get_Lists_1());
  }

  @Test
  public void testListsGoodWillHappy() {
    assertGoodWillHappy(get_Lists_1());
  }

  @Test
  public void testListsExceptionFree() {
    assertExceptionFree(get_Lists_1());
  }

  @Test
  public void testListsTODOFree() {
    assertTODOFree(get_Lists_1());
  }

  @Test
  public void stable_Lists_1() {
    String live = get_Lists_1();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:StdLib_Lists_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class Lists_1 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxB> _b;");
    gold.append("\n  private final RxLazy<NtList<Integer>> x;");
    gold.append("\n  private final RxLazy<NtList<Integer>> r_x;");
    gold.append("\n  private final RxLazy<NtList<Integer>> x_skip_3;");
    gold.append("\n  private final RxLazy<NtList<Integer>> x_skip_1_r;");
    gold.append("\n  private final RxLazy<NtList<Integer>> x_d;");
    gold.append("\n  private final RxLazy<NtList<Integer>> x_mirror;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += _b.__memory();");
    gold.append("\n    __sum += x.__memory();");
    gold.append("\n    __sum += r_x.__memory();");
    gold.append("\n    __sum += x_skip_3.__memory();");
    gold.append("\n    __sum += x_skip_1_r.__memory();");
    gold.append("\n    __sum += x_d.__memory();");
    gold.append("\n    __sum += x_mirror.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Lists_1(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    _b = new RxTable<>(__self, this, \"_b\", (RxParent __parent) -> new RTxB(__parent).__link(), 0);");
    gold.append("\n    x = new RxLazy<NtList<Integer>>(this, () -> (NtList<Integer>)(LibLists.flatten((_b.iterate(true)).transform((item) -> item.a.get()))));");
    gold.append("\n    r_x = new RxLazy<NtList<Integer>>(this, () -> (NtList<Integer>)(LibLists.reverse(x.get())));");
    gold.append("\n    x_skip_3 = new RxLazy<NtList<Integer>>(this, () -> (NtList<Integer>)(LibLists.skip(x.get(), 3)));");
    gold.append("\n    x_skip_1_r = new RxLazy<NtList<Integer>>(this, () -> (NtList<Integer>)(LibLists.reverse(LibLists.skip(LibLists.reverse(LibLists.skip(x.get(), 1)), 1))));");
    gold.append("\n    x_d = new RxLazy<NtList<Integer>>(this, () -> (NtList<Integer>)(LibLists.drop(x.get(), 2)));");
    gold.append("\n    x_mirror = new RxLazy<NtList<Integer>>(this, () -> (NtList<Integer>)(LibLists.drop(LibLists.skip(x.get(), 1), 1)));");
    gold.append("\n    _b.__subscribe(x);");
    gold.append("\n    x.__subscribe(r_x);");
    gold.append("\n    x.__subscribe(x_skip_3);");
    gold.append("\n    x.__subscribe(x_skip_1_r);");
    gold.append("\n    x.__subscribe(x_d);");
    gold.append("\n    x.__subscribe(x_mirror);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_b\":");
    gold.append("\n            _b.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_b\":");
    gold.append("\n            _b.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_b\");");
    gold.append("\n    _b.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    _b.__commit(\"_b\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    _b.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaLists_1 implements DeltaNode {");
    gold.append("\n    private int __gx;");
    gold.append("\n    private DList<DInt32> __dx;");
    gold.append("\n    private int __gr_x;");
    gold.append("\n    private DList<DInt32> __dr_x;");
    gold.append("\n    private int __gx_skip_3;");
    gold.append("\n    private DList<DInt32> __dx_skip_3;");
    gold.append("\n    private int __gx_skip_1_r;");
    gold.append("\n    private DList<DInt32> __dx_skip_1_r;");
    gold.append("\n    private int __gx_d;");
    gold.append("\n    private DList<DInt32> __dx_d;");
    gold.append("\n    private int __gx_mirror;");
    gold.append("\n    private DList<DInt32> __dx_mirror;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaLists_1() {");
    gold.append("\n      __gx = -1;");
    gold.append("\n      __dx = new DList<DInt32>();");
    gold.append("\n      __gr_x = -1;");
    gold.append("\n      __dr_x = new DList<DInt32>();");
    gold.append("\n      __gx_skip_3 = -1;");
    gold.append("\n      __dx_skip_3 = new DList<DInt32>();");
    gold.append("\n      __gx_skip_1_r = -1;");
    gold.append("\n      __dx_skip_1_r = new DList<DInt32>();");
    gold.append("\n      __gx_d = -1;");
    gold.append("\n      __dx_d = new DList<DInt32>();");
    gold.append("\n      __gx_mirror = -1;");
    gold.append("\n      __dx_mirror = new DList<DInt32>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      __sum += __dr_x.__memory();");
    gold.append("\n      __sum += __dx_skip_3.__memory();");
    gold.append("\n      __sum += __dx_skip_1_r.__memory();");
    gold.append("\n      __sum += __dx_d.__memory();");
    gold.append("\n      __sum += __dx_mirror.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(Lists_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gx != __item.x.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          DList<DInt32> __deltaList17 = __dx;");
    gold.append("\n          PrivateLazyDeltaWriter __list16 = __obj.planField(\"x\").planObject();");
    gold.append("\n          int __index20 = 0;");
    gold.append("\n          for (Integer __listElement18 : __item.x.get()) {");
    gold.append("\n            DInt32 __deltaElement19 = __deltaList17.getPrior(__index20, () -> new DInt32());");
    gold.append("\n            __deltaElement19.show(__listElement18, __list16.planField(__index20));");
    gold.append("\n            __index20++;");
    gold.append("\n          }");
    gold.append("\n          __deltaList17.rectify(__index20, __list16);");
    gold.append("\n          __list16.end();");
    gold.append("\n        }");
    gold.append("\n        __gx = __item.x.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gr_x != __item.r_x.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          DList<DInt32> __deltaList22 = __dr_x;");
    gold.append("\n          PrivateLazyDeltaWriter __list21 = __obj.planField(\"r_x\").planObject();");
    gold.append("\n          int __index25 = 0;");
    gold.append("\n          for (Integer __listElement23 : __item.r_x.get()) {");
    gold.append("\n            DInt32 __deltaElement24 = __deltaList22.getPrior(__index25, () -> new DInt32());");
    gold.append("\n            __deltaElement24.show(__listElement23, __list21.planField(__index25));");
    gold.append("\n            __index25++;");
    gold.append("\n          }");
    gold.append("\n          __deltaList22.rectify(__index25, __list21);");
    gold.append("\n          __list21.end();");
    gold.append("\n        }");
    gold.append("\n        __gr_x = __item.r_x.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gx_skip_3 != __item.x_skip_3.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          DList<DInt32> __deltaList27 = __dx_skip_3;");
    gold.append("\n          PrivateLazyDeltaWriter __list26 = __obj.planField(\"x_skip_3\").planObject();");
    gold.append("\n          int __index30 = 0;");
    gold.append("\n          for (Integer __listElement28 : __item.x_skip_3.get()) {");
    gold.append("\n            DInt32 __deltaElement29 = __deltaList27.getPrior(__index30, () -> new DInt32());");
    gold.append("\n            __deltaElement29.show(__listElement28, __list26.planField(__index30));");
    gold.append("\n            __index30++;");
    gold.append("\n          }");
    gold.append("\n          __deltaList27.rectify(__index30, __list26);");
    gold.append("\n          __list26.end();");
    gold.append("\n        }");
    gold.append("\n        __gx_skip_3 = __item.x_skip_3.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gx_skip_1_r != __item.x_skip_1_r.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          DList<DInt32> __deltaList32 = __dx_skip_1_r;");
    gold.append("\n          PrivateLazyDeltaWriter __list31 = __obj.planField(\"x_skip_1_r\").planObject();");
    gold.append("\n          int __index35 = 0;");
    gold.append("\n          for (Integer __listElement33 : __item.x_skip_1_r.get()) {");
    gold.append("\n            DInt32 __deltaElement34 = __deltaList32.getPrior(__index35, () -> new DInt32());");
    gold.append("\n            __deltaElement34.show(__listElement33, __list31.planField(__index35));");
    gold.append("\n            __index35++;");
    gold.append("\n          }");
    gold.append("\n          __deltaList32.rectify(__index35, __list31);");
    gold.append("\n          __list31.end();");
    gold.append("\n        }");
    gold.append("\n        __gx_skip_1_r = __item.x_skip_1_r.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gx_d != __item.x_d.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          DList<DInt32> __deltaList37 = __dx_d;");
    gold.append("\n          PrivateLazyDeltaWriter __list36 = __obj.planField(\"x_d\").planObject();");
    gold.append("\n          int __index40 = 0;");
    gold.append("\n          for (Integer __listElement38 : __item.x_d.get()) {");
    gold.append("\n            DInt32 __deltaElement39 = __deltaList37.getPrior(__index40, () -> new DInt32());");
    gold.append("\n            __deltaElement39.show(__listElement38, __list36.planField(__index40));");
    gold.append("\n            __index40++;");
    gold.append("\n          }");
    gold.append("\n          __deltaList37.rectify(__index40, __list36);");
    gold.append("\n          __list36.end();");
    gold.append("\n        }");
    gold.append("\n        __gx_d = __item.x_d.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gx_mirror != __item.x_mirror.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          DList<DInt32> __deltaList42 = __dx_mirror;");
    gold.append("\n          PrivateLazyDeltaWriter __list41 = __obj.planField(\"x_mirror\").planObject();");
    gold.append("\n          int __index45 = 0;");
    gold.append("\n          for (Integer __listElement43 : __item.x_mirror.get()) {");
    gold.append("\n            DInt32 __deltaElement44 = __deltaList42.getPrior(__index45, () -> new DInt32());");
    gold.append("\n            __deltaElement44.show(__listElement43, __list41.planField(__index45));");
    gold.append("\n            __index45++;");
    gold.append("\n          }");
    gold.append("\n          __deltaList42.rectify(__index45, __list41);");
    gold.append("\n          __list41.end();");
    gold.append("\n        }");
    gold.append("\n        __gx_mirror = __item.x_mirror.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __dr_x.clear();");
    gold.append("\n      __dx_skip_3.clear();");
    gold.append("\n      __dx_skip_1_r.clear();");
    gold.append("\n      __dx_d.clear();");
    gold.append("\n      __dx_mirror.clear();");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    Lists_1 __self = this;");
    gold.append("\n    DeltaLists_1 __state = new DeltaLists_1();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_A = new String[] {};");
    gold.append("\n  private class RTxA extends RxRecordBase<RTxA> {");
    gold.append("\n    private final RTxA __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxInt32 x;");
    gold.append("\n    private RTxA(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      x = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += x.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_A;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"x\":");
    gold.append("\n          return x;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      x.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        x.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxA __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"A\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxA implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxA() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxA __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_B = new String[] {};");
    gold.append("\n  private class RTxB extends RxRecordBase<RTxB> {");
    gold.append("\n    private final RTxB __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxTable<RTxA> _a;");
    gold.append("\n    private final RxLazy<NtList<Integer>> a;");
    gold.append("\n    private RTxB(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      _a = new RxTable<>(__self, this, \"_a\", (RxParent __parent) -> new RTxA(__parent).__link(), 0);");
    gold.append("\n      a = new RxLazy<NtList<Integer>>(this, () -> (NtList<Integer>)((_a.iterate(true)).transform((item) -> item.x.get())));");
    gold.append("\n      a.__subscribe(this);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += _a.__memory();");
    gold.append("\n      __sum += a.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_B;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"_a\":");
    gold.append("\n          return _a;");
    gold.append("\n        case \"a\":");
    gold.append("\n          return a;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"_a\":");
    gold.append("\n              _a.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"_a\":");
    gold.append("\n              _a.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"_a\");");
    gold.append("\n      _a.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        _a.__commit(\"_a\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        _a.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {");
    gold.append("\n      _a.__kill();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public RTxB __link() {");
    gold.append("\n      _a.__subscribe(a);");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"B\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxB implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxB() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxB __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AutoMaxRecord_7 extends NtMessageBase {");
    gold.append("\n    private final RTx_AutoMaxRecord_7 __this;");
    gold.append("\n    private int x = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"x\");");
    gold.append("\n      __hash.hashInteger(this.x);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AutoMaxRecord_7 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AutoMaxRecord_7;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AutoMaxRecord_7(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            this.x = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      __writer.writeInteger(x);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AutoMaxRecord_7() { __this = this; }");
    gold.append("\n    private RTx_AutoMaxRecord_7(int x) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.x = x;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AutoMaxRecord_7 implements DeltaNode {");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AutoMaxRecord_7() {");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AutoMaxRecord_7 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dx.show(__item.x, __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_0 __this;");
    gold.append("\n    private RTx_AutoMaxRecord_7[] _a = new RTx_AutoMaxRecord_7[]{};");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"_a\");");
    gold.append("\n      for (RTx_AutoMaxRecord_7 __item1 : this._a) {");
    gold.append("\n        __item1.__hash(__hash);");
    gold.append("\n      }");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_0 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_0;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_a\":");
    gold.append("\n            ArrayList<RTx_AutoMaxRecord_7> __localArray_0 = new ArrayList<>();");
    gold.append("\n            RTx_AutoMaxRecord_7 __localItem_1;");
    gold.append("\n            __reader.mustStartArray();");
    gold.append("\n            while (__reader.notEndOfArray()) {");
    gold.append("\n              __localItem_1 = new RTx_AutoMaxRecord_7(__reader);");
    gold.append("\n              __localArray_0.add(__localItem_1);");
    gold.append("\n            }");
    gold.append("\n            this._a = new RTx_AutoMaxRecord_7[__localArray_0.size()];");
    gold.append("\n            for (int __localIndex_2 = 0; __localIndex_2 < this._a.length; __localIndex_2++) {");
    gold.append("\n              this._a[__localIndex_2] = __localArray_0.get(__localIndex_2);");
    gold.append("\n            }");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"_a\");");
    gold.append("\n      __writer.beginArray();");
    gold.append("\n      for (RTx_AutoMaxRecord_7 __localItem_3 : _a) {");
    gold.append("\n        __localItem_3.__writeOut(__writer);");
    gold.append("\n");
    gold.append("\n      }__writer.endArray();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_0(RTx_AutoMaxRecord_7[] _a) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this._a = _a;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DList<DeltaRTx_AutoMaxRecord_7> __d_a;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __d_a = new DList<DeltaRTx_AutoMaxRecord_7>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __d_a.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      {");
    gold.append("\n        DList<DeltaRTx_AutoMaxRecord_7> __deltaList47 = __d_a;");
    gold.append("\n        PrivateLazyDeltaWriter __list46 = __obj.planField(\"_a\").planObject();");
    gold.append("\n        int __index50 = 0;");
    gold.append("\n        for (RTx_AutoMaxRecord_7 __listElement48 : __item._a) {");
    gold.append("\n          DeltaRTx_AutoMaxRecord_7 __deltaElement49 = __deltaList47.getPrior(__index50, () -> new DeltaRTx_AutoMaxRecord_7());");
    gold.append("\n          __deltaElement49.show(__listElement48, __list46.planField(__index50));");
    gold.append("\n          __index50++;");
    gold.append("\n        }");
    gold.append("\n        __deltaList47.rectify(__index50, __list46);");
    gold.append("\n        __list46.end();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __d_a.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication() {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __debug(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.writeObjectFieldIntro(\"tables\");");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_b\");");
    gold.append("\n    _b.debug(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxB> _AutoRef51 = _b;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr53 = new RTx_AnonObjConvert_0(new RTx_AutoMaxRecord_7[] {new RTx_AutoMaxRecord_7(1), new RTx_AutoMaxRecord_7(2), new RTx_AutoMaxRecord_7(3)});");
    gold.append("\n      RTxB _CreateRef52 = _AutoRef51.make();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      {");
    gold.append("\n        RxTable<RTxA> _AutoRef54 = _CreateRef52._a;");
    gold.append("\n        for (RTx_AutoMaxRecord_7 _AutoElement55 : _AutoExpr53._a) {");
    gold.append("\n          RTxA _CreateRef55 = _AutoRef54.make();");
    gold.append("\n          __code_cost += 1;");
    gold.append("\n          _CreateRef55.x.set(_AutoElement55.x);");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(1);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxB> _AutoRef56 = _b;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr58 = new RTx_AnonObjConvert_0(new RTx_AutoMaxRecord_7[] {new RTx_AutoMaxRecord_7(4), new RTx_AutoMaxRecord_7(5), new RTx_AutoMaxRecord_7(6)});");
    gold.append("\n      RTxB _CreateRef57 = _AutoRef56.make();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      {");
    gold.append("\n        RxTable<RTxA> _AutoRef59 = _CreateRef57._a;");
    gold.append("\n        for (RTx_AutoMaxRecord_7 _AutoElement60 : _AutoExpr58._a) {");
    gold.append("\n          RTxA _CreateRef60 = _AutoRef59.make();");
    gold.append("\n          __code_cost += 1;");
    gold.append("\n          _CreateRef60.x.set(_AutoElement60.x);");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--=[LivingDocumentFactory COMPILING]=---");
    gold.append("\n--=[LivingDocumentFactory MADE]=---");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"_b\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"B\"},\"privacy\":\"private\"},\"x\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"r_x\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"x_skip_3\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"x_skip_1_r\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"x_d\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"x_mirror\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"A\":{\"nature\":\"reactive_record\",\"name\":\"A\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"B\":{\"nature\":\"reactive_record\",\"name\":\"B\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"_a\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"A\"},\"privacy\":\"private\"},\"a\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"private\"}}},\"_AutoMaxRecord_7\":{\"nature\":\"native_message\",\"name\":\"_AutoMaxRecord_7\",\"anonymous\":true,\"fields\":{\"x\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"_a\":{\"type\":{\"nature\":\"native_array\",\"type\":{\"nature\":\"native_ref\",\"ref\":\"_AutoMaxRecord_7\"}},\"privacy\":\"public\"}}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__auto_table_row_id\":8,\"_b\":{\"1\":{\"id\":1,\"_a\":{\"2\":{\"id\":2,\"x\":1},\"3\":{\"id\":3,\"x\":2},\"4\":{\"id\":4,\"x\":3}}},\"5\":{\"id\":5,\"_a\":{\"6\":{\"id\":6,\"x\":4},\"7\":{\"id\":7,\"x\":5},\"8\":{\"id\":8,\"x\":6}}}},\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:11");
    gold.append("\nMEMORY:2196");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":{\"0\":1,\"1\":2,\"2\":3,\"3\":4,\"4\":5,\"5\":6,\"@s\":6},\"r_x\":{\"0\":6,\"1\":5,\"2\":4,\"3\":3,\"4\":2,\"5\":1,\"@s\":6},\"x_skip_3\":{\"0\":4,\"1\":5,\"2\":6,\"@s\":3},\"x_skip_1_r\":{\"0\":2,\"1\":3,\"2\":4,\"3\":5,\"@s\":4},\"x_d\":{\"0\":1,\"1\":2,\"2\":3,\"3\":4,\"@s\":4},\"x_mirror\":{\"0\":2,\"1\":3,\"2\":4,\"3\":5,\"@s\":4}},\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":{\"0\":1,\"1\":2,\"2\":3,\"3\":4,\"4\":5,\"5\":6,\"@s\":6},\"r_x\":{\"0\":6,\"1\":5,\"2\":4,\"3\":3,\"4\":2,\"5\":1,\"@s\":6},\"x_skip_3\":{\"0\":4,\"1\":5,\"2\":6,\"@s\":3},\"x_skip_1_r\":{\"0\":2,\"1\":3,\"2\":4,\"3\":5,\"@s\":4},\"x_d\":{\"0\":1,\"1\":2,\"2\":3,\"3\":4,\"@s\":4},\"x_mirror\":{\"0\":2,\"1\":3,\"2\":4,\"3\":5,\"@s\":4}},\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:6010");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"_b\":{\"1\":{\"id\":1,\"_a\":{\"2\":{\"id\":2,\"x\":1},\"3\":{\"id\":3,\"x\":2},\"4\":{\"id\":4,\"x\":3}}},\"5\":{\"id\":5,\"_a\":{\"6\":{\"id\":6,\"x\":4},\"7\":{\"id\":7,\"x\":5},\"8\":{\"id\":8,\"x\":6}}}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":8,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"_b\":{\"1\":{\"id\":1,\"_a\":{\"2\":{\"id\":2,\"x\":1},\"3\":{\"id\":3,\"x\":2},\"4\":{\"id\":4,\"x\":3}}},\"5\":{\"id\":5,\"_a\":{\"6\":{\"id\":6,\"x\":4},\"7\":{\"id\":7,\"x\":5},\"8\":{\"id\":8,\"x\":6}}}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":8,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"_b\":{\"1\":{\"id\":1,\"_a\":{\"2\":{\"id\":2,\"x\":1},\"3\":{\"id\":3,\"x\":2},\"4\":{\"id\":4,\"x\":3}}},\"5\":{\"id\":5,\"_a\":{\"6\":{\"id\":6,\"x\":4},\"7\":{\"id\":7,\"x\":5},\"8\":{\"id\":8,\"x\":6}}}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":8,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_NumericalExtensions_2 = null;
  private String get_NumericalExtensions_2() {
    if (cached_NumericalExtensions_2 != null) {
      return cached_NumericalExtensions_2;
    }
    cached_NumericalExtensions_2 = generateTestOutput(true, "NumericalExtensions_2", "./test_code/StdLib_NumericalExtensions_success.a");
    return cached_NumericalExtensions_2;
  }

  @Test
  public void testNumericalExtensionsEmission() {
    assertEmissionGood(get_NumericalExtensions_2());
  }

  @Test
  public void testNumericalExtensionsSuccess() {
    assertLivePass(get_NumericalExtensions_2());
  }

  @Test
  public void testNumericalExtensionsGoodWillHappy() {
    assertGoodWillHappy(get_NumericalExtensions_2());
  }

  @Test
  public void testNumericalExtensionsExceptionFree() {
    assertExceptionFree(get_NumericalExtensions_2());
  }

  @Test
  public void testNumericalExtensionsTODOFree() {
    assertTODOFree(get_NumericalExtensions_2());
  }

  @Test
  public void stable_NumericalExtensions_2() {
    String live = get_NumericalExtensions_2();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:StdLib_NumericalExtensions_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class NumericalExtensions_2 extends LivingDocument {");
    gold.append("\n  private final RxString x1;");
    gold.append("\n  private final RxString x2;");
    gold.append("\n  private final RxString x3;");
    gold.append("\n  private final RxString x4;");
    gold.append("\n  private final RxDouble z1;");
    gold.append("\n  private final RxInt64 z2;");
    gold.append("\n  private final RxTable<RTxR> rows;");
    gold.append("\n  private final RxInt32 d1;");
    gold.append("\n  private final RxDouble d2;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += x1.__memory();");
    gold.append("\n    __sum += x2.__memory();");
    gold.append("\n    __sum += x3.__memory();");
    gold.append("\n    __sum += x4.__memory();");
    gold.append("\n    __sum += z1.__memory();");
    gold.append("\n    __sum += z2.__memory();");
    gold.append("\n    __sum += rows.__memory();");
    gold.append("\n    __sum += d1.__memory();");
    gold.append("\n    __sum += d2.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public NumericalExtensions_2(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    x1 = new RxString(this, \"\");");
    gold.append("\n    x2 = new RxString(this, \"\");");
    gold.append("\n    x3 = new RxString(this, \"\");");
    gold.append("\n    x4 = new RxString(this, \"\");");
    gold.append("\n    z1 = new RxDouble(this, 0.0);");
    gold.append("\n    z2 = new RxInt64(this, 0L);");
    gold.append("\n    rows = new RxTable<>(__self, this, \"rows\", (RxParent __parent) -> new RTxR(__parent).__link(), 0);");
    gold.append("\n    d1 = new RxInt32(this, 0);");
    gold.append("\n    d2 = new RxDouble(this, 0.0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x1\":");
    gold.append("\n            x1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x2\":");
    gold.append("\n            x2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x3\":");
    gold.append("\n            x3.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x4\":");
    gold.append("\n            x4.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"z1\":");
    gold.append("\n            z1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"z2\":");
    gold.append("\n            z2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"rows\":");
    gold.append("\n            rows.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"d1\":");
    gold.append("\n            d1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"d2\":");
    gold.append("\n            d2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x1\":");
    gold.append("\n            x1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x2\":");
    gold.append("\n            x2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x3\":");
    gold.append("\n            x3.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x4\":");
    gold.append("\n            x4.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"z1\":");
    gold.append("\n            z1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"z2\":");
    gold.append("\n            z2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"rows\":");
    gold.append("\n            rows.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"d1\":");
    gold.append("\n            d1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"d2\":");
    gold.append("\n            d2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x1\");");
    gold.append("\n    x1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x2\");");
    gold.append("\n    x2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x3\");");
    gold.append("\n    x3.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x4\");");
    gold.append("\n    x4.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"z1\");");
    gold.append("\n    z1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"z2\");");
    gold.append("\n    z2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"rows\");");
    gold.append("\n    rows.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"d1\");");
    gold.append("\n    d1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"d2\");");
    gold.append("\n    d2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    x1.__commit(\"x1\", __forward, __reverse);");
    gold.append("\n    x2.__commit(\"x2\", __forward, __reverse);");
    gold.append("\n    x3.__commit(\"x3\", __forward, __reverse);");
    gold.append("\n    x4.__commit(\"x4\", __forward, __reverse);");
    gold.append("\n    z1.__commit(\"z1\", __forward, __reverse);");
    gold.append("\n    z2.__commit(\"z2\", __forward, __reverse);");
    gold.append("\n    rows.__commit(\"rows\", __forward, __reverse);");
    gold.append("\n    d1.__commit(\"d1\", __forward, __reverse);");
    gold.append("\n    d2.__commit(\"d2\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    x1.__revert();");
    gold.append("\n    x2.__revert();");
    gold.append("\n    x3.__revert();");
    gold.append("\n    x4.__revert();");
    gold.append("\n    z1.__revert();");
    gold.append("\n    z2.__revert();");
    gold.append("\n    rows.__revert();");
    gold.append("\n    d1.__revert();");
    gold.append("\n    d2.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaNumericalExtensions_2 implements DeltaNode {");
    gold.append("\n    private DString __dx1;");
    gold.append("\n    private DString __dx2;");
    gold.append("\n    private DString __dx3;");
    gold.append("\n    private DString __dx4;");
    gold.append("\n    private DDouble __dz1;");
    gold.append("\n    private DInt64 __dz2;");
    gold.append("\n    private DInt32 __dd1;");
    gold.append("\n    private DDouble __dd2;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaNumericalExtensions_2() {");
    gold.append("\n      __dx1 = new DString();");
    gold.append("\n      __dx2 = new DString();");
    gold.append("\n      __dx3 = new DString();");
    gold.append("\n      __dx4 = new DString();");
    gold.append("\n      __dz1 = new DDouble();");
    gold.append("\n      __dz2 = new DInt64();");
    gold.append("\n      __dd1 = new DInt32();");
    gold.append("\n      __dd2 = new DDouble();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx1.__memory();");
    gold.append("\n      __sum += __dx2.__memory();");
    gold.append("\n      __sum += __dx3.__memory();");
    gold.append("\n      __sum += __dx4.__memory();");
    gold.append("\n      __sum += __dz1.__memory();");
    gold.append("\n      __sum += __dz2.__memory();");
    gold.append("\n      __sum += __dd1.__memory();");
    gold.append("\n      __sum += __dd2.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(NumericalExtensions_2 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 8;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dx1.show(__item.x1.get(), __obj.planField(\"x1\"));");
    gold.append("\n      __dx2.show(__item.x2.get(), __obj.planField(\"x2\"));");
    gold.append("\n      __dx3.show(__item.x3.get(), __obj.planField(\"x3\"));");
    gold.append("\n      __dx4.show(__item.x4.get(), __obj.planField(\"x4\"));");
    gold.append("\n      __dz1.show(__item.z1.get(), __obj.planField(\"z1\"));");
    gold.append("\n      __dz2.show(__item.z2.get(), __obj.planField(\"z2\"));");
    gold.append("\n      __dd1.show(__item.d1.get(), __obj.planField(\"d1\"));");
    gold.append("\n      __dd2.show(__item.d2.get(), __obj.planField(\"d2\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx1.clear();");
    gold.append("\n      __dx2.clear();");
    gold.append("\n      __dx3.clear();");
    gold.append("\n      __dx4.clear();");
    gold.append("\n      __dz1.clear();");
    gold.append("\n      __dz2.clear();");
    gold.append("\n      __dd1.clear();");
    gold.append("\n      __dd2.clear();");
    gold.append("\n      __code_cost += 8;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    NumericalExtensions_2 __self = this;");
    gold.append("\n    DeltaNumericalExtensions_2 __state = new DeltaNumericalExtensions_2();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_R = new String[] {};");
    gold.append("\n  private class RTxR extends RxRecordBase<RTxR> {");
    gold.append("\n    private final RTxR __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxInt32 x;");
    gold.append("\n    private final RxDouble y;");
    gold.append("\n    private RTxR(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      x = new RxInt32(this, 0);");
    gold.append("\n      y = new RxDouble(this, 0.0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += x.__memory();");
    gold.append("\n      __sum += y.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_R;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"x\":");
    gold.append("\n          return x;");
    gold.append("\n        case \"y\":");
    gold.append("\n          return y;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      x.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      y.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n        y.__commit(\"y\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        x.__revert();");
    gold.append("\n        y.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxR __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"R\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxR implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxR() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxR __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_0 __this;");
    gold.append("\n    private int x = 0;");
    gold.append("\n    private double y = 0.0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"x\");");
    gold.append("\n      __hash.hashInteger(this.x);");
    gold.append("\n      __hash.hashString(\"y\");");
    gold.append("\n      __hash.hashDouble(this.y);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_0 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_0;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            this.x = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          case \"y\":");
    gold.append("\n            this.y = __reader.readDouble();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      __writer.writeInteger(x);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      __writer.writeDouble(y);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_0(int x, double y) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.x = x;");
    gold.append("\n      this.y = y;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private DDouble __dy;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __dy = new DDouble();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      __sum += __dy.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dx.show(__item.x, __obj.planField(\"x\"));");
    gold.append("\n      __dy.show(__item.y, __obj.planField(\"y\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __dy.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication() {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __debug(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.writeObjectFieldIntro(\"tables\");");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"rows\");");
    gold.append("\n    rows.debug(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 13;");
    gold.append("\n    __track(0);");
    gold.append("\n    x1.set(LibString.charOf((34)));");
    gold.append("\n    __track(1);");
    gold.append("\n    x2.set(LibString.charOf((32)));");
    gold.append("\n    __track(2);");
    gold.append("\n    x3.set(LibString.charOf(new NtMaybe<Integer>(65)).getOrDefaultTo(\"huh\"));");
    gold.append("\n    __track(3);");
    gold.append("\n    x4.set(LibString.charOf(new NtMaybe<Integer>()).getOrDefaultTo(\"nope\"));");
    gold.append("\n    __track(4);");
    gold.append("\n    z1.set(LibMath.sin((3.14)));");
    gold.append("\n    __track(5);");
    gold.append("\n    z2.set(-123);");
    gold.append("\n    __track(6);");
    gold.append("\n    z2.set(LibMath.abs(z2.get()));");
    gold.append("\n    __track(7);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef3 = rows;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr5 = new RTx_AnonObjConvert_0(1, 29.0);");
    gold.append("\n      RTxR _CreateRef4 = _AutoRef3.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef4.x.set(_AutoExpr5.x);");
    gold.append("\n      _CreateRef4.y.set(_AutoExpr5.y);");
    gold.append("\n    }");
    gold.append("\n    __track(8);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef6 = rows;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr8 = new RTx_AnonObjConvert_0(2, 6.0);");
    gold.append("\n      RTxR _CreateRef7 = _AutoRef6.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef7.x.set(_AutoExpr8.x);");
    gold.append("\n      _CreateRef7.y.set(_AutoExpr8.y);");
    gold.append("\n    }");
    gold.append("\n    __track(9);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef9 = rows;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr11 = new RTx_AnonObjConvert_0(3, 1.0);");
    gold.append("\n      RTxR _CreateRef10 = _AutoRef9.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef10.x.set(_AutoExpr11.x);");
    gold.append("\n      _CreateRef10.y.set(_AutoExpr11.y);");
    gold.append("\n    }");
    gold.append("\n    __track(10);");
    gold.append("\n    d1.set(LibStatistics.sumInts((rows.iterate(true)).transform((item) -> item.x.get())).getOrDefaultTo(-1000));");
    gold.append("\n    __track(11);");
    gold.append("\n    d2.set(LibStatistics.avgDoubles((rows.iterate(true)).transform((item) -> item.y.get())).getOrDefaultTo(-1000.0));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--=[LivingDocumentFactory COMPILING]=---");
    gold.append("\n--=[LivingDocumentFactory MADE]=---");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"x1\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x3\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x4\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"z1\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"z2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"rows\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"R\"},\"privacy\":\"private\"},\"d1\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"d2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"R\":{\"nature\":\"reactive_record\",\"name\":\"R\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"y\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"}}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"x\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"y\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"}}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__auto_table_row_id\":3,\"x1\":\"\\\"\",\"x2\":\" \",\"x3\":\"A\",\"x4\":\"nope\",\"z1\":0.0015926529164868282,\"z2\":\"123\",\"rows\":{\"1\":{\"id\":1,\"x\":1,\"y\":29.0},\"2\":{\"id\":2,\"x\":2,\"y\":6.0},\"3\":{\"id\":3,\"x\":3,\"y\":1.0}},\"d1\":6,\"d2\":12.0,\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:19");
    gold.append("\nMEMORY:1606");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x1\":\"\\\"\",\"x2\":\" \",\"x3\":\"A\",\"x4\":\"nope\",\"z1\":0.0015926529164868282,\"z2\":\"123\",\"d1\":6,\"d2\":12.0},\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x1\":\"\\\"\",\"x2\":\" \",\"x3\":\"A\",\"x4\":\"nope\",\"z1\":0.0015926529164868282,\"z2\":\"123\",\"d1\":6,\"d2\":12.0},\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:2392");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"x1\":\"\\\"\",\"x2\":\" \",\"x3\":\"A\",\"x4\":\"nope\",\"z1\":0.0015926529164868282,\"z2\":\"123\",\"rows\":{\"1\":{\"id\":1,\"x\":1,\"y\":29.0},\"2\":{\"id\":2,\"x\":2,\"y\":6.0},\"3\":{\"id\":3,\"x\":3,\"y\":1.0}},\"d1\":6,\"d2\":12.0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":3,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"x1\":\"\\\"\",\"x2\":\" \",\"x3\":\"A\",\"x4\":\"nope\",\"z1\":0.0015926529164868282,\"z2\":\"123\",\"rows\":{\"1\":{\"id\":1,\"x\":1,\"y\":29.0},\"2\":{\"id\":2,\"x\":2,\"y\":6.0},\"3\":{\"id\":3,\"x\":3,\"y\":1.0}},\"d1\":6,\"d2\":12.0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":3,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"x1\":\"\\\"\",\"x2\":\" \",\"x3\":\"A\",\"x4\":\"nope\",\"z1\":0.0015926529164868282,\"z2\":\"123\",\"rows\":{\"1\":{\"id\":1,\"x\":1,\"y\":29.0},\"2\":{\"id\":2,\"x\":2,\"y\":6.0},\"3\":{\"id\":3,\"x\":3,\"y\":1.0}},\"d1\":6,\"d2\":12.0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":3,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_Stats_3 = null;
  private String get_Stats_3() {
    if (cached_Stats_3 != null) {
      return cached_Stats_3;
    }
    cached_Stats_3 = generateTestOutput(true, "Stats_3", "./test_code/StdLib_Stats_success.a");
    return cached_Stats_3;
  }

  @Test
  public void testStatsEmission() {
    assertEmissionGood(get_Stats_3());
  }

  @Test
  public void testStatsSuccess() {
    assertLivePass(get_Stats_3());
  }

  @Test
  public void testStatsGoodWillHappy() {
    assertGoodWillHappy(get_Stats_3());
  }

  @Test
  public void testStatsExceptionFree() {
    assertExceptionFree(get_Stats_3());
  }

  @Test
  public void testStatsTODOFree() {
    assertTODOFree(get_Stats_3());
  }

  @Test
  public void stable_Stats_3() {
    String live = get_Stats_3();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:StdLib_Stats_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class Stats_3 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxR> rows;");
    gold.append("\n  private final RxDouble y1;");
    gold.append("\n  private final RxDouble y2;");
    gold.append("\n  private final RxDouble y3;");
    gold.append("\n  private final RxDouble y4;");
    gold.append("\n  private final RxDouble y5;");
    gold.append("\n  private final RxDouble y6;");
    gold.append("\n  private final RxDouble y7;");
    gold.append("\n  private final RxInt32 x1;");
    gold.append("\n  private final RxInt32 x2;");
    gold.append("\n  private final RxInt32 x3;");
    gold.append("\n  private final RxInt32 x4;");
    gold.append("\n  private final RxInt32 x5;");
    gold.append("\n  private final RxInt32 x6;");
    gold.append("\n  private final RxDouble x7;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += rows.__memory();");
    gold.append("\n    __sum += y1.__memory();");
    gold.append("\n    __sum += y2.__memory();");
    gold.append("\n    __sum += y3.__memory();");
    gold.append("\n    __sum += y4.__memory();");
    gold.append("\n    __sum += y5.__memory();");
    gold.append("\n    __sum += y6.__memory();");
    gold.append("\n    __sum += y7.__memory();");
    gold.append("\n    __sum += x1.__memory();");
    gold.append("\n    __sum += x2.__memory();");
    gold.append("\n    __sum += x3.__memory();");
    gold.append("\n    __sum += x4.__memory();");
    gold.append("\n    __sum += x5.__memory();");
    gold.append("\n    __sum += x6.__memory();");
    gold.append("\n    __sum += x7.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Stats_3(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    rows = new RxTable<>(__self, this, \"rows\", (RxParent __parent) -> new RTxR(__parent).__link(), 0);");
    gold.append("\n    y1 = new RxDouble(this, 0.0);");
    gold.append("\n    y2 = new RxDouble(this, 0.0);");
    gold.append("\n    y3 = new RxDouble(this, 0.0);");
    gold.append("\n    y4 = new RxDouble(this, 0.0);");
    gold.append("\n    y5 = new RxDouble(this, 0.0);");
    gold.append("\n    y6 = new RxDouble(this, 0.0);");
    gold.append("\n    y7 = new RxDouble(this, 0.0);");
    gold.append("\n    x1 = new RxInt32(this, 0);");
    gold.append("\n    x2 = new RxInt32(this, 0);");
    gold.append("\n    x3 = new RxInt32(this, 0);");
    gold.append("\n    x4 = new RxInt32(this, 0);");
    gold.append("\n    x5 = new RxInt32(this, 0);");
    gold.append("\n    x6 = new RxInt32(this, 0);");
    gold.append("\n    x7 = new RxDouble(this, 0.0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"rows\":");
    gold.append("\n            rows.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y1\":");
    gold.append("\n            y1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y2\":");
    gold.append("\n            y2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y3\":");
    gold.append("\n            y3.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y4\":");
    gold.append("\n            y4.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y5\":");
    gold.append("\n            y5.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y6\":");
    gold.append("\n            y6.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y7\":");
    gold.append("\n            y7.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x1\":");
    gold.append("\n            x1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x2\":");
    gold.append("\n            x2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x3\":");
    gold.append("\n            x3.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x4\":");
    gold.append("\n            x4.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x5\":");
    gold.append("\n            x5.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x6\":");
    gold.append("\n            x6.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x7\":");
    gold.append("\n            x7.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"rows\":");
    gold.append("\n            rows.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y1\":");
    gold.append("\n            y1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y2\":");
    gold.append("\n            y2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y3\":");
    gold.append("\n            y3.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y4\":");
    gold.append("\n            y4.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y5\":");
    gold.append("\n            y5.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y6\":");
    gold.append("\n            y6.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y7\":");
    gold.append("\n            y7.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x1\":");
    gold.append("\n            x1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x2\":");
    gold.append("\n            x2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x3\":");
    gold.append("\n            x3.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x4\":");
    gold.append("\n            x4.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x5\":");
    gold.append("\n            x5.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x6\":");
    gold.append("\n            x6.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x7\":");
    gold.append("\n            x7.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"rows\");");
    gold.append("\n    rows.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y1\");");
    gold.append("\n    y1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y2\");");
    gold.append("\n    y2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y3\");");
    gold.append("\n    y3.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y4\");");
    gold.append("\n    y4.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y5\");");
    gold.append("\n    y5.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y6\");");
    gold.append("\n    y6.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y7\");");
    gold.append("\n    y7.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x1\");");
    gold.append("\n    x1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x2\");");
    gold.append("\n    x2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x3\");");
    gold.append("\n    x3.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x4\");");
    gold.append("\n    x4.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x5\");");
    gold.append("\n    x5.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x6\");");
    gold.append("\n    x6.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x7\");");
    gold.append("\n    x7.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    rows.__commit(\"rows\", __forward, __reverse);");
    gold.append("\n    y1.__commit(\"y1\", __forward, __reverse);");
    gold.append("\n    y2.__commit(\"y2\", __forward, __reverse);");
    gold.append("\n    y3.__commit(\"y3\", __forward, __reverse);");
    gold.append("\n    y4.__commit(\"y4\", __forward, __reverse);");
    gold.append("\n    y5.__commit(\"y5\", __forward, __reverse);");
    gold.append("\n    y6.__commit(\"y6\", __forward, __reverse);");
    gold.append("\n    y7.__commit(\"y7\", __forward, __reverse);");
    gold.append("\n    x1.__commit(\"x1\", __forward, __reverse);");
    gold.append("\n    x2.__commit(\"x2\", __forward, __reverse);");
    gold.append("\n    x3.__commit(\"x3\", __forward, __reverse);");
    gold.append("\n    x4.__commit(\"x4\", __forward, __reverse);");
    gold.append("\n    x5.__commit(\"x5\", __forward, __reverse);");
    gold.append("\n    x6.__commit(\"x6\", __forward, __reverse);");
    gold.append("\n    x7.__commit(\"x7\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    rows.__revert();");
    gold.append("\n    y1.__revert();");
    gold.append("\n    y2.__revert();");
    gold.append("\n    y3.__revert();");
    gold.append("\n    y4.__revert();");
    gold.append("\n    y5.__revert();");
    gold.append("\n    y6.__revert();");
    gold.append("\n    y7.__revert();");
    gold.append("\n    x1.__revert();");
    gold.append("\n    x2.__revert();");
    gold.append("\n    x3.__revert();");
    gold.append("\n    x4.__revert();");
    gold.append("\n    x5.__revert();");
    gold.append("\n    x6.__revert();");
    gold.append("\n    x7.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaStats_3 implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaStats_3() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(Stats_3 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    Stats_3 __self = this;");
    gold.append("\n    DeltaStats_3 __state = new DeltaStats_3();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_R = new String[] {};");
    gold.append("\n  private class RTxR extends RxRecordBase<RTxR> {");
    gold.append("\n    private final RTxR __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxInt32 x;");
    gold.append("\n    private final RxDouble y;");
    gold.append("\n    private RTxR(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      x = new RxInt32(this, 0);");
    gold.append("\n      y = new RxDouble(this, 0.0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += x.__memory();");
    gold.append("\n      __sum += y.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_R;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"x\":");
    gold.append("\n          return x;");
    gold.append("\n        case \"y\":");
    gold.append("\n          return y;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      x.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      y.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n        y.__commit(\"y\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        x.__revert();");
    gold.append("\n        y.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxR __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"R\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxR implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxR() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxR __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_0 __this;");
    gold.append("\n    private int x = 0;");
    gold.append("\n    private double y = 0.0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"x\");");
    gold.append("\n      __hash.hashInteger(this.x);");
    gold.append("\n      __hash.hashString(\"y\");");
    gold.append("\n      __hash.hashDouble(this.y);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_0 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_0;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            this.x = __reader.readInteger();");
    gold.append("\n            break;");
    gold.append("\n          case \"y\":");
    gold.append("\n            this.y = __reader.readDouble();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      __writer.writeInteger(x);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      __writer.writeDouble(y);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_0(int x, double y) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.x = x;");
    gold.append("\n      this.y = y;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private DDouble __dy;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __dy = new DDouble();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      __sum += __dy.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dx.show(__item.x, __obj.planField(\"x\"));");
    gold.append("\n      __dy.show(__item.y, __obj.planField(\"y\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __dy.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication() {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __debug(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.writeObjectFieldIntro(\"tables\");");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"rows\");");
    gold.append("\n    rows.debug(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 21;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef6 = rows;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr8 = new RTx_AnonObjConvert_0(1, 29.0);");
    gold.append("\n      RTxR _CreateRef7 = _AutoRef6.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef7.x.set(_AutoExpr8.x);");
    gold.append("\n      _CreateRef7.y.set(_AutoExpr8.y);");
    gold.append("\n    }");
    gold.append("\n    __track(1);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef9 = rows;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr11 = new RTx_AnonObjConvert_0(2, 6.0);");
    gold.append("\n      RTxR _CreateRef10 = _AutoRef9.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef10.x.set(_AutoExpr11.x);");
    gold.append("\n      _CreateRef10.y.set(_AutoExpr11.y);");
    gold.append("\n    }");
    gold.append("\n    __track(2);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef12 = rows;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr14 = new RTx_AnonObjConvert_0(3, 1.0);");
    gold.append("\n      RTxR _CreateRef13 = _AutoRef12.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef13.x.set(_AutoExpr14.x);");
    gold.append("\n      _CreateRef13.y.set(_AutoExpr14.y);");
    gold.append("\n    }");
    gold.append("\n    __track(3);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef15 = rows;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr17 = new RTx_AnonObjConvert_0(4, 100.0);");
    gold.append("\n      RTxR _CreateRef16 = _AutoRef15.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef16.x.set(_AutoExpr17.x);");
    gold.append("\n      _CreateRef16.y.set(_AutoExpr17.y);");
    gold.append("\n    }");
    gold.append("\n    __track(4);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef18 = rows;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr20 = new RTx_AnonObjConvert_0(5, 23.0);");
    gold.append("\n      RTxR _CreateRef19 = _AutoRef18.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef19.x.set(_AutoExpr20.x);");
    gold.append("\n      _CreateRef19.y.set(_AutoExpr20.y);");
    gold.append("\n    }");
    gold.append("\n    __track(5);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef21 = rows;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr23 = new RTx_AnonObjConvert_0(6, 452.45);");
    gold.append("\n      RTxR _CreateRef22 = _AutoRef21.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef22.x.set(_AutoExpr23.x);");
    gold.append("\n      _CreateRef22.y.set(_AutoExpr23.y);");
    gold.append("\n    }");
    gold.append("\n    __track(6);");
    gold.append("\n    y1.set(LibStatistics.sumDoubles((rows.iterate(true)).transform((item) -> item.y.get())).getOrDefaultTo(-1000.0));");
    gold.append("\n    __track(7);");
    gold.append("\n    y2.set(LibStatistics.medianDoubles((rows.iterate(true)).transform((item) -> item.y.get())).getOrDefaultTo(-1000.0));");
    gold.append("\n    __track(8);");
    gold.append("\n    y3.set(LibStatistics.maxDoubles((rows.iterate(true)).transform((item) -> item.y.get())).getOrDefaultTo(-1000.0));");
    gold.append("\n    __track(9);");
    gold.append("\n    y4.set(LibStatistics.minDoubles((rows.iterate(true)).transform((item) -> item.y.get())).getOrDefaultTo(-1000.0));");
    gold.append("\n    __track(10);");
    gold.append("\n    y5.set(LibStatistics.percentileDoubles((rows.iterate(true)).transform((item) -> item.y.get()), 0.0).getOrDefaultTo(-1000.0));");
    gold.append("\n    __track(11);");
    gold.append("\n    y6.set(LibStatistics.percentileDoubles((rows.iterate(true)).transform((item) -> item.y.get()), 0.95).getOrDefaultTo(-1000.0));");
    gold.append("\n    __track(12);");
    gold.append("\n    y7.set(LibStatistics.avgDoubles((rows.iterate(true)).transform((item) -> item.y.get())).getOrDefaultTo(-1000.0));");
    gold.append("\n    __track(13);");
    gold.append("\n    x1.set(LibStatistics.sumInts((rows.iterate(true)).transform((item) -> item.x.get())).getOrDefaultTo(-1000));");
    gold.append("\n    __track(14);");
    gold.append("\n    x2.set(LibStatistics.medianInts((rows.iterate(true)).transform((item) -> item.x.get())).getOrDefaultTo(-1000));");
    gold.append("\n    __track(15);");
    gold.append("\n    x3.set(LibStatistics.maxInts((rows.iterate(true)).transform((item) -> item.x.get())).getOrDefaultTo(-1000));");
    gold.append("\n    __track(16);");
    gold.append("\n    x4.set(LibStatistics.minInts((rows.iterate(true)).transform((item) -> item.x.get())).getOrDefaultTo(-1000));");
    gold.append("\n    __track(17);");
    gold.append("\n    x5.set(LibStatistics.percentileInts((rows.iterate(true)).transform((item) -> item.x.get()), 0.0).getOrDefaultTo(-1000));");
    gold.append("\n    __track(18);");
    gold.append("\n    x6.set(LibStatistics.percentileInts((rows.iterate(true)).transform((item) -> item.x.get()), 0.95).getOrDefaultTo(-1000));");
    gold.append("\n    __track(19);");
    gold.append("\n    x7.set(LibStatistics.avgInts((rows.iterate(true)).transform((item) -> item.x.get())).getOrDefaultTo(-1000.0));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--=[LivingDocumentFactory COMPILING]=---");
    gold.append("\n--=[LivingDocumentFactory MADE]=---");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"rows\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"R\"},\"privacy\":\"private\"},\"y1\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"},\"y2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"},\"y3\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"},\"y4\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"},\"y5\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"},\"y6\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"},\"y7\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"},\"x1\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"x2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"x3\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"x4\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"x5\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"x6\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"x7\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"R\":{\"nature\":\"reactive_record\",\"name\":\"R\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"y\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"private\"}}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"x\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"y\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"}}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__auto_table_row_id\":6,\"rows\":{\"1\":{\"id\":1,\"x\":1,\"y\":29.0},\"2\":{\"id\":2,\"x\":2,\"y\":6.0},\"3\":{\"id\":3,\"x\":3,\"y\":1.0},\"4\":{\"id\":4,\"x\":4,\"y\":100.0},\"5\":{\"id\":5,\"x\":5,\"y\":23.0},\"6\":{\"id\":6,\"x\":6,\"y\":452.45}},\"y1\":611.45,\"y2\":26.0,\"y3\":452.45,\"y4\":1.0,\"y5\":1.0,\"y6\":452.45,\"y7\":101.90833333333335,\"x1\":21,\"x2\":3,\"x3\":6,\"x4\":1,\"x5\":1,\"x6\":6,\"x7\":3.5,\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:33");
    gold.append("\nMEMORY:2516");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:2634");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"rows\":{\"1\":{\"id\":1,\"x\":1,\"y\":29.0},\"2\":{\"id\":2,\"x\":2,\"y\":6.0},\"3\":{\"id\":3,\"x\":3,\"y\":1.0},\"4\":{\"id\":4,\"x\":4,\"y\":100.0},\"5\":{\"id\":5,\"x\":5,\"y\":23.0},\"6\":{\"id\":6,\"x\":6,\"y\":452.45}},\"y1\":611.45,\"y2\":26.0,\"y3\":452.45,\"y4\":1.0,\"y5\":1.0,\"y6\":452.45,\"y7\":101.90833333333335,\"x1\":21,\"x2\":3,\"x3\":6,\"x4\":1,\"x5\":1,\"x6\":6,\"x7\":3.5,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":6,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"rows\":{\"1\":{\"id\":1,\"x\":1,\"y\":29.0},\"2\":{\"id\":2,\"x\":2,\"y\":6.0},\"3\":{\"id\":3,\"x\":3,\"y\":1.0},\"4\":{\"id\":4,\"x\":4,\"y\":100.0},\"5\":{\"id\":5,\"x\":5,\"y\":23.0},\"6\":{\"id\":6,\"x\":6,\"y\":452.45}},\"y1\":611.45,\"y2\":26.0,\"y3\":452.45,\"y4\":1.0,\"y5\":1.0,\"y6\":452.45,\"y7\":101.90833333333335,\"x1\":21,\"x2\":3,\"x3\":6,\"x4\":1,\"x5\":1,\"x6\":6,\"x7\":3.5,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":6,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"rows\":{\"1\":{\"id\":1,\"x\":1,\"y\":29.0},\"2\":{\"id\":2,\"x\":2,\"y\":6.0},\"3\":{\"id\":3,\"x\":3,\"y\":1.0},\"4\":{\"id\":4,\"x\":4,\"y\":100.0},\"5\":{\"id\":5,\"x\":5,\"y\":23.0},\"6\":{\"id\":6,\"x\":6,\"y\":452.45}},\"y1\":611.45,\"y2\":26.0,\"y3\":452.45,\"y4\":1.0,\"y5\":1.0,\"y6\":452.45,\"y7\":101.90833333333335,\"x1\":21,\"x2\":3,\"x3\":6,\"x4\":1,\"x5\":1,\"x6\":6,\"x7\":3.5,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":6,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_Strings_4 = null;
  private String get_Strings_4() {
    if (cached_Strings_4 != null) {
      return cached_Strings_4;
    }
    cached_Strings_4 = generateTestOutput(true, "Strings_4", "./test_code/StdLib_Strings_success.a");
    return cached_Strings_4;
  }

  @Test
  public void testStringsEmission() {
    assertEmissionGood(get_Strings_4());
  }

  @Test
  public void testStringsSuccess() {
    assertLivePass(get_Strings_4());
  }

  @Test
  public void testStringsGoodWillHappy() {
    assertGoodWillHappy(get_Strings_4());
  }

  @Test
  public void testStringsExceptionFree() {
    assertExceptionFree(get_Strings_4());
  }

  @Test
  public void testStringsTODOFree() {
    assertTODOFree(get_Strings_4());
  }

  @Test
  public void stable_Strings_4() {
    String live = get_Strings_4();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:StdLib_Strings_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class Strings_4 extends LivingDocument {");
    gold.append("\n  private final RxString x1;");
    gold.append("\n  private final RxString x2;");
    gold.append("\n  private final RxString x3;");
    gold.append("\n  private final RxString x4;");
    gold.append("\n  private final RxString x5;");
    gold.append("\n  private final RxString x6;");
    gold.append("\n  private final RxString x7;");
    gold.append("\n  private final RxString x8;");
    gold.append("\n  private final RxString x9;");
    gold.append("\n  private final RxString x10;");
    gold.append("\n  private final RxBoolean checkF;");
    gold.append("\n  private final RxBoolean checkT;");
    gold.append("\n  private final RxInt32 cp;");
    gold.append("\n  private final RxString y1;");
    gold.append("\n  private final RxString y2;");
    gold.append("\n  private final RxString y3;");
    gold.append("\n  private final RxString y4;");
    gold.append("\n  private final RxMaybe<RxString> join_maybe;");
    gold.append("\n  private final RxTable<RTxS> _s;");
    gold.append("\n  private final RxLazy<NtList<Integer>> y4_cp;");
    gold.append("\n  private final RxLazy<String> r2023;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += x1.__memory();");
    gold.append("\n    __sum += x2.__memory();");
    gold.append("\n    __sum += x3.__memory();");
    gold.append("\n    __sum += x4.__memory();");
    gold.append("\n    __sum += x5.__memory();");
    gold.append("\n    __sum += x6.__memory();");
    gold.append("\n    __sum += x7.__memory();");
    gold.append("\n    __sum += x8.__memory();");
    gold.append("\n    __sum += x9.__memory();");
    gold.append("\n    __sum += x10.__memory();");
    gold.append("\n    __sum += checkF.__memory();");
    gold.append("\n    __sum += checkT.__memory();");
    gold.append("\n    __sum += cp.__memory();");
    gold.append("\n    __sum += y1.__memory();");
    gold.append("\n    __sum += y2.__memory();");
    gold.append("\n    __sum += y3.__memory();");
    gold.append("\n    __sum += y4.__memory();");
    gold.append("\n    __sum += join_maybe.__memory();");
    gold.append("\n    __sum += _s.__memory();");
    gold.append("\n    __sum += y4_cp.__memory();");
    gold.append("\n    __sum += r2023.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Strings_4(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    x1 = new RxString(this, \"\");");
    gold.append("\n    x2 = new RxString(this, \"\");");
    gold.append("\n    x3 = new RxString(this, \"\");");
    gold.append("\n    x4 = new RxString(this, \"\");");
    gold.append("\n    x5 = new RxString(this, \"\");");
    gold.append("\n    x6 = new RxString(this, \"\");");
    gold.append("\n    x7 = new RxString(this, \"\");");
    gold.append("\n    x8 = new RxString(this, \"\");");
    gold.append("\n    x9 = new RxString(this, \"\");");
    gold.append("\n    x10 = new RxString(this, \"\");");
    gold.append("\n    checkF = new RxBoolean(this, false);");
    gold.append("\n    checkT = new RxBoolean(this, false);");
    gold.append("\n    cp = new RxInt32(this, 0);");
    gold.append("\n    y1 = new RxString(this, \"\");");
    gold.append("\n    y2 = new RxString(this, \"\");");
    gold.append("\n    y3 = new RxString(this, \"\");");
    gold.append("\n    y4 = new RxString(this, \"\");");
    gold.append("\n    join_maybe = new RxMaybe<>(this, (RxParent __parent) -> new RxString(__parent, \"\"));");
    gold.append("\n    _s = new RxTable<>(__self, this, \"_s\", (RxParent __parent) -> new RTxS(__parent).__link(), 0);");
    gold.append("\n    y4_cp = new RxLazy<NtList<Integer>>(this, () -> (NtList<Integer>)(LibString.codepoints(y4.get())));");
    gold.append("\n    r2023 = new RxLazy<String>(this, () -> (String)(LibString.to_roman((2023))));");
    gold.append("\n    y4.__subscribe(y4_cp);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x1\":");
    gold.append("\n            x1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x2\":");
    gold.append("\n            x2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x3\":");
    gold.append("\n            x3.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x4\":");
    gold.append("\n            x4.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x5\":");
    gold.append("\n            x5.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x6\":");
    gold.append("\n            x6.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x7\":");
    gold.append("\n            x7.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x8\":");
    gold.append("\n            x8.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x9\":");
    gold.append("\n            x9.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x10\":");
    gold.append("\n            x10.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"checkF\":");
    gold.append("\n            checkF.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"checkT\":");
    gold.append("\n            checkT.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"cp\":");
    gold.append("\n            cp.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y1\":");
    gold.append("\n            y1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y2\":");
    gold.append("\n            y2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y3\":");
    gold.append("\n            y3.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y4\":");
    gold.append("\n            y4.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"join_maybe\":");
    gold.append("\n            join_maybe.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_s\":");
    gold.append("\n            _s.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x1\":");
    gold.append("\n            x1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x2\":");
    gold.append("\n            x2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x3\":");
    gold.append("\n            x3.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x4\":");
    gold.append("\n            x4.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x5\":");
    gold.append("\n            x5.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x6\":");
    gold.append("\n            x6.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x7\":");
    gold.append("\n            x7.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x8\":");
    gold.append("\n            x8.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x9\":");
    gold.append("\n            x9.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x10\":");
    gold.append("\n            x10.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"checkF\":");
    gold.append("\n            checkF.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"checkT\":");
    gold.append("\n            checkT.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"cp\":");
    gold.append("\n            cp.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y1\":");
    gold.append("\n            y1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y2\":");
    gold.append("\n            y2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y3\":");
    gold.append("\n            y3.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y4\":");
    gold.append("\n            y4.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"join_maybe\":");
    gold.append("\n            join_maybe.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_s\":");
    gold.append("\n            _s.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x1\");");
    gold.append("\n    x1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x2\");");
    gold.append("\n    x2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x3\");");
    gold.append("\n    x3.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x4\");");
    gold.append("\n    x4.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x5\");");
    gold.append("\n    x5.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x6\");");
    gold.append("\n    x6.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x7\");");
    gold.append("\n    x7.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x8\");");
    gold.append("\n    x8.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x9\");");
    gold.append("\n    x9.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x10\");");
    gold.append("\n    x10.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"checkF\");");
    gold.append("\n    checkF.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"checkT\");");
    gold.append("\n    checkT.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"cp\");");
    gold.append("\n    cp.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y1\");");
    gold.append("\n    y1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y2\");");
    gold.append("\n    y2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y3\");");
    gold.append("\n    y3.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y4\");");
    gold.append("\n    y4.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"join_maybe\");");
    gold.append("\n    join_maybe.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_s\");");
    gold.append("\n    _s.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    x1.__commit(\"x1\", __forward, __reverse);");
    gold.append("\n    x2.__commit(\"x2\", __forward, __reverse);");
    gold.append("\n    x3.__commit(\"x3\", __forward, __reverse);");
    gold.append("\n    x4.__commit(\"x4\", __forward, __reverse);");
    gold.append("\n    x5.__commit(\"x5\", __forward, __reverse);");
    gold.append("\n    x6.__commit(\"x6\", __forward, __reverse);");
    gold.append("\n    x7.__commit(\"x7\", __forward, __reverse);");
    gold.append("\n    x8.__commit(\"x8\", __forward, __reverse);");
    gold.append("\n    x9.__commit(\"x9\", __forward, __reverse);");
    gold.append("\n    x10.__commit(\"x10\", __forward, __reverse);");
    gold.append("\n    checkF.__commit(\"checkF\", __forward, __reverse);");
    gold.append("\n    checkT.__commit(\"checkT\", __forward, __reverse);");
    gold.append("\n    cp.__commit(\"cp\", __forward, __reverse);");
    gold.append("\n    y1.__commit(\"y1\", __forward, __reverse);");
    gold.append("\n    y2.__commit(\"y2\", __forward, __reverse);");
    gold.append("\n    y3.__commit(\"y3\", __forward, __reverse);");
    gold.append("\n    y4.__commit(\"y4\", __forward, __reverse);");
    gold.append("\n    join_maybe.__commit(\"join_maybe\", __forward, __reverse);");
    gold.append("\n    _s.__commit(\"_s\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    x1.__revert();");
    gold.append("\n    x2.__revert();");
    gold.append("\n    x3.__revert();");
    gold.append("\n    x4.__revert();");
    gold.append("\n    x5.__revert();");
    gold.append("\n    x6.__revert();");
    gold.append("\n    x7.__revert();");
    gold.append("\n    x8.__revert();");
    gold.append("\n    x9.__revert();");
    gold.append("\n    x10.__revert();");
    gold.append("\n    checkF.__revert();");
    gold.append("\n    checkT.__revert();");
    gold.append("\n    cp.__revert();");
    gold.append("\n    y1.__revert();");
    gold.append("\n    y2.__revert();");
    gold.append("\n    y3.__revert();");
    gold.append("\n    y4.__revert();");
    gold.append("\n    join_maybe.__revert();");
    gold.append("\n    _s.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaStrings_4 implements DeltaNode {");
    gold.append("\n    private DString __dx1;");
    gold.append("\n    private DString __dx2;");
    gold.append("\n    private DString __dx3;");
    gold.append("\n    private DString __dx4;");
    gold.append("\n    private DString __dx5;");
    gold.append("\n    private DString __dx6;");
    gold.append("\n    private DString __dx7;");
    gold.append("\n    private DString __dx8;");
    gold.append("\n    private DString __dx9;");
    gold.append("\n    private DString __dx10;");
    gold.append("\n    private DBoolean __dcheckF;");
    gold.append("\n    private DBoolean __dcheckT;");
    gold.append("\n    private DInt32 __dcp;");
    gold.append("\n    private DString __dy1;");
    gold.append("\n    private DString __dy2;");
    gold.append("\n    private DString __dy3;");
    gold.append("\n    private DString __dy4;");
    gold.append("\n    private DMaybe<DString> __djoin_maybe;");
    gold.append("\n    private int __gy4_cp;");
    gold.append("\n    private DList<DInt32> __dy4_cp;");
    gold.append("\n    private int __gr2023;");
    gold.append("\n    private DString __dr2023;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaStrings_4() {");
    gold.append("\n      __dx1 = new DString();");
    gold.append("\n      __dx2 = new DString();");
    gold.append("\n      __dx3 = new DString();");
    gold.append("\n      __dx4 = new DString();");
    gold.append("\n      __dx5 = new DString();");
    gold.append("\n      __dx6 = new DString();");
    gold.append("\n      __dx7 = new DString();");
    gold.append("\n      __dx8 = new DString();");
    gold.append("\n      __dx9 = new DString();");
    gold.append("\n      __dx10 = new DString();");
    gold.append("\n      __dcheckF = new DBoolean();");
    gold.append("\n      __dcheckT = new DBoolean();");
    gold.append("\n      __dcp = new DInt32();");
    gold.append("\n      __dy1 = new DString();");
    gold.append("\n      __dy2 = new DString();");
    gold.append("\n      __dy3 = new DString();");
    gold.append("\n      __dy4 = new DString();");
    gold.append("\n      __djoin_maybe = new DMaybe<DString>();");
    gold.append("\n      __gy4_cp = -1;");
    gold.append("\n      __dy4_cp = new DList<DInt32>();");
    gold.append("\n      __gr2023 = -1;");
    gold.append("\n      __dr2023 = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx1.__memory();");
    gold.append("\n      __sum += __dx2.__memory();");
    gold.append("\n      __sum += __dx3.__memory();");
    gold.append("\n      __sum += __dx4.__memory();");
    gold.append("\n      __sum += __dx5.__memory();");
    gold.append("\n      __sum += __dx6.__memory();");
    gold.append("\n      __sum += __dx7.__memory();");
    gold.append("\n      __sum += __dx8.__memory();");
    gold.append("\n      __sum += __dx9.__memory();");
    gold.append("\n      __sum += __dx10.__memory();");
    gold.append("\n      __sum += __dcheckF.__memory();");
    gold.append("\n      __sum += __dcheckT.__memory();");
    gold.append("\n      __sum += __dcp.__memory();");
    gold.append("\n      __sum += __dy1.__memory();");
    gold.append("\n      __sum += __dy2.__memory();");
    gold.append("\n      __sum += __dy3.__memory();");
    gold.append("\n      __sum += __dy4.__memory();");
    gold.append("\n      __sum += __djoin_maybe.__memory();");
    gold.append("\n      __sum += __dy4_cp.__memory();");
    gold.append("\n      __sum += __dr2023.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(Strings_4 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 20;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dx1.show(__item.x1.get(), __obj.planField(\"x1\"));");
    gold.append("\n      __dx2.show(__item.x2.get(), __obj.planField(\"x2\"));");
    gold.append("\n      __dx3.show(__item.x3.get(), __obj.planField(\"x3\"));");
    gold.append("\n      __dx4.show(__item.x4.get(), __obj.planField(\"x4\"));");
    gold.append("\n      __dx5.show(__item.x5.get(), __obj.planField(\"x5\"));");
    gold.append("\n      __dx6.show(__item.x6.get(), __obj.planField(\"x6\"));");
    gold.append("\n      __dx7.show(__item.x7.get(), __obj.planField(\"x7\"));");
    gold.append("\n      __dx8.show(__item.x8.get(), __obj.planField(\"x8\"));");
    gold.append("\n      __dx9.show(__item.x9.get(), __obj.planField(\"x9\"));");
    gold.append("\n      __dx10.show(__item.x10.get(), __obj.planField(\"x10\"));");
    gold.append("\n      __dcheckF.show(__item.checkF.get(), __obj.planField(\"checkF\"));");
    gold.append("\n      __dcheckT.show(__item.checkT.get(), __obj.planField(\"checkT\"));");
    gold.append("\n      __dcp.show(__item.cp.get(), __obj.planField(\"cp\"));");
    gold.append("\n      __dy1.show(__item.y1.get(), __obj.planField(\"y1\"));");
    gold.append("\n      __dy2.show(__item.y2.get(), __obj.planField(\"y2\"));");
    gold.append("\n      __dy3.show(__item.y3.get(), __obj.planField(\"y3\"));");
    gold.append("\n      __dy4.show(__item.y4.get(), __obj.planField(\"y4\"));");
    gold.append("\n      if (__item.join_maybe.get().has()) {");
    gold.append("\n        String __maybeElement6 = (String)(__item.join_maybe.get().get());");
    gold.append("\n        DString __maybeDeltaElement7 = __djoin_maybe.get(() -> new DString());");
    gold.append("\n        __maybeDeltaElement7.show(__maybeElement6, __obj.planField(\"join_maybe\"));");
    gold.append("\n      } else {");
    gold.append("\n        __djoin_maybe.hide(__obj.planField(\"join_maybe\"));");
    gold.append("\n      }");
    gold.append("\n      if (__gy4_cp != __item.y4_cp.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          DList<DInt32> __deltaList9 = __dy4_cp;");
    gold.append("\n          PrivateLazyDeltaWriter __list8 = __obj.planField(\"y4_cp\").planObject();");
    gold.append("\n          int __index12 = 0;");
    gold.append("\n          for (Integer __listElement10 : __item.y4_cp.get()) {");
    gold.append("\n            DInt32 __deltaElement11 = __deltaList9.getPrior(__index12, () -> new DInt32());");
    gold.append("\n            __deltaElement11.show(__listElement10, __list8.planField(__index12));");
    gold.append("\n            __index12++;");
    gold.append("\n          }");
    gold.append("\n          __deltaList9.rectify(__index12, __list8);");
    gold.append("\n          __list8.end();");
    gold.append("\n        }");
    gold.append("\n        __gy4_cp = __item.y4_cp.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gr2023 != __item.r2023.getGeneration()) {");
    gold.append("\n        __dr2023.show(__item.r2023.get(), __obj.planField(\"r2023\"));");
    gold.append("\n        __gr2023 = __item.r2023.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx1.clear();");
    gold.append("\n      __dx2.clear();");
    gold.append("\n      __dx3.clear();");
    gold.append("\n      __dx4.clear();");
    gold.append("\n      __dx5.clear();");
    gold.append("\n      __dx6.clear();");
    gold.append("\n      __dx7.clear();");
    gold.append("\n      __dx8.clear();");
    gold.append("\n      __dx9.clear();");
    gold.append("\n      __dx10.clear();");
    gold.append("\n      __dcheckF.clear();");
    gold.append("\n      __dcheckT.clear();");
    gold.append("\n      __dcp.clear();");
    gold.append("\n      __dy1.clear();");
    gold.append("\n      __dy2.clear();");
    gold.append("\n      __dy3.clear();");
    gold.append("\n      __dy4.clear();");
    gold.append("\n      __djoin_maybe.clear();");
    gold.append("\n      __dy4_cp.clear();");
    gold.append("\n      __dr2023.clear();");
    gold.append("\n      __code_cost += 20;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    Strings_4 __self = this;");
    gold.append("\n    DeltaStrings_4 __state = new DeltaStrings_4();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_S = new String[] {};");
    gold.append("\n  private class RTxS extends RxRecordBase<RTxS> {");
    gold.append("\n    private final RTxS __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxMaybe<RxString> item;");
    gold.append("\n    private RTxS(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      item = new RxMaybe<>(this, (RxParent __parent) -> new RxString(__parent, \"\"));");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += item.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_S;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"item\":");
    gold.append("\n          return item;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"item\":");
    gold.append("\n              item.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"item\":");
    gold.append("\n              item.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"item\");");
    gold.append("\n      item.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        item.__commit(\"item\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        item.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {");
    gold.append("\n      item.__kill();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public RTxS __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"S\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxS implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxS() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxS __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_0 __this;");
    gold.append("\n    private NtMaybe<String> item = new NtMaybe<String>();");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"item\");");
    gold.append("\n      if (this.item.has()) {");
    gold.append("\n        __hash.hashString(this.item.get());");
    gold.append("\n      }");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_0 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_0;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"item\":");
    gold.append("\n            if (__reader.testLackOfNull()) {");
    gold.append("\n              String __localItem_0;");
    gold.append("\n              __localItem_0 = __reader.readString();");
    gold.append("\n              this.item.set(__localItem_0);");
    gold.append("\n            }");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"item\");");
    gold.append("\n      if (item.has()) {");
    gold.append("\n        __writer.writeString(item.get());");
    gold.append("\n      } else {");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_0(NtMaybe<String> item) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.item = item;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DMaybe<DString> __ditem;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __ditem = new DMaybe<DString>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __ditem.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__item.item.has()) {");
    gold.append("\n        String __maybeElement13 = (String)(__item.item.get());");
    gold.append("\n        DString __maybeDeltaElement14 = __ditem.get(() -> new DString());");
    gold.append("\n        __maybeDeltaElement14.show(__maybeElement13, __obj.planField(\"item\"));");
    gold.append("\n      } else {");
    gold.append("\n        __ditem.hide(__obj.planField(\"item\"));");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __ditem.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_2 extends NtMessageBase {");
    gold.append("\n    private final RTx_AnonObjConvert_2 __this;");
    gold.append("\n    private String item = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"item\");");
    gold.append("\n      __hash.hashString(this.item);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS__AnonObjConvert_2 = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS__AnonObjConvert_2;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_2(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"item\":");
    gold.append("\n            this.item = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"item\");");
    gold.append("\n      __writer.writeString(item);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_2() { __this = this; }");
    gold.append("\n    private RTx_AnonObjConvert_2(String item) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.item = item;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_2 implements DeltaNode {");
    gold.append("\n    private DString __ditem;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_2() {");
    gold.append("\n      __ditem = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __ditem.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_2 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __ditem.show(__item.item, __obj.planField(\"item\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __ditem.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication() {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __debug(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.writeObjectFieldIntro(\"tables\");");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_s\");");
    gold.append("\n    _s.debug(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 26;");
    gold.append("\n    __track(0);");
    gold.append("\n    x1.set(LibString.reverse(\"123\"));");
    gold.append("\n    __track(1);");
    gold.append("\n    x2.set(LibString.multiply(\"m\", 4));");
    gold.append("\n    __track(2);");
    gold.append("\n    x3.set(LibString.multiply((x2.get() + \"z\"), 2));");
    gold.append("\n    __track(3);");
    gold.append("\n    x4.set(LibString.left(x3.get(), 2).getOrDefaultTo(\"\"));");
    gold.append("\n    __track(4);");
    gold.append("\n    x5.set(LibString.reverse(LibString.multiply(LibString.right(LibString.multiply(LibString.reverse(LibString.right(LibString.left(\"54321\", 1000), 2)), 3), 4), 3)).getOrDefaultTo(\"NOPE\"));");
    gold.append("\n    __track(5);");
    gold.append("\n    x6.set(LibString.right(LibString.reverse(LibString.left(\"OK\", -1)), 1).getOrDefaultTo(\"NOPE\"));");
    gold.append("\n    __track(6);");
    gold.append("\n    x7.set(LibString.left(LibString.multiply(LibString.right(\"OK\", -1), 3), 1).getOrDefaultTo(\"NOPE\"));");
    gold.append("\n    __track(7);");
    gold.append("\n    x8.set(LibString.left(LibString.right(\"OKOK\", 3), 2).getOrDefaultTo(\"Noooooo\"));");
    gold.append("\n    __track(8);");
    gold.append("\n    x9.set(LibString.mid(LibString.trim(\" abc \"), 2, 1).getOrDefaultTo(\"Noooooo\"));");
    gold.append("\n    __track(9);");
    gold.append("\n    x10.set(LibString.upper(LibString.substr(\"abcdefg\", 1, 4).getOrDefaultTo(\"Noooooo\")));");
    gold.append("\n    __track(10);");
    gold.append("\n    String x11 = LibString.passwordHash(\"secret\");");
    gold.append("\n    __track(11);");
    gold.append("\n    checkF.set(LibString.passwordCheck(x11, \"nope\"));");
    gold.append("\n    __track(12);");
    gold.append("\n    checkT.set(LibString.passwordCheck(x11, \"secret\"));");
    gold.append("\n    __track(13);");
    gold.append("\n    cp.set(LibString.codepointAt(\"猿も木から落ちる\", 0).getOrDefaultTo(-1));");
    gold.append("\n    __track(14);");
    gold.append("\n    y1.set(LibString.removeAll(\"ABCDEFABCDEFABCDEF\", \"DEF\"));");
    gold.append("\n    __track(15);");
    gold.append("\n    y2.set(LibString.replaceAll(\"ABCDEFABCDEFABCDEF\", \"DEF\", \"XYZ\"));");
    gold.append("\n    __track(16);");
    gold.append("\n    y3.set(LibString.concat(new String[] {\"X\", \"Y\"}));");
    gold.append("\n    __track(17);");
    gold.append("\n    y4.set(LibString.join(new String[] {\"X\", \"Y\"}, \", \"));");
    gold.append("\n    __track(18);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxS> _AutoRef15 = _s;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr17 = new RTx_AnonObjConvert_0(new NtMaybe<String>());");
    gold.append("\n      RTxS _CreateRef16 = _AutoRef15.make();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      NtMaybe<String> _AutoCondition__unwrap_item_18_19;");
    gold.append("\n      if ((_AutoCondition__unwrap_item_18_19 = _AutoExpr17.item).has()) {");
    gold.append("\n        String __unwrap_item_18 = _AutoCondition__unwrap_item_18_19.get();");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(19);");
    gold.append("\n        _CreateRef16.item.make().set(__unwrap_item_18);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(20);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxS> _AutoRef20 = _s;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr22 = new RTx_AnonObjConvert_0(new NtMaybe<String>());");
    gold.append("\n      RTxS _CreateRef21 = _AutoRef20.make();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      NtMaybe<String> _AutoCondition__unwrap_item_23_24;");
    gold.append("\n      if ((_AutoCondition__unwrap_item_23_24 = _AutoExpr22.item).has()) {");
    gold.append("\n        String __unwrap_item_23 = _AutoCondition__unwrap_item_23_24.get();");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(21);");
    gold.append("\n        _CreateRef21.item.make().set(__unwrap_item_23);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(22);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxS> _AutoRef25 = _s;");
    gold.append("\n      RTx_AnonObjConvert_2 _AutoExpr27 = new RTx_AnonObjConvert_2(\"x\");");
    gold.append("\n      RTxS _CreateRef26 = _AutoRef25.make();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      _CreateRef26.item.make().set(_AutoExpr27.item);");
    gold.append("\n    }");
    gold.append("\n    __track(23);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxS> _AutoRef28 = _s;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr30 = new RTx_AnonObjConvert_0(new NtMaybe<String>());");
    gold.append("\n      RTxS _CreateRef29 = _AutoRef28.make();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      NtMaybe<String> _AutoCondition__unwrap_item_31_32;");
    gold.append("\n      if ((_AutoCondition__unwrap_item_31_32 = _AutoExpr30.item).has()) {");
    gold.append("\n        String __unwrap_item_31 = _AutoCondition__unwrap_item_31_32.get();");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(24);");
    gold.append("\n        _CreateRef29.item.make().set(__unwrap_item_31);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(25);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxS> _AutoRef33 = _s;");
    gold.append("\n      RTx_AnonObjConvert_2 _AutoExpr35 = new RTx_AnonObjConvert_2(\"y\");");
    gold.append("\n      RTxS _CreateRef34 = _AutoRef33.make();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      _CreateRef34.item.make().set(_AutoExpr35.item);");
    gold.append("\n    }");
    gold.append("\n    __track(26);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxS> _AutoRef36 = _s;");
    gold.append("\n      RTx_AnonObjConvert_2 _AutoExpr38 = new RTx_AnonObjConvert_2(\"z\");");
    gold.append("\n      RTxS _CreateRef37 = _AutoRef36.make();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      _CreateRef37.item.make().set(_AutoExpr38.item);");
    gold.append("\n    }");
    gold.append("\n    __track(27);");
    gold.append("\n    join_maybe.set(LibString.joinMaybes((_s.iterate(true)).transform((item) -> item.item.get()), \", \"));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--=[LivingDocumentFactory COMPILING]=---");
    gold.append("\n--=[LivingDocumentFactory MADE]=---");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"x1\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x3\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x4\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x5\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x6\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x7\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x8\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x9\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"x10\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"checkF\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"checkT\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"cp\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"y1\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"y2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"y3\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"y4\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"y4_cp\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"r2023\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"join_maybe\":{\"type\":{\"nature\":\"reactive_maybe\",\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"}},\"privacy\":\"public\"},\"_s\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"S\"},\"privacy\":\"private\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"S\":{\"nature\":\"reactive_record\",\"name\":\"S\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"item\":{\"type\":{\"nature\":\"reactive_maybe\",\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"}},\"privacy\":\"private\"}}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"item\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"string\"}},\"privacy\":\"public\"}}},\"_AnonObjConvert_2\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_2\",\"anonymous\":true,\"fields\":{\"item\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__auto_table_row_id\":6,\"x1\":\"321\",\"x2\":\"mmmm\",\"x3\":\"mmmmzmmmmz\",\"x4\":\"mm\",\"x5\":\"212121212121\",\"x6\":\"NOPE\",\"x7\":\"NOPE\",\"x8\":\"KO\",\"x9\":\"b\",\"x10\":\"BCD\",\"checkT\":true,\"cp\":29503,\"y1\":\"ABCABCABC\",\"y2\":\"ABCXYZABCXYZABCXYZ\",\"y3\":\"XY\",\"y4\":\"X, Y\",\"join_maybe\":\"x, y, z\",\"_s\":{\"1\":{\"id\":1,\"item\":null},\"2\":{\"id\":2,\"item\":null},\"3\":{\"id\":3,\"item\":\"x\"},\"4\":{\"id\":4,\"item\":null},\"5\":{\"id\":5,\"item\":\"y\"},\"6\":{\"id\":6,\"item\":\"z\"}},\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:32");
    gold.append("\nMEMORY:3436");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x1\":\"321\",\"x2\":\"mmmm\",\"x3\":\"mmmmzmmmmz\",\"x4\":\"mm\",\"x5\":\"212121212121\",\"x6\":\"NOPE\",\"x7\":\"NOPE\",\"x8\":\"KO\",\"x9\":\"b\",\"x10\":\"BCD\",\"checkF\":false,\"checkT\":true,\"cp\":29503,\"y1\":\"ABCABCABC\",\"y2\":\"ABCXYZABCXYZABCXYZ\",\"y3\":\"XY\",\"y4\":\"X, Y\",\"join_maybe\":\"x, y, z\",\"y4_cp\":{\"0\":88,\"1\":44,\"2\":32,\"3\":89,\"@s\":4},\"r2023\":\"MMXXIII\"},\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x1\":\"321\",\"x2\":\"mmmm\",\"x3\":\"mmmmzmmmmz\",\"x4\":\"mm\",\"x5\":\"212121212121\",\"x6\":\"NOPE\",\"x7\":\"NOPE\",\"x8\":\"KO\",\"x9\":\"b\",\"x10\":\"BCD\",\"checkF\":false,\"checkT\":true,\"cp\":29503,\"y1\":\"ABCABCABC\",\"y2\":\"ABCXYZABCXYZABCXYZ\",\"y3\":\"XY\",\"y4\":\"X, Y\",\"join_maybe\":\"x, y, z\",\"y4_cp\":{\"0\":88,\"1\":44,\"2\":32,\"3\":89,\"@s\":4},\"r2023\":\"MMXXIII\"},\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:6098");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"x1\":\"321\",\"x2\":\"mmmm\",\"x3\":\"mmmmzmmmmz\",\"x4\":\"mm\",\"x5\":\"212121212121\",\"x6\":\"NOPE\",\"x7\":\"NOPE\",\"x8\":\"KO\",\"x9\":\"b\",\"x10\":\"BCD\",\"checkF\":false,\"checkT\":true,\"cp\":29503,\"y1\":\"ABCABCABC\",\"y2\":\"ABCXYZABCXYZABCXYZ\",\"y3\":\"XY\",\"y4\":\"X, Y\",\"join_maybe\":\"x, y, z\",\"_s\":{\"1\":{\"id\":1,\"item\":null},\"2\":{\"id\":2,\"item\":null},\"3\":{\"id\":3,\"item\":\"x\"},\"4\":{\"id\":4,\"item\":null},\"5\":{\"id\":5,\"item\":\"y\"},\"6\":{\"id\":6,\"item\":\"z\"}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":6,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"x1\":\"321\",\"x2\":\"mmmm\",\"x3\":\"mmmmzmmmmz\",\"x4\":\"mm\",\"x5\":\"212121212121\",\"x6\":\"NOPE\",\"x7\":\"NOPE\",\"x8\":\"KO\",\"x9\":\"b\",\"x10\":\"BCD\",\"checkF\":false,\"checkT\":true,\"cp\":29503,\"y1\":\"ABCABCABC\",\"y2\":\"ABCXYZABCXYZABCXYZ\",\"y3\":\"XY\",\"y4\":\"X, Y\",\"join_maybe\":\"x, y, z\",\"_s\":{\"1\":{\"id\":1,\"item\":null},\"2\":{\"id\":2,\"item\":null},\"3\":{\"id\":3,\"item\":\"x\"},\"4\":{\"id\":4,\"item\":null},\"5\":{\"id\":5,\"item\":\"y\"},\"6\":{\"id\":6,\"item\":\"z\"}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":6,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"x1\":\"321\",\"x2\":\"mmmm\",\"x3\":\"mmmmzmmmmz\",\"x4\":\"mm\",\"x5\":\"212121212121\",\"x6\":\"NOPE\",\"x7\":\"NOPE\",\"x8\":\"KO\",\"x9\":\"b\",\"x10\":\"BCD\",\"checkF\":false,\"checkT\":true,\"cp\":29503,\"y1\":\"ABCABCABC\",\"y2\":\"ABCXYZABCXYZABCXYZ\",\"y3\":\"XY\",\"y4\":\"X, Y\",\"join_maybe\":\"x, y, z\",\"_s\":{\"1\":{\"id\":1,\"item\":null},\"2\":{\"id\":2,\"item\":null},\"3\":{\"id\":3,\"item\":\"x\"},\"4\":{\"id\":4,\"item\":null},\"5\":{\"id\":5,\"item\":\"y\"},\"6\":{\"id\":6,\"item\":\"z\"}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":6,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_TablesJoin_5 = null;
  private String get_TablesJoin_5() {
    if (cached_TablesJoin_5 != null) {
      return cached_TablesJoin_5;
    }
    cached_TablesJoin_5 = generateTestOutput(true, "TablesJoin_5", "./test_code/StdLib_TablesJoin_success.a");
    return cached_TablesJoin_5;
  }

  @Test
  public void testTablesJoinEmission() {
    assertEmissionGood(get_TablesJoin_5());
  }

  @Test
  public void testTablesJoinSuccess() {
    assertLivePass(get_TablesJoin_5());
  }

  @Test
  public void testTablesJoinGoodWillHappy() {
    assertGoodWillHappy(get_TablesJoin_5());
  }

  @Test
  public void testTablesJoinExceptionFree() {
    assertExceptionFree(get_TablesJoin_5());
  }

  @Test
  public void testTablesJoinTODOFree() {
    assertTODOFree(get_TablesJoin_5());
  }

  @Test
  public void stable_TablesJoin_5() {
    String live = get_TablesJoin_5();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:StdLib_TablesJoin_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class TablesJoin_5 extends LivingDocument {");
    gold.append("\n  private final RTxWeekPattern wp;");
    gold.append("\n  private final RxLazy<String> nice;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += wp.__memory();");
    gold.append("\n    __sum += nice.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public TablesJoin_5(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    wp = new RTxWeekPattern(this);");
    gold.append("\n    nice = new RxLazy<String>(this, () -> (String)(wp.__METH_0_summary()));");
    gold.append("\n    wp.__link();");
    gold.append("\n    wp.__subscribe(nice);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"wp\":");
    gold.append("\n            wp.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"wp\":");
    gold.append("\n            wp.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"wp\");");
    gold.append("\n    wp.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    wp.__commit(\"wp\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    wp.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaTablesJoin_5 implements DeltaNode {");
    gold.append("\n    private DeltaRTxWeekPattern __dwp;");
    gold.append("\n    private int __gnice;");
    gold.append("\n    private DString __dnice;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaTablesJoin_5() {");
    gold.append("\n      __dwp = new DeltaRTxWeekPattern();");
    gold.append("\n      __gnice = -1;");
    gold.append("\n      __dnice = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwp.__memory();");
    gold.append("\n      __sum += __dnice.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(TablesJoin_5 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dwp.show(__item.wp, __obj.planField(\"wp\"));");
    gold.append("\n      if (__gnice != __item.nice.getGeneration()) {");
    gold.append("\n        __dnice.show(__item.nice.get(), __obj.planField(\"nice\"));");
    gold.append("\n        __gnice = __item.nice.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwp.clear();");
    gold.append("\n      __dnice.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    TablesJoin_5 __self = this;");
    gold.append("\n    DeltaTablesJoin_5 __state = new DeltaTablesJoin_5();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__genViewId(), __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxJustStr extends NtMessageBase {");
    gold.append("\n    private final RTxJustStr __this;");
    gold.append("\n    private String str = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"str\");");
    gold.append("\n      __hash.hashString(this.str);");
    gold.append("\n      __hash.hashString(\"JustStr\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_JustStr = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_JustStr;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxJustStr(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"str\":");
    gold.append("\n            this.str = __reader.readString();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"str\");");
    gold.append("\n      __writer.writeString(str);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxJustStr() { __this = this; }");
    gold.append("\n    private RTxJustStr(String str) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.str = str;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxJustStr implements DeltaNode {");
    gold.append("\n    private DString __dstr;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxJustStr() {");
    gold.append("\n      __dstr = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dstr.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxJustStr __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dstr.show(__item.str, __obj.planField(\"str\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dstr.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_WeekPattern = new String[] {};");
    gold.append("\n  private class RTxWeekPattern extends RxRecordBase<RTxWeekPattern> {");
    gold.append("\n    private final RTxWeekPattern __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxBoolean monday;");
    gold.append("\n    private final RxBoolean tuesday;");
    gold.append("\n    private final RxBoolean wednesday;");
    gold.append("\n    private final RxBoolean thursday;");
    gold.append("\n    private final RxBoolean friday;");
    gold.append("\n    private final RxBoolean saturday;");
    gold.append("\n    private final RxBoolean sunday;");
    gold.append("\n    private RTxWeekPattern(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      monday = new RxBoolean(this, false);");
    gold.append("\n      tuesday = new RxBoolean(this, false);");
    gold.append("\n      wednesday = new RxBoolean(this, false);");
    gold.append("\n      thursday = new RxBoolean(this, false);");
    gold.append("\n      friday = new RxBoolean(this, false);");
    gold.append("\n      saturday = new RxBoolean(this, false);");
    gold.append("\n      sunday = new RxBoolean(this, false);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    private String __METH_0_summary() {");
    gold.append("\n      __code_cost += 10;");
    gold.append("\n      __track(0);");
    gold.append("\n      NtTable<RTxJustStr> tbl = new NtTable<RTxJustStr>(() -> new RTxJustStr());");
    gold.append("\n      __track(1);");
    gold.append("\n      if (monday.get()) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(2);");
    gold.append("\n        {");
    gold.append("\n          NtTable<RTxJustStr> _AutoRef8 = tbl;");
    gold.append("\n          RTxJustStr _AutoExpr10 = new RTxJustStr(\"Mo\");");
    gold.append("\n          RTxJustStr _CreateRef9 = _AutoRef8.make();");
    gold.append("\n          __code_cost += 1;");
    gold.append("\n          _CreateRef9.str = _AutoExpr10.str;");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      __track(3);");
    gold.append("\n      if (tuesday.get()) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(4);");
    gold.append("\n        {");
    gold.append("\n          NtTable<RTxJustStr> _AutoRef11 = tbl;");
    gold.append("\n          RTxJustStr _AutoExpr13 = new RTxJustStr(\"Tu\");");
    gold.append("\n          RTxJustStr _CreateRef12 = _AutoRef11.make();");
    gold.append("\n          __code_cost += 1;");
    gold.append("\n          _CreateRef12.str = _AutoExpr13.str;");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      __track(5);");
    gold.append("\n      if (wednesday.get()) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(6);");
    gold.append("\n        {");
    gold.append("\n          NtTable<RTxJustStr> _AutoRef14 = tbl;");
    gold.append("\n          RTxJustStr _AutoExpr16 = new RTxJustStr(\"Wed\");");
    gold.append("\n          RTxJustStr _CreateRef15 = _AutoRef14.make();");
    gold.append("\n          __code_cost += 1;");
    gold.append("\n          _CreateRef15.str = _AutoExpr16.str;");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      __track(7);");
    gold.append("\n      if (thursday.get()) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(8);");
    gold.append("\n        {");
    gold.append("\n          NtTable<RTxJustStr> _AutoRef17 = tbl;");
    gold.append("\n          RTxJustStr _AutoExpr19 = new RTxJustStr(\"Th\");");
    gold.append("\n          RTxJustStr _CreateRef18 = _AutoRef17.make();");
    gold.append("\n          __code_cost += 1;");
    gold.append("\n          _CreateRef18.str = _AutoExpr19.str;");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      __track(9);");
    gold.append("\n      if (friday.get()) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(10);");
    gold.append("\n        {");
    gold.append("\n          NtTable<RTxJustStr> _AutoRef20 = tbl;");
    gold.append("\n          RTxJustStr _AutoExpr22 = new RTxJustStr(\"Fr\");");
    gold.append("\n          RTxJustStr _CreateRef21 = _AutoRef20.make();");
    gold.append("\n          __code_cost += 1;");
    gold.append("\n          _CreateRef21.str = _AutoExpr22.str;");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      __track(11);");
    gold.append("\n      if (saturday.get()) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(12);");
    gold.append("\n        {");
    gold.append("\n          NtTable<RTxJustStr> _AutoRef23 = tbl;");
    gold.append("\n          RTxJustStr _AutoExpr25 = new RTxJustStr(\"Sa\");");
    gold.append("\n          RTxJustStr _CreateRef24 = _AutoRef23.make();");
    gold.append("\n          __code_cost += 1;");
    gold.append("\n          _CreateRef24.str = _AutoExpr25.str;");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      __track(13);");
    gold.append("\n      if (sunday.get()) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(14);");
    gold.append("\n        {");
    gold.append("\n          NtTable<RTxJustStr> _AutoRef26 = tbl;");
    gold.append("\n          RTxJustStr _AutoExpr28 = new RTxJustStr(\"Su\");");
    gold.append("\n          RTxJustStr _CreateRef27 = _AutoRef26.make();");
    gold.append("\n          __code_cost += 1;");
    gold.append("\n          _CreateRef27.str = _AutoExpr28.str;");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      __track(15);");
    gold.append("\n      return LibString.join((tbl.iterate(true)).transform((item) -> item.str), \", \");");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += monday.__memory();");
    gold.append("\n      __sum += tuesday.__memory();");
    gold.append("\n      __sum += wednesday.__memory();");
    gold.append("\n      __sum += thursday.__memory();");
    gold.append("\n      __sum += friday.__memory();");
    gold.append("\n      __sum += saturday.__memory();");
    gold.append("\n      __sum += sunday.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_WeekPattern;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"monday\":");
    gold.append("\n          return monday;");
    gold.append("\n        case \"tuesday\":");
    gold.append("\n          return tuesday;");
    gold.append("\n        case \"wednesday\":");
    gold.append("\n          return wednesday;");
    gold.append("\n        case \"thursday\":");
    gold.append("\n          return thursday;");
    gold.append("\n        case \"friday\":");
    gold.append("\n          return friday;");
    gold.append("\n        case \"saturday\":");
    gold.append("\n          return saturday;");
    gold.append("\n        case \"sunday\":");
    gold.append("\n          return sunday;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"monday\":");
    gold.append("\n              monday.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"tuesday\":");
    gold.append("\n              tuesday.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"wednesday\":");
    gold.append("\n              wednesday.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"thursday\":");
    gold.append("\n              thursday.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"friday\":");
    gold.append("\n              friday.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"saturday\":");
    gold.append("\n              saturday.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"sunday\":");
    gold.append("\n              sunday.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"monday\":");
    gold.append("\n              monday.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"tuesday\":");
    gold.append("\n              tuesday.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"wednesday\":");
    gold.append("\n              wednesday.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"thursday\":");
    gold.append("\n              thursday.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"friday\":");
    gold.append("\n              friday.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"saturday\":");
    gold.append("\n              saturday.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"sunday\":");
    gold.append("\n              sunday.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"monday\");");
    gold.append("\n      monday.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"tuesday\");");
    gold.append("\n      tuesday.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"wednesday\");");
    gold.append("\n      wednesday.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"thursday\");");
    gold.append("\n      thursday.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"friday\");");
    gold.append("\n      friday.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"saturday\");");
    gold.append("\n      saturday.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"sunday\");");
    gold.append("\n      sunday.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        monday.__commit(\"monday\", __forward, __reverse);");
    gold.append("\n        tuesday.__commit(\"tuesday\", __forward, __reverse);");
    gold.append("\n        wednesday.__commit(\"wednesday\", __forward, __reverse);");
    gold.append("\n        thursday.__commit(\"thursday\", __forward, __reverse);");
    gold.append("\n        friday.__commit(\"friday\", __forward, __reverse);");
    gold.append("\n        saturday.__commit(\"saturday\", __forward, __reverse);");
    gold.append("\n        sunday.__commit(\"sunday\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        monday.__revert();");
    gold.append("\n        tuesday.__revert();");
    gold.append("\n        wednesday.__revert();");
    gold.append("\n        thursday.__revert();");
    gold.append("\n        friday.__revert();");
    gold.append("\n        saturday.__revert();");
    gold.append("\n        sunday.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public RTxWeekPattern __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"WeekPattern\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxWeekPattern implements DeltaNode {");
    gold.append("\n    private DBoolean __dmonday;");
    gold.append("\n    private DBoolean __dtuesday;");
    gold.append("\n    private DBoolean __dwednesday;");
    gold.append("\n    private DBoolean __dthursday;");
    gold.append("\n    private DBoolean __dfriday;");
    gold.append("\n    private DBoolean __dsaturday;");
    gold.append("\n    private DBoolean __dsunday;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxWeekPattern() {");
    gold.append("\n      __dmonday = new DBoolean();");
    gold.append("\n      __dtuesday = new DBoolean();");
    gold.append("\n      __dwednesday = new DBoolean();");
    gold.append("\n      __dthursday = new DBoolean();");
    gold.append("\n      __dfriday = new DBoolean();");
    gold.append("\n      __dsaturday = new DBoolean();");
    gold.append("\n      __dsunday = new DBoolean();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dmonday.__memory();");
    gold.append("\n      __sum += __dtuesday.__memory();");
    gold.append("\n      __sum += __dwednesday.__memory();");
    gold.append("\n      __sum += __dthursday.__memory();");
    gold.append("\n      __sum += __dfriday.__memory();");
    gold.append("\n      __sum += __dsaturday.__memory();");
    gold.append("\n      __sum += __dsunday.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxWeekPattern __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 7;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dmonday.show(__item.monday.get(), __obj.planField(\"monday\"));");
    gold.append("\n      __dtuesday.show(__item.tuesday.get(), __obj.planField(\"tuesday\"));");
    gold.append("\n      __dwednesday.show(__item.wednesday.get(), __obj.planField(\"wednesday\"));");
    gold.append("\n      __dthursday.show(__item.thursday.get(), __obj.planField(\"thursday\"));");
    gold.append("\n      __dfriday.show(__item.friday.get(), __obj.planField(\"friday\"));");
    gold.append("\n      __dsaturday.show(__item.saturday.get(), __obj.planField(\"saturday\"));");
    gold.append("\n      __dsunday.show(__item.sunday.get(), __obj.planField(\"sunday\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dmonday.clear();");
    gold.append("\n      __dtuesday.clear();");
    gold.append("\n      __dwednesday.clear();");
    gold.append("\n      __dthursday.clear();");
    gold.append("\n      __dfriday.clear();");
    gold.append("\n      __dsaturday.clear();");
    gold.append("\n      __dsunday.clear();");
    gold.append("\n      __code_cost += 7;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication() {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __debug(JsonStreamWriter __writer) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(16);");
    gold.append("\n    wp.monday.set(true);");
    gold.append("\n    __track(17);");
    gold.append("\n    wp.wednesday.set(true);");
    gold.append("\n    __track(18);");
    gold.append("\n    wp.friday.set(true);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--=[LivingDocumentFactory COMPILING]=---");
    gold.append("\n--=[LivingDocumentFactory MADE]=---");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"wp\":{\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"WeekPattern\"},\"privacy\":\"public\"},\"nice\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"JustStr\":{\"nature\":\"native_message\",\"name\":\"JustStr\",\"anonymous\":false,\"fields\":{\"str\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"WeekPattern\":{\"nature\":\"reactive_record\",\"name\":\"WeekPattern\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"monday\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"tuesday\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"wednesday\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"thursday\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"friday\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"saturday\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"sunday\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"}}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"wp\":{\"monday\":true,\"wednesday\":true,\"friday\":true},\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:4");
    gold.append("\nMEMORY:808");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"wp\":{\"monday\":true,\"tuesday\":false,\"wednesday\":true,\"thursday\":false,\"friday\":true,\"saturday\":false,\"sunday\":false},\"nice\":\"Mo, Wed, Fr\"},\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"wp\":{\"monday\":true,\"tuesday\":false,\"wednesday\":true,\"thursday\":false,\"friday\":true,\"saturday\":false,\"sunday\":false},\"nice\":\"Mo, Wed, Fr\"},\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:1690");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"wp\":{\"id\":0,\"monday\":true,\"tuesday\":false,\"wednesday\":true,\"thursday\":false,\"friday\":true,\"saturday\":false,\"sunday\":false},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"wp\":{\"id\":0,\"monday\":true,\"tuesday\":false,\"wednesday\":true,\"thursday\":false,\"friday\":true,\"saturday\":false,\"sunday\":false},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"wp\":{\"id\":0,\"monday\":true,\"tuesday\":false,\"wednesday\":true,\"thursday\":false,\"friday\":true,\"saturday\":false,\"sunday\":false},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
}
